ARM GAS  /tmp/ccEDhcbi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f4xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	SystemInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	SystemInit:
  25              	.LFB126:
  26              		.file 1 "Src/system_stm32f4xx.c"
   1:Src/system_stm32f4xx.c **** /**
   2:Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f4xx.c ****   * @version V2.6.0
   6:Src/system_stm32f4xx.c ****   * @date    04-November-2016
   7:Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:Src/system_stm32f4xx.c ****   *
   9:Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
  10:Src/system_stm32f4xx.c ****   *   user application:
  11:Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  13:Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  14:Src/system_stm32f4xx.c ****   *
  15:Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  17:Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  18:Src/system_stm32f4xx.c ****   *                                     
  19:Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  21:Src/system_stm32f4xx.c ****   *                                 during program execution.
  22:Src/system_stm32f4xx.c ****   *
  23:Src/system_stm32f4xx.c ****   *
  24:Src/system_stm32f4xx.c ****   ******************************************************************************
  25:Src/system_stm32f4xx.c ****   * @attention
  26:Src/system_stm32f4xx.c ****   *
  27:Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  28:Src/system_stm32f4xx.c ****   *
  29:Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  30:Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  31:Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  32:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
ARM GAS  /tmp/ccEDhcbi.s 			page 2


  33:Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  36:Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  38:Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  39:Src/system_stm32f4xx.c ****   *
  40:Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:Src/system_stm32f4xx.c ****   *
  51:Src/system_stm32f4xx.c ****   ******************************************************************************
  52:Src/system_stm32f4xx.c ****   */
  53:Src/system_stm32f4xx.c **** 
  54:Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  55:Src/system_stm32f4xx.c ****   * @{
  56:Src/system_stm32f4xx.c ****   */
  57:Src/system_stm32f4xx.c **** 
  58:Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  59:Src/system_stm32f4xx.c ****   * @{
  60:Src/system_stm32f4xx.c ****   */  
  61:Src/system_stm32f4xx.c ****   
  62:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  63:Src/system_stm32f4xx.c ****   * @{
  64:Src/system_stm32f4xx.c ****   */
  65:Src/system_stm32f4xx.c **** 
  66:Src/system_stm32f4xx.c **** 
  67:Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  68:Src/system_stm32f4xx.c **** 
  69:Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  70:Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  71:Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  72:Src/system_stm32f4xx.c **** 
  73:Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  74:Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  75:Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  76:Src/system_stm32f4xx.c **** 
  77:Src/system_stm32f4xx.c **** /**
  78:Src/system_stm32f4xx.c ****   * @}
  79:Src/system_stm32f4xx.c ****   */
  80:Src/system_stm32f4xx.c **** 
  81:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  82:Src/system_stm32f4xx.c ****   * @{
  83:Src/system_stm32f4xx.c ****   */
  84:Src/system_stm32f4xx.c **** 
  85:Src/system_stm32f4xx.c **** /**
  86:Src/system_stm32f4xx.c ****   * @}
  87:Src/system_stm32f4xx.c ****   */
  88:Src/system_stm32f4xx.c **** 
  89:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
ARM GAS  /tmp/ccEDhcbi.s 			page 3


  90:Src/system_stm32f4xx.c ****   * @{
  91:Src/system_stm32f4xx.c ****   */
  92:Src/system_stm32f4xx.c **** 
  93:Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  94:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  95:Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  96:Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  97:Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  98:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  99:Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
 100:Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
 101:Src/system_stm32f4xx.c ****  
 102:Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
 103:Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 104:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 105:Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
 106:Src/system_stm32f4xx.c ****           STM32F479xx */
 107:Src/system_stm32f4xx.c **** 
 108:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 109:Src/system_stm32f4xx.c ****      Internal SRAM. */
 110:Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 111:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 112:Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 113:Src/system_stm32f4xx.c **** /******************************************************************************/
 114:Src/system_stm32f4xx.c **** 
 115:Src/system_stm32f4xx.c **** /**
 116:Src/system_stm32f4xx.c ****   * @}
 117:Src/system_stm32f4xx.c ****   */
 118:Src/system_stm32f4xx.c **** 
 119:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 120:Src/system_stm32f4xx.c ****   * @{
 121:Src/system_stm32f4xx.c ****   */
 122:Src/system_stm32f4xx.c **** 
 123:Src/system_stm32f4xx.c **** /**
 124:Src/system_stm32f4xx.c ****   * @}
 125:Src/system_stm32f4xx.c ****   */
 126:Src/system_stm32f4xx.c **** 
 127:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 128:Src/system_stm32f4xx.c ****   * @{
 129:Src/system_stm32f4xx.c ****   */
 130:Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 131:Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 134:Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 135:Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 136:Src/system_stm32f4xx.c ****                variable is updated automatically.
 137:Src/system_stm32f4xx.c ****   */
 138:Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 139:Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 140:Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 141:Src/system_stm32f4xx.c **** /**
 142:Src/system_stm32f4xx.c ****   * @}
 143:Src/system_stm32f4xx.c ****   */
 144:Src/system_stm32f4xx.c **** 
 145:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 146:Src/system_stm32f4xx.c ****   * @{
ARM GAS  /tmp/ccEDhcbi.s 			page 4


 147:Src/system_stm32f4xx.c ****   */
 148:Src/system_stm32f4xx.c **** 
 149:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 150:Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 151:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 152:Src/system_stm32f4xx.c **** 
 153:Src/system_stm32f4xx.c **** /**
 154:Src/system_stm32f4xx.c ****   * @}
 155:Src/system_stm32f4xx.c ****   */
 156:Src/system_stm32f4xx.c **** 
 157:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 158:Src/system_stm32f4xx.c ****   * @{
 159:Src/system_stm32f4xx.c ****   */
 160:Src/system_stm32f4xx.c **** 
 161:Src/system_stm32f4xx.c **** /**
 162:Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 163:Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 164:Src/system_stm32f4xx.c ****   *         configuration.
 165:Src/system_stm32f4xx.c ****   * @param  None
 166:Src/system_stm32f4xx.c ****   * @retval None
 167:Src/system_stm32f4xx.c ****   */
 168:Src/system_stm32f4xx.c **** void SystemInit(void)
 169:Src/system_stm32f4xx.c **** {
  27              		.loc 1 169 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 170:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  32              		.loc 1 172 0
  33 0000 1049     		ldr	r1, .L3
 173:Src/system_stm32f4xx.c ****   #endif
 174:Src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 175:Src/system_stm32f4xx.c ****   /* Set HSION bit */
 176:Src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  34              		.loc 1 176 0
  35 0002 114B     		ldr	r3, .L3+4
 172:Src/system_stm32f4xx.c ****   #endif
  36              		.loc 1 172 0
  37 0004 D1F88820 		ldr	r2, [r1, #136]
  38 0008 42F47002 		orr	r2, r2, #15728640
 169:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
  39              		.loc 1 169 0
  40 000c 10B4     		push	{r4}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 4, -4
 172:Src/system_stm32f4xx.c ****   #endif
  44              		.loc 1 172 0
  45 000e C1F88820 		str	r2, [r1, #136]
  46              		.loc 1 176 0
  47 0012 1A68     		ldr	r2, [r3]
 177:Src/system_stm32f4xx.c **** 
 178:Src/system_stm32f4xx.c ****   /* Reset CFGR register */
 179:Src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
ARM GAS  /tmp/ccEDhcbi.s 			page 5


 180:Src/system_stm32f4xx.c **** 
 181:Src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 182:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 183:Src/system_stm32f4xx.c **** 
 184:Src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 185:Src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  48              		.loc 1 185 0
  49 0014 0D4C     		ldr	r4, .L3+8
 179:Src/system_stm32f4xx.c **** 
  50              		.loc 1 179 0
  51 0016 0020     		movs	r0, #0
 176:Src/system_stm32f4xx.c **** 
  52              		.loc 1 176 0
  53 0018 42F00102 		orr	r2, r2, #1
  54 001c 1A60     		str	r2, [r3]
 179:Src/system_stm32f4xx.c **** 
  55              		.loc 1 179 0
  56 001e 9860     		str	r0, [r3, #8]
 182:Src/system_stm32f4xx.c **** 
  57              		.loc 1 182 0
  58 0020 1A68     		ldr	r2, [r3]
  59 0022 22F08472 		bic	r2, r2, #17301504
  60 0026 22F48032 		bic	r2, r2, #65536
  61 002a 1A60     		str	r2, [r3]
  62              		.loc 1 185 0
  63 002c 5C60     		str	r4, [r3, #4]
 186:Src/system_stm32f4xx.c **** 
 187:Src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 188:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  64              		.loc 1 188 0
  65 002e 1A68     		ldr	r2, [r3]
 189:Src/system_stm32f4xx.c **** 
 190:Src/system_stm32f4xx.c ****   /* Disable all interrupts */
 191:Src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 192:Src/system_stm32f4xx.c **** 
 193:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 194:Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 195:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 196:Src/system_stm32f4xx.c **** 
 197:Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 198:Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 199:Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 200:Src/system_stm32f4xx.c **** #else
 201:Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  66              		.loc 1 201 0
  67 0030 4FF00064 		mov	r4, #134217728
 188:Src/system_stm32f4xx.c **** 
  68              		.loc 1 188 0
  69 0034 22F48022 		bic	r2, r2, #262144
  70 0038 1A60     		str	r2, [r3]
 191:Src/system_stm32f4xx.c **** 
  71              		.loc 1 191 0
  72 003a D860     		str	r0, [r3, #12]
  73              		.loc 1 201 0
  74 003c 8C60     		str	r4, [r1, #8]
 202:Src/system_stm32f4xx.c **** #endif
 203:Src/system_stm32f4xx.c **** }
ARM GAS  /tmp/ccEDhcbi.s 			page 6


  75              		.loc 1 203 0
  76 003e 5DF8044B 		ldr	r4, [sp], #4
  77              	.LCFI1:
  78              		.cfi_restore 4
  79              		.cfi_def_cfa_offset 0
  80 0042 7047     		bx	lr
  81              	.L4:
  82              		.align	2
  83              	.L3:
  84 0044 00ED00E0 		.word	-536810240
  85 0048 00380240 		.word	1073887232
  86 004c 10300024 		.word	603992080
  87              		.cfi_endproc
  88              	.LFE126:
  90              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  91              		.align	1
  92              		.p2align 2,,3
  93              		.global	SystemCoreClockUpdate
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	SystemCoreClockUpdate:
 100              	.LFB127:
 204:Src/system_stm32f4xx.c **** 
 205:Src/system_stm32f4xx.c **** /**
 206:Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 207:Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 208:Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 209:Src/system_stm32f4xx.c ****   *         other parameters.
 210:Src/system_stm32f4xx.c ****   *           
 211:Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 212:Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 213:Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 214:Src/system_stm32f4xx.c ****   *     
 215:Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 216:Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 217:Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 218:Src/system_stm32f4xx.c ****   *             
 219:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 220:Src/system_stm32f4xx.c ****   *                                              
 221:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 222:Src/system_stm32f4xx.c ****   *                          
 223:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 224:Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 225:Src/system_stm32f4xx.c ****   *         
 226:Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 227:Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 228:Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 229:Src/system_stm32f4xx.c ****   *    
 230:Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 231:Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 232:Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 233:Src/system_stm32f4xx.c ****   *              may have wrong result.
 234:Src/system_stm32f4xx.c ****   *                
 235:Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 236:Src/system_stm32f4xx.c ****   *           value for HSE crystal.
ARM GAS  /tmp/ccEDhcbi.s 			page 7


 237:Src/system_stm32f4xx.c ****   *     
 238:Src/system_stm32f4xx.c ****   * @param  None
 239:Src/system_stm32f4xx.c ****   * @retval None
 240:Src/system_stm32f4xx.c ****   */
 241:Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 242:Src/system_stm32f4xx.c **** {
 101              		.loc 1 242 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.LVL0:
 243:Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 244:Src/system_stm32f4xx.c ****   
 245:Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 107              		.loc 1 246 0
 108 0000 164A     		ldr	r2, .L13
 109 0002 9368     		ldr	r3, [r2, #8]
 110              	.LVL1:
 111 0004 03F00C03 		and	r3, r3, #12
 112              	.LVL2:
 247:Src/system_stm32f4xx.c **** 
 248:Src/system_stm32f4xx.c ****   switch (tmp)
 113              		.loc 1 248 0
 114 0008 042B     		cmp	r3, #4
 115 000a 24D0     		beq	.L11
 116 000c 082B     		cmp	r3, #8
 117 000e 0AD0     		beq	.L8
 118 0010 134B     		ldr	r3, .L13+4
 119              	.LVL3:
 120              	.L7:
 249:Src/system_stm32f4xx.c ****   {
 250:Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 251:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 252:Src/system_stm32f4xx.c ****       break;
 253:Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 254:Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 255:Src/system_stm32f4xx.c ****       break;
 256:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 257:Src/system_stm32f4xx.c **** 
 258:Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 259:Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 260:Src/system_stm32f4xx.c ****          */    
 261:Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 262:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 263:Src/system_stm32f4xx.c ****       
 264:Src/system_stm32f4xx.c ****       if (pllsource != 0)
 265:Src/system_stm32f4xx.c ****       {
 266:Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 267:Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 268:Src/system_stm32f4xx.c ****       }
 269:Src/system_stm32f4xx.c ****       else
 270:Src/system_stm32f4xx.c ****       {
 271:Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 272:Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 273:Src/system_stm32f4xx.c ****       }
ARM GAS  /tmp/ccEDhcbi.s 			page 8


 274:Src/system_stm32f4xx.c **** 
 275:Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 276:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 277:Src/system_stm32f4xx.c ****       break;
 278:Src/system_stm32f4xx.c ****     default:
 279:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 280:Src/system_stm32f4xx.c ****       break;
 281:Src/system_stm32f4xx.c ****   }
 282:Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 283:Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 284:Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 121              		.loc 1 284 0
 122 0012 124A     		ldr	r2, .L13
 123 0014 1348     		ldr	r0, .L13+8
 124 0016 9268     		ldr	r2, [r2, #8]
 125              	.LVL4:
 285:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 286:Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 126              		.loc 1 286 0
 127 0018 1349     		ldr	r1, .L13+12
 284:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 128              		.loc 1 284 0
 129 001a C2F30312 		ubfx	r2, r2, #4, #4
 130              	.LVL5:
 131 001e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 132              		.loc 1 286 0
 133 0020 D340     		lsrs	r3, r3, r2
 134 0022 0B60     		str	r3, [r1]
 135 0024 7047     		bx	lr
 136              	.LVL6:
 137              	.L8:
 261:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 138              		.loc 1 261 0
 139 0026 5068     		ldr	r0, [r2, #4]
 140              	.LVL7:
 262:Src/system_stm32f4xx.c ****       
 141              		.loc 1 262 0
 142 0028 5168     		ldr	r1, [r2, #4]
 267:Src/system_stm32f4xx.c ****       }
 143              		.loc 1 267 0
 144 002a 5268     		ldr	r2, [r2, #4]
 264:Src/system_stm32f4xx.c ****       {
 145              		.loc 1 264 0
 146 002c 4302     		lsls	r3, r0, #9
 147              	.LVL8:
 272:Src/system_stm32f4xx.c ****       }
 148              		.loc 1 272 0
 149 002e C2F38812 		ubfx	r2, r2, #6, #9
 262:Src/system_stm32f4xx.c ****       
 150              		.loc 1 262 0
 151 0032 01F03F01 		and	r1, r1, #63
 152              	.LVL9:
 267:Src/system_stm32f4xx.c ****       }
 153              		.loc 1 267 0
 154 0036 4CBF     		ite	mi
 155 0038 0C4B     		ldrmi	r3, .L13+16
 272:Src/system_stm32f4xx.c ****       }
ARM GAS  /tmp/ccEDhcbi.s 			page 9


 156              		.loc 1 272 0
 157 003a 094B     		ldrpl	r3, .L13+4
 158 003c B3FBF1F3 		udiv	r3, r3, r1
 159 0040 03FB02F3 		mul	r3, r3, r2
 160              	.LVL10:
 275:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 161              		.loc 1 275 0
 162 0044 054A     		ldr	r2, .L13
 163 0046 5268     		ldr	r2, [r2, #4]
 164              	.LVL11:
 165 0048 C2F30142 		ubfx	r2, r2, #16, #2
 166              	.LVL12:
 167 004c 0132     		adds	r2, r2, #1
 168 004e 5200     		lsls	r2, r2, #1
 276:Src/system_stm32f4xx.c ****       break;
 169              		.loc 1 276 0
 170 0050 B3FBF2F3 		udiv	r3, r3, r2
 171              	.LVL13:
 277:Src/system_stm32f4xx.c ****     default:
 172              		.loc 1 277 0
 173 0054 DDE7     		b	.L7
 174              	.LVL14:
 175              	.L11:
 248:Src/system_stm32f4xx.c ****   {
 176              		.loc 1 248 0
 177 0056 054B     		ldr	r3, .L13+16
 178              	.LVL15:
 179 0058 DBE7     		b	.L7
 180              	.L14:
 181 005a 00BF     		.align	2
 182              	.L13:
 183 005c 00380240 		.word	1073887232
 184 0060 0024F400 		.word	16000000
 185 0064 00000000 		.word	.LANCHOR1
 186 0068 00000000 		.word	.LANCHOR0
 187 006c 00127A00 		.word	8000000
 188              		.cfi_endproc
 189              	.LFE127:
 191              		.global	APBPrescTable
 192              		.global	AHBPrescTable
 193              		.global	SystemCoreClock
 194              		.section	.data.SystemCoreClock,"aw",%progbits
 195              		.align	2
 196              		.set	.LANCHOR0,. + 0
 199              	SystemCoreClock:
 200 0000 0024F400 		.word	16000000
 201              		.section	.rodata.AHBPrescTable,"a",%progbits
 202              		.align	2
 203              		.set	.LANCHOR1,. + 0
 206              	AHBPrescTable:
 207 0000 00       		.byte	0
 208 0001 00       		.byte	0
 209 0002 00       		.byte	0
 210 0003 00       		.byte	0
 211 0004 00       		.byte	0
 212 0005 00       		.byte	0
 213 0006 00       		.byte	0
ARM GAS  /tmp/ccEDhcbi.s 			page 10


 214 0007 00       		.byte	0
 215 0008 01       		.byte	1
 216 0009 02       		.byte	2
 217 000a 03       		.byte	3
 218 000b 04       		.byte	4
 219 000c 06       		.byte	6
 220 000d 07       		.byte	7
 221 000e 08       		.byte	8
 222 000f 09       		.byte	9
 223              		.section	.rodata.APBPrescTable,"a",%progbits
 224              		.align	2
 227              	APBPrescTable:
 228 0000 00       		.byte	0
 229 0001 00       		.byte	0
 230 0002 00       		.byte	0
 231 0003 00       		.byte	0
 232 0004 01       		.byte	1
 233 0005 02       		.byte	2
 234 0006 03       		.byte	3
 235 0007 04       		.byte	4
 236              		.text
 237              	.Letext0:
 238              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 239              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 240              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 241              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 242              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 243              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 244              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 245              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 246              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccEDhcbi.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccEDhcbi.s:16     .text.SystemInit:0000000000000000 $t
     /tmp/ccEDhcbi.s:24     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccEDhcbi.s:84     .text.SystemInit:0000000000000044 $d
     /tmp/ccEDhcbi.s:91     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccEDhcbi.s:99     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccEDhcbi.s:183    .text.SystemCoreClockUpdate:000000000000005c $d
     /tmp/ccEDhcbi.s:227    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccEDhcbi.s:206    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccEDhcbi.s:199    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccEDhcbi.s:195    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccEDhcbi.s:202    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccEDhcbi.s:224    .rodata.APBPrescTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
