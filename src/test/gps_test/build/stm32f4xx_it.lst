ARM GAS  /tmp/ccmlAapV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	NMI_Handler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	NMI_Handler:
  25              	.LFB144:
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE144:
  34 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  35              		.align	1
  36              		.p2align 2,,3
  37              		.global	HardFault_Handler
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu fpv4-sp-d16
  43              	HardFault_Handler:
  44              	.LFB127:
  45              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccmlAapV.s 			page 2


  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  44:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  45:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  49:Src/stm32f4xx_it.c **** /******************************************************************************/
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /**
  52:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  53:Src/stm32f4xx_it.c **** */
  54:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  55:Src/stm32f4xx_it.c **** {
  56:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  59:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  62:Src/stm32f4xx_it.c **** }
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /**
  65:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  66:Src/stm32f4xx_it.c **** */
  67:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  68:Src/stm32f4xx_it.c **** {
  46              		.loc 1 68 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccmlAapV.s 			page 3


  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE127:
  57 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.p2align 2,,3
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB128:
  69:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c **** 
  71:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32f4xx_it.c ****   while (1)
  73:Src/stm32f4xx_it.c ****   {
  74:Src/stm32f4xx_it.c ****   }
  75:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  76:Src/stm32f4xx_it.c **** 
  77:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  78:Src/stm32f4xx_it.c **** }
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c **** /**
  81:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  82:Src/stm32f4xx_it.c **** */
  83:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  84:Src/stm32f4xx_it.c **** {
  68              		.loc 1 84 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE128:
  79 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.p2align 2,,3
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB129:
  85:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  86:Src/stm32f4xx_it.c **** 
  87:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  88:Src/stm32f4xx_it.c ****   while (1)
  89:Src/stm32f4xx_it.c ****   {
ARM GAS  /tmp/ccmlAapV.s 			page 4


  90:Src/stm32f4xx_it.c ****   }
  91:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  92:Src/stm32f4xx_it.c **** 
  93:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  94:Src/stm32f4xx_it.c **** }
  95:Src/stm32f4xx_it.c **** 
  96:Src/stm32f4xx_it.c **** /**
  97:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  98:Src/stm32f4xx_it.c **** */
  99:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 100:Src/stm32f4xx_it.c **** {
  90              		.loc 1 100 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE129:
 101 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.p2align 2,,3
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB130:
 101:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 102:Src/stm32f4xx_it.c **** 
 103:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 104:Src/stm32f4xx_it.c ****   while (1)
 105:Src/stm32f4xx_it.c ****   {
 106:Src/stm32f4xx_it.c ****   }
 107:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 108:Src/stm32f4xx_it.c **** 
 109:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 110:Src/stm32f4xx_it.c **** }
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 114:Src/stm32f4xx_it.c **** */
 115:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 116:Src/stm32f4xx_it.c **** {
 112              		.loc 1 116 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L9:
 119 0000 FEE7     		b	.L9
 120              		.cfi_endproc
 121              	.LFE130:
ARM GAS  /tmp/ccmlAapV.s 			page 5


 123 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 124              		.align	1
 125              		.p2align 2,,3
 126              		.global	SVC_Handler
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	SVC_Handler:
 133              	.LFB142:
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE142:
 142 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.p2align 2,,3
 145              		.global	DebugMon_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	DebugMon_Handler:
 152              	.LFB140:
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE140:
 161 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 162              		.align	1
 163              		.p2align 2,,3
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB133:
 117:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 120:Src/stm32f4xx_it.c ****   while (1)
 121:Src/stm32f4xx_it.c ****   {
 122:Src/stm32f4xx_it.c ****   }
 123:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 124:Src/stm32f4xx_it.c **** 
 125:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 126:Src/stm32f4xx_it.c **** }
 127:Src/stm32f4xx_it.c **** 
 128:Src/stm32f4xx_it.c **** /**
 129:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccmlAapV.s 			page 6


 130:Src/stm32f4xx_it.c **** */
 131:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 132:Src/stm32f4xx_it.c **** {
 133:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 134:Src/stm32f4xx_it.c **** 
 135:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 136:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 137:Src/stm32f4xx_it.c **** 
 138:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 139:Src/stm32f4xx_it.c **** }
 140:Src/stm32f4xx_it.c **** 
 141:Src/stm32f4xx_it.c **** /**
 142:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 143:Src/stm32f4xx_it.c **** */
 144:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 145:Src/stm32f4xx_it.c **** {
 146:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 147:Src/stm32f4xx_it.c **** 
 148:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 149:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 150:Src/stm32f4xx_it.c **** 
 151:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 152:Src/stm32f4xx_it.c **** }
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c **** /**
 155:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 156:Src/stm32f4xx_it.c **** */
 157:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 158:Src/stm32f4xx_it.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE133:
 181 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 182              		.align	1
 183              		.p2align 2,,3
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	SysTick_Handler:
 191              	.LFB134:
 159:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 162:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 165:Src/stm32f4xx_it.c **** }
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c **** /**
 168:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
ARM GAS  /tmp/ccmlAapV.s 			page 7


 169:Src/stm32f4xx_it.c **** */
 170:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 171:Src/stm32f4xx_it.c **** {
 192              		.loc 1 171 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 171 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI0:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 172:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 173:Src/stm32f4xx_it.c **** 
 174:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 175:Src/stm32f4xx_it.c ****   HAL_IncTick();
 202              		.loc 1 175 0
 203 0002 FFF7FEFF 		bl	HAL_IncTick
 204              	.LVL0:
 176:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 177:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 180:Src/stm32f4xx_it.c **** }
 205              		.loc 1 180 0
 206 0006 BDE80840 		pop	{r3, lr}
 207              	.LCFI1:
 208              		.cfi_restore 14
 209              		.cfi_restore 3
 210              		.cfi_def_cfa_offset 0
 176:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 211              		.loc 1 176 0
 212 000a FFF7FEBF 		b	HAL_SYSTICK_IRQHandler
 213              	.LVL1:
 214              		.cfi_endproc
 215              	.LFE134:
 217 000e 00BF     		.section	.text.USART1_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.p2align 2,,3
 220              		.global	USART1_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	USART1_IRQHandler:
 227              	.LFB135:
 181:Src/stm32f4xx_it.c **** 
 182:Src/stm32f4xx_it.c **** /******************************************************************************/
 183:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 184:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 185:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 186:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 187:Src/stm32f4xx_it.c **** /******************************************************************************/
 188:Src/stm32f4xx_it.c **** 
 189:Src/stm32f4xx_it.c **** /**
 190:Src/stm32f4xx_it.c **** * @brief This function handles USART1 global interrupt.
ARM GAS  /tmp/ccmlAapV.s 			page 8


 191:Src/stm32f4xx_it.c **** */
 192:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 193:Src/stm32f4xx_it.c **** {
 228              		.loc 1 193 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 194:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 195:Src/stm32f4xx_it.c **** 
 196:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 197:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 233              		.loc 1 197 0
 234 0000 0148     		ldr	r0, .L16
 235 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 236              	.LVL2:
 237              	.L17:
 238 0006 00BF     		.align	2
 239              	.L16:
 240 0008 00000000 		.word	huart1
 241              		.cfi_endproc
 242              	.LFE135:
 244              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 245              		.align	1
 246              		.p2align 2,,3
 247              		.global	EXTI15_10_IRQHandler
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	EXTI15_10_IRQHandler:
 254              	.LFB136:
 198:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 199:Src/stm32f4xx_it.c **** 
 200:Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 201:Src/stm32f4xx_it.c **** }
 202:Src/stm32f4xx_it.c **** 
 203:Src/stm32f4xx_it.c **** /**
 204:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line[15:10] interrupts.
 205:Src/stm32f4xx_it.c **** */
 206:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 207:Src/stm32f4xx_it.c **** {
 255              		.loc 1 207 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI2:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 208:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 209:Src/stm32f4xx_it.c **** 
 210:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 211:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 264              		.loc 1 211 0
 265 0002 4FF48050 		mov	r0, #4096
ARM GAS  /tmp/ccmlAapV.s 			page 9


 266 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 267              	.LVL3:
 212:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 268              		.loc 1 212 0
 269 000a 4FF48040 		mov	r0, #16384
 213:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 214:Src/stm32f4xx_it.c **** 
 215:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 216:Src/stm32f4xx_it.c **** }
 270              		.loc 1 216 0
 271 000e BDE80840 		pop	{r3, lr}
 272              	.LCFI3:
 273              		.cfi_restore 14
 274              		.cfi_restore 3
 275              		.cfi_def_cfa_offset 0
 212:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 276              		.loc 1 212 0
 277 0012 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 278              	.LVL4:
 279              		.cfi_endproc
 280              	.LFE136:
 282 0016 00BF     		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.p2align 2,,3
 285              		.global	DMA2_Stream2_IRQHandler
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	DMA2_Stream2_IRQHandler:
 292              	.LFB137:
 217:Src/stm32f4xx_it.c **** 
 218:Src/stm32f4xx_it.c **** /**
 219:Src/stm32f4xx_it.c **** * @brief This function handles DMA2 stream2 global interrupt.
 220:Src/stm32f4xx_it.c **** */
 221:Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 222:Src/stm32f4xx_it.c **** {
 293              		.loc 1 222 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 223:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 224:Src/stm32f4xx_it.c **** 
 225:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 226:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 298              		.loc 1 226 0
 299 0000 0148     		ldr	r0, .L21
 300 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 301              	.LVL5:
 302              	.L22:
 303 0006 00BF     		.align	2
 304              	.L21:
 305 0008 00000000 		.word	hdma_usart1_rx
 306              		.cfi_endproc
 307              	.LFE137:
 309              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccmlAapV.s 			page 10


 310              		.align	1
 311              		.p2align 2,,3
 312              		.global	DMA2_Stream3_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	DMA2_Stream3_IRQHandler:
 319              	.LFB138:
 227:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 228:Src/stm32f4xx_it.c **** 
 229:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 230:Src/stm32f4xx_it.c **** }
 231:Src/stm32f4xx_it.c **** 
 232:Src/stm32f4xx_it.c **** /**
 233:Src/stm32f4xx_it.c **** * @brief This function handles DMA2 stream3 global interrupt.
 234:Src/stm32f4xx_it.c **** */
 235:Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 236:Src/stm32f4xx_it.c **** {
 320              		.loc 1 236 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 237:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 238:Src/stm32f4xx_it.c **** 
 239:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 240:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 325              		.loc 1 240 0
 326 0000 0148     		ldr	r0, .L24
 327 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 328              	.LVL6:
 329              	.L25:
 330 0006 00BF     		.align	2
 331              	.L24:
 332 0008 00000000 		.word	hdma_spi1_tx
 333              		.cfi_endproc
 334              	.LFE138:
 336              		.text
 337              	.Letext0:
 338              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 339              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 340              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 341              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 342              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 343              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 344              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 345              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 346              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 347              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 348              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 349              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 350              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 351              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 352              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccmlAapV.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccmlAapV.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccmlAapV.s:35     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccmlAapV.s:58     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccmlAapV.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccmlAapV.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccmlAapV.s:124    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:132    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccmlAapV.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:151    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccmlAapV.s:162    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccmlAapV.s:182    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccmlAapV.s:190    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccmlAapV.s:218    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccmlAapV.s:226    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccmlAapV.s:240    .text.USART1_IRQHandler:0000000000000008 $d
     /tmp/ccmlAapV.s:245    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/ccmlAapV.s:253    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/ccmlAapV.s:283    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccmlAapV.s:291    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccmlAapV.s:305    .text.DMA2_Stream2_IRQHandler:0000000000000008 $d
     /tmp/ccmlAapV.s:310    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccmlAapV.s:318    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
     /tmp/ccmlAapV.s:332    .text.DMA2_Stream3_IRQHandler:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_UART_IRQHandler
huart1
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_usart1_rx
hdma_spi1_tx
