ARM GAS  /tmp/ccXNMZEY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	SystemClock_Config
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	SystemClock_Config:
  25              	.LFB127:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
   8:Src/main.c    ****   * All rights reserved.
   9:Src/main.c    ****   *
  10:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  11:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  14:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  15:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  17:Src/main.c    ****   *    and/or other materials provided with the distribution.
  18:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  19:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  20:Src/main.c    ****   *    derived from this software without specific written permission.
  21:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  22:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  23:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  24:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  25:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  26:Src/main.c    ****   *    this license. 
  27:Src/main.c    ****   *
  28:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  29:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  30:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  31:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  32:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
ARM GAS  /tmp/ccXNMZEY.s 			page 2


  33:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  34:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  35:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  36:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  37:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  38:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  39:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  40:Src/main.c    ****   *
  41:Src/main.c    ****   ******************************************************************************
  42:Src/main.c    ****   */
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f4xx_hal.h"
  46:Src/main.c    **** #include "dma.h"
  47:Src/main.c    **** #include "fatfs.h"
  48:Src/main.c    **** #include "i2c.h"
  49:Src/main.c    **** #include "sdio.h"
  50:Src/main.c    **** #include "spi.h"
  51:Src/main.c    **** #include "tim.h"
  52:Src/main.c    **** #include "usart.h"
  53:Src/main.c    **** #include "gpio.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** #include "gui.h"
  57:Src/main.c    **** #include "app_main.h"
  58:Src/main.c    **** #include "gps.h"
  59:Src/main.c    **** #include "compass.h"
  60:Src/main.c    **** #include "inputs.h"
  61:Src/main.c    **** /* USER CODE END Includes */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PV */
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void SystemClock_Config(void);
  72:Src/main.c    **** void Error_Handler(void);
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN PFP */
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END 1 */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccXNMZEY.s 			page 3


  90:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  93:Src/main.c    ****   HAL_Init();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_DMA_Init();
 101:Src/main.c    ****   MX_SDIO_SD_Init();
 102:Src/main.c    ****   MX_SPI1_Init();
 103:Src/main.c    ****   MX_TIM3_Init();
 104:Src/main.c    ****   MX_FATFS_Init();
 105:Src/main.c    ****   MX_USART6_UART_Init();
 106:Src/main.c    ****   MX_I2C1_Init();
 107:Src/main.c    ****   MX_USART1_UART_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 110:Src/main.c    ****   gui_init();
 111:Src/main.c    ****   inputs_init();
 112:Src/main.c    ****   
 113:Src/main.c    ****   app_main_init();
 114:Src/main.c    **** 
 115:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 116:Src/main.c    ****   HAL_Delay(50);
 117:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 118:Src/main.c    ****   HAL_Delay(20);
 119:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 120:Src/main.c    **** 
 121:Src/main.c    **** //  uint8_t buf[512] = {0},
 122:Src/main.c    **** //      out[2048] = {0};
 123:Src/main.c    **** 
 124:Src/main.c    ****   compass_init();
 125:Src/main.c    ****   /* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Infinite loop */
 128:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 129:Src/main.c    ****   while (1)
 130:Src/main.c    ****   {
 131:Src/main.c    **** //      app_main_upd();
 132:Src/main.c    ****       inputs_update();
 133:Src/main.c    ****       HAL_Delay(10);
 134:Src/main.c    ****   /* USER CODE END WHILE */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE BEGIN 3 */
 137:Src/main.c    **** 
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /* USER CODE END 3 */
 140:Src/main.c    **** 
 141:Src/main.c    **** }
 142:Src/main.c    **** 
 143:Src/main.c    **** /** System Clock Configuration
 144:Src/main.c    **** */
 145:Src/main.c    **** void SystemClock_Config(void)
 146:Src/main.c    **** {
ARM GAS  /tmp/ccXNMZEY.s 			page 4


  27              		.loc 1 146 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 80
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 104
  42              	.LBB8:
 147:Src/main.c    **** 
 148:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 149:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 150:Src/main.c    **** 
 151:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 152:Src/main.c    ****     */
 153:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  43              		.loc 1 153 0
  44 0004 0020     		movs	r0, #0
  45 0006 284B     		ldr	r3, .L10
  46 0008 0190     		str	r0, [sp, #4]
  47 000a 196C     		ldr	r1, [r3, #64]
  48              	.LBE8:
  49              	.LBB9:
 154:Src/main.c    **** 
 155:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  50              		.loc 1 155 0
  51 000c 274A     		ldr	r2, .L10+4
  52              	.LBE9:
  53              	.LBB10:
 153:Src/main.c    **** 
  54              		.loc 1 153 0
  55 000e 41F08051 		orr	r1, r1, #268435456
  56 0012 1964     		str	r1, [r3, #64]
  57 0014 1B6C     		ldr	r3, [r3, #64]
  58 0016 03F08053 		and	r3, r3, #268435456
  59 001a 0193     		str	r3, [sp, #4]
  60 001c 019B     		ldr	r3, [sp, #4]
  61              	.LBE10:
  62              	.LBB11:
  63              		.loc 1 155 0
  64 001e 0290     		str	r0, [sp, #8]
  65 0020 1368     		ldr	r3, [r2]
  66 0022 23F44043 		bic	r3, r3, #49152
  67 0026 43F40043 		orr	r3, r3, #32768
  68 002a 1360     		str	r3, [r2]
  69 002c 1368     		ldr	r3, [r2]
  70 002e 03F44043 		and	r3, r3, #49152
  71 0032 0293     		str	r3, [sp, #8]
  72              	.LBE11:
 156:Src/main.c    **** 
ARM GAS  /tmp/ccXNMZEY.s 			page 5


 157:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 158:Src/main.c    ****     */
 159:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 160:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  73              		.loc 1 161 0
  74 0034 0224     		movs	r4, #2
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
  75              		.loc 1 163 0
  76 0036 0425     		movs	r5, #4
 159:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  77              		.loc 1 159 0
  78 0038 0126     		movs	r6, #1
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  79              		.loc 1 160 0
  80 003a 4FF48031 		mov	r1, #65536
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  81              		.loc 1 162 0
  82 003e 4FF48002 		mov	r2, #4194304
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
  83              		.loc 1 164 0
  84 0042 5423     		movs	r3, #84
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 167:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  85              		.loc 1 167 0
  86 0044 08A8     		add	r0, sp, #32
  87              	.LBB12:
 155:Src/main.c    **** 
  88              		.loc 1 155 0
  89 0046 029F     		ldr	r7, [sp, #8]
  90              	.LBE12:
 159:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  91              		.loc 1 159 0
  92 0048 0896     		str	r6, [sp, #32]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  93              		.loc 1 160 0
  94 004a 0991     		str	r1, [sp, #36]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  95              		.loc 1 161 0
  96 004c 0E94     		str	r4, [sp, #56]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
  97              		.loc 1 165 0
  98 004e 1294     		str	r4, [sp, #72]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
  99              		.loc 1 162 0
 100 0050 0F92     		str	r2, [sp, #60]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 101              		.loc 1 163 0
 102 0052 1095     		str	r5, [sp, #64]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 103              		.loc 1 166 0
 104 0054 1395     		str	r5, [sp, #76]
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 105              		.loc 1 164 0
 106 0056 1193     		str	r3, [sp, #68]
ARM GAS  /tmp/ccXNMZEY.s 			page 6


 107              		.loc 1 167 0
 108 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 109              	.LVL0:
 110 005c 00B1     		cbz	r0, .L2
 111              	.L6:
 112 005e FEE7     		b	.L6
 113              	.L2:
 114 0060 0346     		mov	r3, r0
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    **** 
 172:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 173:Src/main.c    ****     */
 174:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 175:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 176:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 177:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 179:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 180:Src/main.c    **** 
 181:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 115              		.loc 1 181 0
 116 0062 2146     		mov	r1, r4
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 117              		.loc 1 178 0
 118 0064 4FF48052 		mov	r2, #4096
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 119              		.loc 1 174 0
 120 0068 0F26     		movs	r6, #15
 121              		.loc 1 181 0
 122 006a 03A8     		add	r0, sp, #12
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 123              		.loc 1 176 0
 124 006c 0494     		str	r4, [sp, #16]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 125              		.loc 1 177 0
 126 006e 0593     		str	r3, [sp, #20]
 179:Src/main.c    **** 
 127              		.loc 1 179 0
 128 0070 0793     		str	r3, [sp, #28]
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 129              		.loc 1 174 0
 130 0072 0396     		str	r6, [sp, #12]
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 131              		.loc 1 178 0
 132 0074 0692     		str	r2, [sp, #24]
 133              		.loc 1 181 0
 134 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 135              	.LVL1:
 136 007a 0446     		mov	r4, r0
 137 007c 00B1     		cbz	r0, .L4
 138              	.L7:
 139 007e FEE7     		b	.L7
 140              	.L4:
 182:Src/main.c    ****   {
 183:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccXNMZEY.s 			page 7


 184:Src/main.c    ****   }
 185:Src/main.c    **** 
 186:Src/main.c    ****     /**Configure the Systick interrupt time 
 187:Src/main.c    ****     */
 188:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 141              		.loc 1 188 0
 142 0080 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 143              	.LVL2:
 144 0084 0A4B     		ldr	r3, .L10+8
 145 0086 A3FB0030 		umull	r3, r0, r3, r0
 146 008a 8009     		lsrs	r0, r0, #6
 147 008c FFF7FEFF 		bl	HAL_SYSTICK_Config
 148              	.LVL3:
 189:Src/main.c    **** 
 190:Src/main.c    ****     /**Configure the Systick 
 191:Src/main.c    ****     */
 192:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 149              		.loc 1 192 0
 150 0090 2846     		mov	r0, r5
 151 0092 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 152              	.LVL4:
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 195:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 153              		.loc 1 195 0
 154 0096 2246     		mov	r2, r4
 155 0098 2146     		mov	r1, r4
 156 009a 4FF0FF30 		mov	r0, #-1
 157 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL5:
 196:Src/main.c    **** }
 159              		.loc 1 196 0
 160 00a2 15B0     		add	sp, sp, #84
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 20
 163              		@ sp needed
 164 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 165              	.L11:
 166 00a6 00BF     		.align	2
 167              	.L10:
 168 00a8 00380240 		.word	1073887232
 169 00ac 00700040 		.word	1073770496
 170 00b0 D34D6210 		.word	274877907
 171              		.cfi_endproc
 172              	.LFE127:
 174              		.section	.text.startup.main,"ax",%progbits
 175              		.align	1
 176              		.p2align 2,,3
 177              		.global	main
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	main:
 184              	.LFB126:
  84:Src/main.c    **** 
 185              		.loc 1 84 0
ARM GAS  /tmp/ccXNMZEY.s 			page 8


 186              		.cfi_startproc
 187              		@ Volatile: function does not return.
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
  93:Src/main.c    **** 
 195              		.loc 1 93 0
 196 0002 FFF7FEFF 		bl	HAL_Init
 197              	.LVL6:
  96:Src/main.c    **** 
 198              		.loc 1 96 0
 199 0006 FFF7FEFF 		bl	SystemClock_Config
 200              	.LVL7:
  99:Src/main.c    ****   MX_DMA_Init();
 201              		.loc 1 99 0
 202 000a FFF7FEFF 		bl	MX_GPIO_Init
 203              	.LVL8:
 100:Src/main.c    ****   MX_SDIO_SD_Init();
 204              		.loc 1 100 0
 205 000e FFF7FEFF 		bl	MX_DMA_Init
 206              	.LVL9:
 101:Src/main.c    ****   MX_SPI1_Init();
 207              		.loc 1 101 0
 208 0012 FFF7FEFF 		bl	MX_SDIO_SD_Init
 209              	.LVL10:
 102:Src/main.c    ****   MX_TIM3_Init();
 210              		.loc 1 102 0
 211 0016 FFF7FEFF 		bl	MX_SPI1_Init
 212              	.LVL11:
 103:Src/main.c    ****   MX_FATFS_Init();
 213              		.loc 1 103 0
 214 001a FFF7FEFF 		bl	MX_TIM3_Init
 215              	.LVL12:
 104:Src/main.c    ****   MX_USART6_UART_Init();
 216              		.loc 1 104 0
 217 001e FFF7FEFF 		bl	MX_FATFS_Init
 218              	.LVL13:
 105:Src/main.c    ****   MX_I2C1_Init();
 219              		.loc 1 105 0
 220 0022 FFF7FEFF 		bl	MX_USART6_UART_Init
 221              	.LVL14:
 106:Src/main.c    ****   MX_USART1_UART_Init();
 222              		.loc 1 106 0
 223 0026 FFF7FEFF 		bl	MX_I2C1_Init
 224              	.LVL15:
 107:Src/main.c    **** 
 225              		.loc 1 107 0
 226 002a FFF7FEFF 		bl	MX_USART1_UART_Init
 227              	.LVL16:
 110:Src/main.c    ****   inputs_init();
 228              		.loc 1 110 0
 229 002e FFF7FEFF 		bl	gui_init
 230              	.LVL17:
ARM GAS  /tmp/ccXNMZEY.s 			page 9


 111:Src/main.c    ****   
 231              		.loc 1 111 0
 232 0032 FFF7FEFF 		bl	inputs_init
 233              	.LVL18:
 113:Src/main.c    **** 
 234              		.loc 1 113 0
 235 0036 FFF7FEFF 		bl	app_main_init
 236              	.LVL19:
 115:Src/main.c    ****   HAL_Delay(50);
 237              		.loc 1 115 0
 238 003a 0122     		movs	r2, #1
 239 003c 4FF40041 		mov	r1, #32768
 240 0040 0E48     		ldr	r0, .L15
 241 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL20:
 116:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 243              		.loc 1 116 0
 244 0046 3220     		movs	r0, #50
 245 0048 FFF7FEFF 		bl	HAL_Delay
 246              	.LVL21:
 117:Src/main.c    ****   HAL_Delay(20);
 247              		.loc 1 117 0
 248 004c 0022     		movs	r2, #0
 249 004e 4FF40041 		mov	r1, #32768
 250 0052 0A48     		ldr	r0, .L15
 251 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 252              	.LVL22:
 118:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 253              		.loc 1 118 0
 254 0058 1420     		movs	r0, #20
 255 005a FFF7FEFF 		bl	HAL_Delay
 256              	.LVL23:
 119:Src/main.c    **** 
 257              		.loc 1 119 0
 258 005e 0122     		movs	r2, #1
 259 0060 4FF40041 		mov	r1, #32768
 260 0064 0548     		ldr	r0, .L15
 261 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 262              	.LVL24:
 124:Src/main.c    ****   /* USER CODE END 2 */
 263              		.loc 1 124 0
 264 006a FFF7FEFF 		bl	compass_init
 265              	.LVL25:
 266              	.L13:
 132:Src/main.c    ****       HAL_Delay(10);
 267              		.loc 1 132 0 discriminator 1
 268 006e FFF7FEFF 		bl	inputs_update
 269              	.LVL26:
 133:Src/main.c    ****   /* USER CODE END WHILE */
 270              		.loc 1 133 0 discriminator 1
 271 0072 0A20     		movs	r0, #10
 272 0074 FFF7FEFF 		bl	HAL_Delay
 273              	.LVL27:
 274 0078 F9E7     		b	.L13
 275              	.L16:
 276 007a 00BF     		.align	2
 277              	.L15:
ARM GAS  /tmp/ccXNMZEY.s 			page 10


 278 007c 00040240 		.word	1073873920
 279              		.cfi_endproc
 280              	.LFE126:
 282              		.section	.text.Error_Handler,"ax",%progbits
 283              		.align	1
 284              		.p2align 2,,3
 285              		.global	Error_Handler
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	Error_Handler:
 292              	.LFB128:
 197:Src/main.c    **** 
 198:Src/main.c    **** /* USER CODE BEGIN 4 */
 199:Src/main.c    **** 
 200:Src/main.c    **** /* USER CODE END 4 */
 201:Src/main.c    **** 
 202:Src/main.c    **** /**
 203:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 204:Src/main.c    ****   * @param  None
 205:Src/main.c    ****   * @retval None
 206:Src/main.c    ****   */
 207:Src/main.c    **** void Error_Handler(void)
 208:Src/main.c    **** {
 293              		.loc 1 208 0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299              	.L18:
 300 0000 FEE7     		b	.L18
 301              		.cfi_endproc
 302              	.LFE128:
 304              		.comm	makise_color_palette,4,4
 305 0002 00BF     		.text
 306              	.Letext0:
 307              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 308              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 309              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 310              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 311              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 312              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 313              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 314              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 315              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 316              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 317              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 318              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 319              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 320              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 321              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 322              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 323              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 324              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 325              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  /tmp/ccXNMZEY.s 			page 11


 326              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 327              		.file 22 "Inc/dma.h"
 328              		.file 23 "Middlewares/Third_Party/FatFs/src/integer.h"
 329              		.file 24 "Middlewares/Third_Party/FatFs/src/diskio.h"
 330              		.file 25 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 331              		.file 26 "Middlewares/Third_Party/FatFs/src/drivers/sd_diskio.h"
 332              		.file 27 "Inc/fatfs.h"
 333              		.file 28 "Inc/i2c.h"
 334              		.file 29 "Inc/sdio.h"
 335              		.file 30 "Inc/spi.h"
 336              		.file 31 "Inc/tim.h"
 337              		.file 32 "Inc/usart.h"
 338              		.file 33 "MakiseGUI/MakiseGUI/makise.h"
 339              		.file 34 "MakiseGUI/MakiseGUI/ILI9340C/ili9340.h"
 340              		.file 35 "MakiseGUI/MakiseGUI/makise_colors.h"
 341              		.file 36 "MakiseGUI/MakiseGUI/makise_text.h"
 342              		.file 37 "MakiseGUI/MakiseGUI/fonts/fonts.h"
 343              		.file 38 "MakiseGUI/MakiseGUI/gui/makise_gui.h"
 344              		.file 39 "MakiseGUI/MakiseGUI/gui/makise_gui_input.h"
 345              		.file 40 "MakiseGUI/MakiseGUI/gui/makise_gui_container.h"
 346              		.file 41 "MakiseGUI/MakiseGUI/gui/makise_gui_elements.h"
 347              		.file 42 "Controls/controls_595.h"
 348              		.file 43 "gui/gui.h"
 349              		.file 44 "gui/inputs.h"
 350              		.file 45 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 351              		.file 46 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 352              		.file 47 "Inc/gpio.h"
 353              		.file 48 "app/app_main.h"
 354              		.file 49 "dev/compass.h"
ARM GAS  /tmp/ccXNMZEY.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXNMZEY.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXNMZEY.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXNMZEY.s:168    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccXNMZEY.s:175    .text.startup.main:0000000000000000 $t
     /tmp/ccXNMZEY.s:183    .text.startup.main:0000000000000000 main
     /tmp/ccXNMZEY.s:278    .text.startup.main:000000000000007c $d
     /tmp/ccXNMZEY.s:283    .text.Error_Handler:0000000000000000 $t
     /tmp/ccXNMZEY.s:291    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 makise_color_palette
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SDIO_SD_Init
MX_SPI1_Init
MX_TIM3_Init
MX_FATFS_Init
MX_USART6_UART_Init
MX_I2C1_Init
MX_USART1_UART_Init
gui_init
inputs_init
app_main_init
HAL_GPIO_WritePin
HAL_Delay
compass_init
inputs_update
