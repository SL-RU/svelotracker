ARM GAS  /tmp/ccS1Udqc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_SetConfig,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UART_SetConfig:
  24              	.LFB180:
  25              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @version V1.6.0
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @date    04-November-2016
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/ccS1Udqc.s 			page 2


  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
ARM GAS  /tmp/ccS1Udqc.s 			page 3


  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccS1Udqc.s 			page 4


 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccS1Udqc.s 			page 5


 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  /tmp/ccS1Udqc.s 			page 6


 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
ARM GAS  /tmp/ccS1Udqc.s 			page 7


 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
ARM GAS  /tmp/ccS1Udqc.s 			page 8


 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address: USART address
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccS1Udqc.s 			page 9


 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccS1Udqc.s 			page 10


 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccS1Udqc.s 			page 11


 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
ARM GAS  /tmp/ccS1Udqc.s 			page 12


 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FFU);
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccS1Udqc.s 			page 13


 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFFU);
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  /tmp/ccS1Udqc.s 			page 14


 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  /tmp/ccS1Udqc.s 			page 15


 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccS1Udqc.s 			page 16


 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  /tmp/ccS1Udqc.s 			page 17


 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
ARM GAS  /tmp/ccS1Udqc.s 			page 18


 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size); 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccS1Udqc.s 			page 19


1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccS1Udqc.s 			page 20


1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccS1Udqc.s 			page 21


1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccS1Udqc.s 			page 22


1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccS1Udqc.s 			page 23


1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
ARM GAS  /tmp/ccS1Udqc.s 			page 24


1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 25


1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/ccS1Udqc.s 			page 26


1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccS1Udqc.s 			page 27


1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 28


1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
ARM GAS  /tmp/ccS1Udqc.s 			page 29


1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
ARM GAS  /tmp/ccS1Udqc.s 			page 30


1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccS1Udqc.s 			page 31


1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccS1Udqc.s 			page 32


1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
ARM GAS  /tmp/ccS1Udqc.s 			page 33


1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccS1Udqc.s 			page 34


1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
ARM GAS  /tmp/ccS1Udqc.s 			page 35


1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccS1Udqc.s 			page 36


1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
ARM GAS  /tmp/ccS1Udqc.s 			page 37


2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
ARM GAS  /tmp/ccS1Udqc.s 			page 38


2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/ccS1Udqc.s 			page 39


2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccS1Udqc.s 			page 40


2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
ARM GAS  /tmp/ccS1Udqc.s 			page 41


2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FFU);
ARM GAS  /tmp/ccS1Udqc.s 			page 42


2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FFU);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccS1Udqc.s 			page 43


2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccS1Udqc.s 			page 44


2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  26              		.loc 1 2432 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 32
  34              		.cfi_offset 4, -32
  35              		.cfi_offset 5, -28
  36              		.cfi_offset 6, -24
  37              		.cfi_offset 7, -20
  38              		.cfi_offset 8, -16
  39              		.cfi_offset 9, -12
  40              		.cfi_offset 10, -8
  41              		.cfi_offset 14, -4
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
  42              		.loc 1 2442 0
  43 0004 0468     		ldr	r4, [r0]
  44 0006 2269     		ldr	r2, [r4, #16]
  45              	.LVL1:
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
  46              		.loc 1 2432 0
  47 0008 8246     		mov	r10, r0
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
  48              		.loc 1 2448 0
  49 000a C068     		ldr	r0, [r0, #12]
  50              	.LVL2:
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
ARM GAS  /tmp/ccS1Udqc.s 			page 45


2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
  51              		.loc 1 2465 0
  52 000c DAF81C10 		ldr	r1, [r10, #28]
  53 0010 DAF80830 		ldr	r3, [r10, #8]
  54 0014 DAF81060 		ldr	r6, [r10, #16]
  55 0018 DAF81450 		ldr	r5, [r10, #20]
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56              		.loc 1 2445 0
  57 001c 22F44052 		bic	r2, r2, #12288
  58              	.LVL3:
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  59              		.loc 1 2448 0
  60 0020 0243     		orrs	r2, r2, r0
  61              	.LVL4:
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62              		.loc 1 2451 0
  63 0022 2261     		str	r2, [r4, #16]
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  64              		.loc 1 2454 0
  65 0024 E268     		ldr	r2, [r4, #12]
  66              	.LVL5:
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
  67              		.loc 1 2477 0
  68 0026 DAF81800 		ldr	r0, [r10, #24]
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  69              		.loc 1 2465 0
  70 002a 3343     		orrs	r3, r3, r6
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
  71              		.loc 1 2457 0
  72 002c 22F41642 		bic	r2, r2, #38400
  73              	.LVL6:
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  74              		.loc 1 2465 0
  75 0030 2B43     		orrs	r3, r3, r5
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
  76              		.loc 1 2457 0
  77 0032 22F00C02 		bic	r2, r2, #12
  78              	.LVL7:
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  79              		.loc 1 2465 0
ARM GAS  /tmp/ccS1Udqc.s 			page 46


  80 0036 0B43     		orrs	r3, r3, r1
  81 0038 1343     		orrs	r3, r3, r2
  82              	.LVL8:
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  83              		.loc 1 2468 0
  84 003a E360     		str	r3, [r4, #12]
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  85              		.loc 1 2471 0
  86 003c 6369     		ldr	r3, [r4, #20]
  87              	.LVL9:
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  88              		.loc 1 2474 0
  89 003e 23F44073 		bic	r3, r3, #768
  90              	.LVL10:
  91              		.loc 1 2477 0
  92 0042 0343     		orrs	r3, r3, r0
  93              	.LVL11:
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
  94              		.loc 1 2483 0
  95 0044 B1F5004F 		cmp	r1, #32768
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  96              		.loc 1 2480 0
  97 0048 6361     		str	r3, [r4, #20]
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
  98              		.loc 1 2486 0
  99 004a AB4B     		ldr	r3, .L13
 100              	.LVL12:
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 101              		.loc 1 2483 0
 102 004c 61D0     		beq	.L12
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 103              		.loc 1 2498 0
 104 004e 9C42     		cmp	r4, r3
 105 0050 00F00181 		beq	.L6
 106              		.loc 1 2498 0 is_stmt 0 discriminator 1
 107 0054 03F58063 		add	r3, r3, #1024
 108 0058 9C42     		cmp	r4, r3
 109 005a 00F0FC80 		beq	.L6
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccS1Udqc.s 			page 47


2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 110              		.loc 1 2504 0 is_stmt 1
 111 005e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 112              	.LVL13:
 113 0062 A64F     		ldr	r7, .L13+4
 114 0064 DAF80430 		ldr	r3, [r10, #4]
 115 0068 00EB8000 		add	r0, r0, r0, lsl #2
 116 006c 00EB8000 		add	r0, r0, r0, lsl #2
 117 0070 9B00     		lsls	r3, r3, #2
 118 0072 B0FBF3F3 		udiv	r3, r0, r3
 119 0076 A7FB0323 		umull	r2, r3, r7, r3
 120 007a 5B09     		lsrs	r3, r3, #5
 121 007c 1D01     		lsls	r5, r3, #4
 122 007e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 123              	.LVL14:
 124 0082 DAF80430 		ldr	r3, [r10, #4]
 125 0086 00EB8000 		add	r0, r0, r0, lsl #2
 126 008a 9B00     		lsls	r3, r3, #2
 127 008c 00EB8000 		add	r0, r0, r0, lsl #2
 128 0090 B0FBF3F6 		udiv	r6, r0, r3
 129 0094 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 130              	.LVL15:
 131 0098 DAF80420 		ldr	r2, [r10, #4]
 132 009c 00EB8000 		add	r0, r0, r0, lsl #2
 133 00a0 9300     		lsls	r3, r2, #2
 134 00a2 00EB8000 		add	r0, r0, r0, lsl #2
 135 00a6 B0FBF3F3 		udiv	r3, r0, r3
 136 00aa A7FB0323 		umull	r2, r3, r7, r3
 137 00ae 4FF06409 		mov	r9, #100
 138 00b2 5B09     		lsrs	r3, r3, #5
 139 00b4 09FB1363 		mls	r3, r9, r3, r6
 140 00b8 1B01     		lsls	r3, r3, #4
 141 00ba 3233     		adds	r3, r3, #50
 142 00bc A7FB0323 		umull	r2, r3, r7, r3
 143 00c0 5B09     		lsrs	r3, r3, #5
 144 00c2 03F0F006 		and	r6, r3, #240
 145 00c6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 146              	.LVL16:
 147 00ca DAF80420 		ldr	r2, [r10, #4]
 148 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 149 00d2 9300     		lsls	r3, r2, #2
 150 00d4 00EB8000 		add	r0, r0, r0, lsl #2
 151 00d8 B0FBF3F8 		udiv	r8, r0, r3
 152 00dc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 153              	.LVL17:
 154 00e0 DAF80430 		ldr	r3, [r10, #4]
 155 00e4 00EB8000 		add	r0, r0, r0, lsl #2
 156 00e8 9B00     		lsls	r3, r3, #2
 157 00ea 00EB8000 		add	r0, r0, r0, lsl #2
 158 00ee B0FBF3F0 		udiv	r0, r0, r3
 159 00f2 A7FB0030 		umull	r3, r0, r7, r0
 160 00f6 4009     		lsrs	r0, r0, #5
 161 00f8 09FB1083 		mls	r3, r9, r0, r8
ARM GAS  /tmp/ccS1Udqc.s 			page 48


 162              	.L10:
 163 00fc 1B01     		lsls	r3, r3, #4
 164 00fe 3233     		adds	r3, r3, #50
 165 0100 A7FB0323 		umull	r2, r3, r7, r3
 166 0104 C3F34313 		ubfx	r3, r3, #5, #4
 167 0108 3343     		orrs	r3, r3, r6
 168 010a 2B44     		add	r3, r3, r5
 169 010c A360     		str	r3, [r4, #8]
 170 010e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 171              	.LVL18:
 172              	.L12:
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 173              		.loc 1 2486 0
 174 0112 9C42     		cmp	r4, r3
 175 0114 5DD0     		beq	.L3
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 176              		.loc 1 2486 0 is_stmt 0 discriminator 1
 177 0116 03F58063 		add	r3, r3, #1024
 178 011a 9C42     		cmp	r4, r3
 179 011c 59D0     		beq	.L3
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 180              		.loc 1 2492 0 is_stmt 1
 181 011e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 182              	.LVL19:
 183 0122 764F     		ldr	r7, .L13+4
 184 0124 DAF80430 		ldr	r3, [r10, #4]
 185 0128 00EB8000 		add	r0, r0, r0, lsl #2
 186 012c 00EB8000 		add	r0, r0, r0, lsl #2
 187 0130 5B00     		lsls	r3, r3, #1
 188 0132 B0FBF3F3 		udiv	r3, r0, r3
 189 0136 A7FB0323 		umull	r2, r3, r7, r3
 190 013a 5B09     		lsrs	r3, r3, #5
 191 013c 1E01     		lsls	r6, r3, #4
 192 013e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 193              	.LVL20:
 194 0142 DAF80430 		ldr	r3, [r10, #4]
 195 0146 00EB8000 		add	r0, r0, r0, lsl #2
 196 014a 5B00     		lsls	r3, r3, #1
 197 014c 00EB8000 		add	r0, r0, r0, lsl #2
 198 0150 B0FBF3F5 		udiv	r5, r0, r3
 199 0154 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 200              	.LVL21:
 201 0158 DAF80420 		ldr	r2, [r10, #4]
 202 015c 00EB8000 		add	r0, r0, r0, lsl #2
 203 0160 5300     		lsls	r3, r2, #1
 204 0162 00EB8000 		add	r0, r0, r0, lsl #2
 205 0166 B0FBF3F3 		udiv	r3, r0, r3
 206 016a A7FB0323 		umull	r2, r3, r7, r3
 207 016e 5B09     		lsrs	r3, r3, #5
 208 0170 4FF06409 		mov	r9, #100
 209 0174 09FB1353 		mls	r3, r9, r3, r5
 210 0178 DB00     		lsls	r3, r3, #3
 211 017a 3233     		adds	r3, r3, #50
 212 017c A7FB0323 		umull	r2, r3, r7, r3
 213 0180 1B09     		lsrs	r3, r3, #4
 214 0182 03F4F875 		and	r5, r3, #496
 215 0186 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/ccS1Udqc.s 			page 49


 216              	.LVL22:
 217 018a DAF80420 		ldr	r2, [r10, #4]
 218 018e 00EB8000 		add	r0, r0, r0, lsl #2
 219 0192 00EB8000 		add	r0, r0, r0, lsl #2
 220 0196 5300     		lsls	r3, r2, #1
 221 0198 B0FBF3F8 		udiv	r8, r0, r3
 222 019c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 223              	.LVL23:
 224              	.L9:
 225 01a0 DAF80430 		ldr	r3, [r10, #4]
 226 01a4 00EB8000 		add	r0, r0, r0, lsl #2
 227 01a8 00EB8000 		add	r0, r0, r0, lsl #2
 228 01ac 5B00     		lsls	r3, r3, #1
 229 01ae B0FBF3F3 		udiv	r3, r0, r3
 230 01b2 A7FB0323 		umull	r2, r3, r7, r3
 231 01b6 5B09     		lsrs	r3, r3, #5
 232 01b8 09FB1383 		mls	r3, r9, r3, r8
 233 01bc DB00     		lsls	r3, r3, #3
 234 01be 3233     		adds	r3, r3, #50
 235 01c0 A7FB0323 		umull	r2, r3, r7, r3
 236 01c4 C3F34213 		ubfx	r3, r3, #5, #3
 237 01c8 3344     		add	r3, r3, r6
 238 01ca 2B44     		add	r3, r3, r5
 239 01cc A360     		str	r3, [r4, #8]
 240 01ce BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 241              	.LVL24:
 242              	.L3:
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 243              		.loc 1 2488 0
 244 01d2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 245              	.LVL25:
 246 01d6 494F     		ldr	r7, .L13+4
 247 01d8 DAF80430 		ldr	r3, [r10, #4]
 248 01dc 00EB8000 		add	r0, r0, r0, lsl #2
 249 01e0 00EB8000 		add	r0, r0, r0, lsl #2
 250 01e4 5B00     		lsls	r3, r3, #1
 251 01e6 B0FBF3F3 		udiv	r3, r0, r3
 252 01ea A7FB0323 		umull	r2, r3, r7, r3
 253 01ee 5B09     		lsrs	r3, r3, #5
 254 01f0 1E01     		lsls	r6, r3, #4
 255 01f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 256              	.LVL26:
 257 01f6 DAF80430 		ldr	r3, [r10, #4]
 258 01fa 00EB8000 		add	r0, r0, r0, lsl #2
 259 01fe 5B00     		lsls	r3, r3, #1
 260 0200 00EB8000 		add	r0, r0, r0, lsl #2
 261 0204 B0FBF3F5 		udiv	r5, r0, r3
 262 0208 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 263              	.LVL27:
 264 020c DAF80420 		ldr	r2, [r10, #4]
 265 0210 00EB8000 		add	r0, r0, r0, lsl #2
 266 0214 5300     		lsls	r3, r2, #1
 267 0216 00EB8000 		add	r0, r0, r0, lsl #2
 268 021a B0FBF3F3 		udiv	r3, r0, r3
 269 021e A7FB0323 		umull	r2, r3, r7, r3
 270 0222 4FF06409 		mov	r9, #100
 271 0226 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccS1Udqc.s 			page 50


 272 0228 09FB1353 		mls	r3, r9, r3, r5
 273 022c DB00     		lsls	r3, r3, #3
 274 022e 3233     		adds	r3, r3, #50
 275 0230 A7FB0323 		umull	r2, r3, r7, r3
 276 0234 1B09     		lsrs	r3, r3, #4
 277 0236 03F4F875 		and	r5, r3, #496
 278 023a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 279              	.LVL28:
 280 023e DAF80420 		ldr	r2, [r10, #4]
 281 0242 00EB8000 		add	r0, r0, r0, lsl #2
 282 0246 5300     		lsls	r3, r2, #1
 283 0248 00EB8000 		add	r0, r0, r0, lsl #2
 284 024c B0FBF3F8 		udiv	r8, r0, r3
 285 0250 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 286              	.LVL29:
 287 0254 A4E7     		b	.L9
 288              	.LVL30:
 289              	.L6:
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 290              		.loc 1 2500 0
 291 0256 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 292              	.LVL31:
 293 025a 284F     		ldr	r7, .L13+4
 294 025c DAF80430 		ldr	r3, [r10, #4]
 295 0260 00EB8000 		add	r0, r0, r0, lsl #2
 296 0264 00EB8000 		add	r0, r0, r0, lsl #2
 297 0268 9B00     		lsls	r3, r3, #2
 298 026a B0FBF3F3 		udiv	r3, r0, r3
 299 026e A7FB0323 		umull	r2, r3, r7, r3
 300 0272 5B09     		lsrs	r3, r3, #5
 301 0274 1D01     		lsls	r5, r3, #4
 302 0276 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 303              	.LVL32:
 304 027a DAF80430 		ldr	r3, [r10, #4]
 305 027e 00EB8000 		add	r0, r0, r0, lsl #2
 306 0282 9B00     		lsls	r3, r3, #2
 307 0284 00EB8000 		add	r0, r0, r0, lsl #2
 308 0288 B0FBF3F6 		udiv	r6, r0, r3
 309 028c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 310              	.LVL33:
 311 0290 DAF80420 		ldr	r2, [r10, #4]
 312 0294 00EB8000 		add	r0, r0, r0, lsl #2
 313 0298 9300     		lsls	r3, r2, #2
 314 029a 00EB8000 		add	r0, r0, r0, lsl #2
 315 029e B0FBF3F3 		udiv	r3, r0, r3
 316 02a2 A7FB0323 		umull	r2, r3, r7, r3
 317 02a6 4FF06409 		mov	r9, #100
 318 02aa 5B09     		lsrs	r3, r3, #5
 319 02ac 09FB1363 		mls	r3, r9, r3, r6
 320 02b0 1B01     		lsls	r3, r3, #4
 321 02b2 3233     		adds	r3, r3, #50
 322 02b4 A7FB0323 		umull	r2, r3, r7, r3
 323 02b8 5B09     		lsrs	r3, r3, #5
 324 02ba 03F0F006 		and	r6, r3, #240
 325 02be FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 326              	.LVL34:
 327 02c2 DAF80420 		ldr	r2, [r10, #4]
ARM GAS  /tmp/ccS1Udqc.s 			page 51


 328 02c6 00EB8000 		add	r0, r0, r0, lsl #2
 329 02ca 9300     		lsls	r3, r2, #2
 330 02cc 00EB8000 		add	r0, r0, r0, lsl #2
 331 02d0 B0FBF3F8 		udiv	r8, r0, r3
 332 02d4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 333              	.LVL35:
 334 02d8 DAF80430 		ldr	r3, [r10, #4]
 335 02dc 00EB8000 		add	r0, r0, r0, lsl #2
 336 02e0 00EB8000 		add	r0, r0, r0, lsl #2
 337 02e4 9B00     		lsls	r3, r3, #2
 338 02e6 B0FBF3F3 		udiv	r3, r0, r3
 339 02ea A7FB0323 		umull	r2, r3, r7, r3
 340 02ee 5B09     		lsrs	r3, r3, #5
 341 02f0 09FB1383 		mls	r3, r9, r3, r8
 342 02f4 02E7     		b	.L10
 343              	.L14:
 344 02f6 00BF     		.align	2
 345              	.L13:
 346 02f8 00100140 		.word	1073811456
 347 02fc 1F85EB51 		.word	1374389535
 348              		.cfi_endproc
 349              	.LFE180:
 351              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 352              		.align	1
 353              		.p2align 2,,3
 354              		.weak	HAL_UART_MspInit
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	HAL_UART_MspInit:
 361              	.LFB200:
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366 0000 7047     		bx	lr
 367              		.cfi_endproc
 368              	.LFE200:
 370 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 371              		.align	1
 372              		.p2align 2,,3
 373              		.global	HAL_UART_Init
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	HAL_UART_Init:
 380              	.LFB126:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 381              		.loc 1 247 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL36:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 386              		.loc 1 249 0
ARM GAS  /tmp/ccS1Udqc.s 			page 52


 387 0000 60B3     		cbz	r0, .L19
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 388              		.loc 1 247 0
 389 0002 38B5     		push	{r3, r4, r5, lr}
 390              	.LCFI1:
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 3, -16
 393              		.cfi_offset 4, -12
 394              		.cfi_offset 5, -8
 395              		.cfi_offset 14, -4
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 396              		.loc 1 268 0
 397 0004 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 398 0008 0446     		mov	r4, r0
 399 000a 03F0FF02 		and	r2, r3, #255
 400 000e 03B3     		cbz	r3, .L24
 401              	.LVL37:
 402              	.L18:
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 403              		.loc 1 279 0
 404 0010 2268     		ldr	r2, [r4]
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 405              		.loc 1 276 0
 406 0012 2423     		movs	r3, #36
 407 0014 84F83930 		strb	r3, [r4, #57]
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 408              		.loc 1 279 0
 409 0018 D368     		ldr	r3, [r2, #12]
 410 001a 23F40053 		bic	r3, r3, #8192
 411 001e D360     		str	r3, [r2, #12]
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 412              		.loc 1 282 0
 413 0020 2046     		mov	r0, r4
 414 0022 FFF7FEFF 		bl	UART_SetConfig
 415              	.LVL38:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 416              		.loc 1 287 0
 417 0026 2368     		ldr	r3, [r4]
 418 0028 1A69     		ldr	r2, [r3, #16]
 419 002a 22F49042 		bic	r2, r2, #18432
 420 002e 1A61     		str	r2, [r3, #16]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 421              		.loc 1 288 0
 422 0030 5A69     		ldr	r2, [r3, #20]
 423 0032 22F02A02 		bic	r2, r2, #42
 424 0036 5A61     		str	r2, [r3, #20]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 425              		.loc 1 291 0
 426 0038 DA68     		ldr	r2, [r3, #12]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 427              		.loc 1 294 0
 428 003a 0025     		movs	r5, #0
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 429              		.loc 1 295 0
 430 003c 2021     		movs	r1, #32
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 431              		.loc 1 291 0
ARM GAS  /tmp/ccS1Udqc.s 			page 53


 432 003e 42F40052 		orr	r2, r2, #8192
 433 0042 DA60     		str	r2, [r3, #12]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 434              		.loc 1 298 0
 435 0044 2846     		mov	r0, r5
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 436              		.loc 1 294 0
 437 0046 E563     		str	r5, [r4, #60]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 438              		.loc 1 295 0
 439 0048 84F83910 		strb	r1, [r4, #57]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 440              		.loc 1 296 0
 441 004c 84F83A10 		strb	r1, [r4, #58]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 442              		.loc 1 298 0
 443 0050 38BD     		pop	{r3, r4, r5, pc}
 444              	.LVL39:
 445              	.L24:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 446              		.loc 1 271 0
 447 0052 80F83820 		strb	r2, [r0, #56]
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 448              		.loc 1 273 0
 449 0056 FFF7FEFF 		bl	HAL_UART_MspInit
 450              	.LVL40:
 451 005a D9E7     		b	.L18
 452              	.LVL41:
 453              	.L19:
 454              	.LCFI2:
 455              		.cfi_def_cfa_offset 0
 456              		.cfi_restore 3
 457              		.cfi_restore 4
 458              		.cfi_restore 5
 459              		.cfi_restore 14
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 460              		.loc 1 251 0
 461 005c 0120     		movs	r0, #1
 462              	.LVL42:
 463 005e 7047     		bx	lr
 464              		.cfi_endproc
 465              	.LFE126:
 467              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 468              		.align	1
 469              		.p2align 2,,3
 470              		.global	HAL_HalfDuplex_Init
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	HAL_HalfDuplex_Init:
 477              	.LFB127:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 478              		.loc 1 309 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccS1Udqc.s 			page 54


 482              	.LVL43:
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 483              		.loc 1 311 0
 484 0000 80B3     		cbz	r0, .L28
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 485              		.loc 1 309 0
 486 0002 38B5     		push	{r3, r4, r5, lr}
 487              	.LCFI3:
 488              		.cfi_def_cfa_offset 16
 489              		.cfi_offset 3, -16
 490              		.cfi_offset 4, -12
 491              		.cfi_offset 5, -8
 492              		.cfi_offset 14, -4
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 493              		.loc 1 321 0
 494 0004 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 495 0008 0446     		mov	r4, r0
 496 000a 03F0FF02 		and	r2, r3, #255
 497 000e 23B3     		cbz	r3, .L33
 498              	.LVL44:
 499              	.L27:
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 500              		.loc 1 332 0
 501 0010 2268     		ldr	r2, [r4]
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 502              		.loc 1 329 0
 503 0012 2423     		movs	r3, #36
 504 0014 84F83930 		strb	r3, [r4, #57]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 505              		.loc 1 332 0
 506 0018 D368     		ldr	r3, [r2, #12]
 507 001a 23F40053 		bic	r3, r3, #8192
 508 001e D360     		str	r3, [r2, #12]
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 509              		.loc 1 335 0
 510 0020 2046     		mov	r0, r4
 511 0022 FFF7FEFF 		bl	UART_SetConfig
 512              	.LVL45:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 513              		.loc 1 340 0
 514 0026 2368     		ldr	r3, [r4]
 515 0028 1A69     		ldr	r2, [r3, #16]
 516 002a 22F49042 		bic	r2, r2, #18432
 517 002e 1A61     		str	r2, [r3, #16]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 518              		.loc 1 341 0
 519 0030 5A69     		ldr	r2, [r3, #20]
 520 0032 22F02202 		bic	r2, r2, #34
 521 0036 5A61     		str	r2, [r3, #20]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 522              		.loc 1 344 0
 523 0038 5A69     		ldr	r2, [r3, #20]
 524 003a 42F00802 		orr	r2, r2, #8
 525 003e 5A61     		str	r2, [r3, #20]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 526              		.loc 1 347 0
 527 0040 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccS1Udqc.s 			page 55


 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 528              		.loc 1 350 0
 529 0042 0025     		movs	r5, #0
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 530              		.loc 1 351 0
 531 0044 2021     		movs	r1, #32
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 532              		.loc 1 347 0
 533 0046 42F40052 		orr	r2, r2, #8192
 534 004a DA60     		str	r2, [r3, #12]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 535              		.loc 1 354 0
 536 004c 2846     		mov	r0, r5
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 537              		.loc 1 350 0
 538 004e E563     		str	r5, [r4, #60]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 539              		.loc 1 351 0
 540 0050 84F83910 		strb	r1, [r4, #57]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 541              		.loc 1 352 0
 542 0054 84F83A10 		strb	r1, [r4, #58]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 543              		.loc 1 354 0
 544 0058 38BD     		pop	{r3, r4, r5, pc}
 545              	.LVL46:
 546              	.L33:
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 547              		.loc 1 324 0
 548 005a 80F83820 		strb	r2, [r0, #56]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 549              		.loc 1 326 0
 550 005e FFF7FEFF 		bl	HAL_UART_MspInit
 551              	.LVL47:
 552 0062 D5E7     		b	.L27
 553              	.LVL48:
 554              	.L28:
 555              	.LCFI4:
 556              		.cfi_def_cfa_offset 0
 557              		.cfi_restore 3
 558              		.cfi_restore 4
 559              		.cfi_restore 5
 560              		.cfi_restore 14
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 561              		.loc 1 313 0
 562 0064 0120     		movs	r0, #1
 563              	.LVL49:
 564 0066 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE127:
 568              		.section	.text.HAL_LIN_Init,"ax",%progbits
 569              		.align	1
 570              		.p2align 2,,3
 571              		.global	HAL_LIN_Init
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
ARM GAS  /tmp/ccS1Udqc.s 			page 56


 575              		.fpu fpv4-sp-d16
 577              	HAL_LIN_Init:
 578              	.LFB128:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 579              		.loc 1 369 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL50:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 584              		.loc 1 371 0
 585 0000 0028     		cmp	r0, #0
 586 0002 38D0     		beq	.L37
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 587              		.loc 1 369 0
 588 0004 38B5     		push	{r3, r4, r5, lr}
 589              	.LCFI5:
 590              		.cfi_def_cfa_offset 16
 591              		.cfi_offset 3, -16
 592              		.cfi_offset 4, -12
 593              		.cfi_offset 5, -8
 594              		.cfi_offset 14, -4
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 595              		.loc 1 382 0
 596 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 597 000a 0446     		mov	r4, r0
 598 000c 0D46     		mov	r5, r1
 599 000e 03F0FF02 		and	r2, r3, #255
 600 0012 5BB3     		cbz	r3, .L42
 601              	.LVL51:
 602              	.L36:
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 603              		.loc 1 393 0
 604 0014 2268     		ldr	r2, [r4]
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 605              		.loc 1 390 0
 606 0016 2423     		movs	r3, #36
 607 0018 84F83930 		strb	r3, [r4, #57]
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 608              		.loc 1 393 0
 609 001c D368     		ldr	r3, [r2, #12]
 610 001e 23F40053 		bic	r3, r3, #8192
 611 0022 D360     		str	r3, [r2, #12]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 612              		.loc 1 396 0
 613 0024 2046     		mov	r0, r4
 614 0026 FFF7FEFF 		bl	UART_SetConfig
 615              	.LVL52:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 616              		.loc 1 401 0
 617 002a 2368     		ldr	r3, [r4]
 618 002c 1A69     		ldr	r2, [r3, #16]
 619 002e 22F40062 		bic	r2, r2, #2048
 620 0032 1A61     		str	r2, [r3, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 621              		.loc 1 402 0
 622 0034 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccS1Udqc.s 			page 57


 623 0036 22F02A02 		bic	r2, r2, #42
 624 003a 5A61     		str	r2, [r3, #20]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 625              		.loc 1 405 0
 626 003c 1A69     		ldr	r2, [r3, #16]
 627 003e 42F48042 		orr	r2, r2, #16384
 628 0042 1A61     		str	r2, [r3, #16]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 629              		.loc 1 408 0
 630 0044 1A69     		ldr	r2, [r3, #16]
 631 0046 22F02002 		bic	r2, r2, #32
 632 004a 1A61     		str	r2, [r3, #16]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 633              		.loc 1 409 0
 634 004c 1969     		ldr	r1, [r3, #16]
 635 004e 0D43     		orrs	r5, r5, r1
 636              	.LVL53:
 637 0050 1D61     		str	r5, [r3, #16]
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 638              		.loc 1 412 0
 639 0052 DA68     		ldr	r2, [r3, #12]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 640              		.loc 1 415 0
 641 0054 0025     		movs	r5, #0
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 642              		.loc 1 416 0
 643 0056 2021     		movs	r1, #32
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 644              		.loc 1 412 0
 645 0058 42F40052 		orr	r2, r2, #8192
 646 005c DA60     		str	r2, [r3, #12]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 647              		.loc 1 419 0
 648 005e 2846     		mov	r0, r5
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 649              		.loc 1 415 0
 650 0060 E563     		str	r5, [r4, #60]
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 651              		.loc 1 416 0
 652 0062 84F83910 		strb	r1, [r4, #57]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 653              		.loc 1 417 0
 654 0066 84F83A10 		strb	r1, [r4, #58]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 655              		.loc 1 419 0
 656 006a 38BD     		pop	{r3, r4, r5, pc}
 657              	.LVL54:
 658              	.L42:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 659              		.loc 1 385 0
 660 006c 80F83820 		strb	r2, [r0, #56]
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 661              		.loc 1 387 0
 662 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 663              	.LVL55:
 664 0074 CEE7     		b	.L36
 665              	.LVL56:
ARM GAS  /tmp/ccS1Udqc.s 			page 58


 666              	.L37:
 667              	.LCFI6:
 668              		.cfi_def_cfa_offset 0
 669              		.cfi_restore 3
 670              		.cfi_restore 4
 671              		.cfi_restore 5
 672              		.cfi_restore 14
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 673              		.loc 1 373 0
 674 0076 0120     		movs	r0, #1
 675              	.LVL57:
 676 0078 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE128:
 680 007a 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 681              		.align	1
 682              		.p2align 2,,3
 683              		.global	HAL_MultiProcessor_Init
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	HAL_MultiProcessor_Init:
 690              	.LFB129:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 691              		.loc 1 435 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              	.LVL58:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 696              		.loc 1 437 0
 697 0000 0028     		cmp	r0, #0
 698 0002 3DD0     		beq	.L46
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 699              		.loc 1 449 0
 700 0004 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 701              		.loc 1 435 0
 702 0008 70B5     		push	{r4, r5, r6, lr}
 703              	.LCFI7:
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 4, -16
 706              		.cfi_offset 5, -12
 707              		.cfi_offset 6, -8
 708              		.cfi_offset 14, -4
 709 000a 1646     		mov	r6, r2
 710 000c 0446     		mov	r4, r0
 711 000e 0D46     		mov	r5, r1
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 712              		.loc 1 449 0
 713 0010 03F0FF02 		and	r2, r3, #255
 714              	.LVL59:
 715 0014 002B     		cmp	r3, #0
 716 0016 2ED0     		beq	.L51
 717              	.LVL60:
 718              	.L45:
ARM GAS  /tmp/ccS1Udqc.s 			page 59


 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 719              		.loc 1 460 0
 720 0018 2268     		ldr	r2, [r4]
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 721              		.loc 1 457 0
 722 001a 2423     		movs	r3, #36
 723 001c 84F83930 		strb	r3, [r4, #57]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 724              		.loc 1 460 0
 725 0020 D368     		ldr	r3, [r2, #12]
 726 0022 23F40053 		bic	r3, r3, #8192
 727 0026 D360     		str	r3, [r2, #12]
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 728              		.loc 1 463 0
 729 0028 2046     		mov	r0, r4
 730 002a FFF7FEFF 		bl	UART_SetConfig
 731              	.LVL61:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 732              		.loc 1 468 0
 733 002e 2368     		ldr	r3, [r4]
 734 0030 1A69     		ldr	r2, [r3, #16]
 735 0032 22F49042 		bic	r2, r2, #18432
 736 0036 1A61     		str	r2, [r3, #16]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 737              		.loc 1 469 0
 738 0038 5A69     		ldr	r2, [r3, #20]
 739 003a 22F02A02 		bic	r2, r2, #42
 740 003e 5A61     		str	r2, [r3, #20]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 741              		.loc 1 472 0
 742 0040 1A69     		ldr	r2, [r3, #16]
 743 0042 22F00F02 		bic	r2, r2, #15
 744 0046 1A61     		str	r2, [r3, #16]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 745              		.loc 1 474 0
 746 0048 1969     		ldr	r1, [r3, #16]
 747 004a 0D43     		orrs	r5, r5, r1
 748 004c 1D61     		str	r5, [r3, #16]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 749              		.loc 1 477 0
 750 004e D968     		ldr	r1, [r3, #12]
 751 0050 21F40061 		bic	r1, r1, #2048
 752 0054 D960     		str	r1, [r3, #12]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 753              		.loc 1 478 0
 754 0056 D968     		ldr	r1, [r3, #12]
 755 0058 3143     		orrs	r1, r1, r6
 756 005a D960     		str	r1, [r3, #12]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 757              		.loc 1 481 0
 758 005c DA68     		ldr	r2, [r3, #12]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 759              		.loc 1 484 0
 760 005e 0025     		movs	r5, #0
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 761              		.loc 1 485 0
 762 0060 2021     		movs	r1, #32
ARM GAS  /tmp/ccS1Udqc.s 			page 60


 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 763              		.loc 1 481 0
 764 0062 42F40052 		orr	r2, r2, #8192
 765 0066 DA60     		str	r2, [r3, #12]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 766              		.loc 1 488 0
 767 0068 2846     		mov	r0, r5
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 768              		.loc 1 484 0
 769 006a E563     		str	r5, [r4, #60]
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 770              		.loc 1 485 0
 771 006c 84F83910 		strb	r1, [r4, #57]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 772              		.loc 1 486 0
 773 0070 84F83A10 		strb	r1, [r4, #58]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 774              		.loc 1 488 0
 775 0074 70BD     		pop	{r4, r5, r6, pc}
 776              	.LVL62:
 777              	.L51:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 778              		.loc 1 452 0
 779 0076 80F83820 		strb	r2, [r0, #56]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780              		.loc 1 454 0
 781 007a FFF7FEFF 		bl	HAL_UART_MspInit
 782              	.LVL63:
 783 007e CBE7     		b	.L45
 784              	.LVL64:
 785              	.L46:
 786              	.LCFI8:
 787              		.cfi_def_cfa_offset 0
 788              		.cfi_restore 4
 789              		.cfi_restore 5
 790              		.cfi_restore 6
 791              		.cfi_restore 14
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 792              		.loc 1 439 0
 793 0080 0120     		movs	r0, #1
 794              	.LVL65:
 795 0082 7047     		bx	lr
 796              		.cfi_endproc
 797              	.LFE129:
 799              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 800              		.align	1
 801              		.p2align 2,,3
 802              		.weak	HAL_UART_MspDeInit
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	HAL_UART_MspDeInit:
 809              	.LFB198:
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccS1Udqc.s 			page 61


 813              		@ link register save eliminated.
 814 0000 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE198:
 818 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 819              		.align	1
 820              		.p2align 2,,3
 821              		.global	HAL_UART_DeInit
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu fpv4-sp-d16
 827              	HAL_UART_DeInit:
 828              	.LFB130:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 829              		.loc 1 498 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              	.LVL66:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 834              		.loc 1 500 0
 835 0000 80B1     		cbz	r0, .L55
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 836              		.loc 1 498 0
 837 0002 10B5     		push	{r4, lr}
 838              	.LCFI9:
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 4, -8
 841              		.cfi_offset 14, -4
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 842              		.loc 1 508 0
 843 0004 2423     		movs	r3, #36
 844 0006 0446     		mov	r4, r0
 845 0008 80F83930 		strb	r3, [r0, #57]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 846              		.loc 1 511 0
 847 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 848              	.LVL67:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 849              		.loc 1 513 0
 850 0010 0023     		movs	r3, #0
 851 0012 E363     		str	r3, [r4, #60]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852              		.loc 1 518 0
 853 0014 84F83830 		strb	r3, [r4, #56]
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 854              		.loc 1 514 0
 855 0018 84F83930 		strb	r3, [r4, #57]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 856              		.loc 1 520 0
 857 001c 1846     		mov	r0, r3
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 858              		.loc 1 515 0
 859 001e 84F83A30 		strb	r3, [r4, #58]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 860              		.loc 1 520 0
ARM GAS  /tmp/ccS1Udqc.s 			page 62


 861 0022 10BD     		pop	{r4, pc}
 862              	.LVL68:
 863              	.L55:
 864              	.LCFI10:
 865              		.cfi_def_cfa_offset 0
 866              		.cfi_restore 4
 867              		.cfi_restore 14
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 868              		.loc 1 502 0
 869 0024 0120     		movs	r0, #1
 870              	.LVL69:
 871 0026 7047     		bx	lr
 872              		.cfi_endproc
 873              	.LFE130:
 875              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 876              		.align	1
 877              		.p2align 2,,3
 878              		.global	HAL_UART_Transmit
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	HAL_UART_Transmit:
 885              	.LFB133:
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 886              		.loc 1 619 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 8
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL70:
 891 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 892              	.LCFI11:
 893              		.cfi_def_cfa_offset 20
 894              		.cfi_offset 4, -20
 895              		.cfi_offset 5, -16
 896              		.cfi_offset 6, -12
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 0E46     		mov	r6, r1
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 900              		.loc 1 624 0
 901 0004 90F83910 		ldrb	r1, [r0, #57]	@ zero_extendqisi2
 902              	.LVL71:
 903 0008 2029     		cmp	r1, #32
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 904              		.loc 1 619 0
 905 000a 83B0     		sub	sp, sp, #12
 906              	.LCFI12:
 907              		.cfi_def_cfa_offset 32
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 908              		.loc 1 624 0
 909 000c 02D0     		beq	.L113
 910              	.LVL72:
 911              	.L92:
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 912              		.loc 1 687 0
 913 000e 0220     		movs	r0, #2
ARM GAS  /tmp/ccS1Udqc.s 			page 63


 914              	.LVL73:
 915              	.L109:
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 916              		.loc 1 689 0
 917 0010 03B0     		add	sp, sp, #12
 918              	.LCFI13:
 919              		.cfi_remember_state
 920              		.cfi_def_cfa_offset 20
 921              		@ sp needed
 922 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 923              	.LVL74:
 924              	.L113:
 925              	.LCFI14:
 926              		.cfi_restore_state
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 927              		.loc 1 626 0
 928 0014 5EB3     		cbz	r6, .L91
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 929              		.loc 1 626 0 is_stmt 0 discriminator 1
 930 0016 52B3     		cbz	r2, .L91
 931 0018 1F46     		mov	r7, r3
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 932              		.loc 1 632 0 is_stmt 1
 933 001a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 934              	.LVL75:
 935 001e 012B     		cmp	r3, #1
 936 0020 0446     		mov	r4, r0
 937 0022 F4D0     		beq	.L92
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 938              		.loc 1 634 0 discriminator 2
 939 0024 0020     		movs	r0, #0
 940              	.LVL76:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 941              		.loc 1 632 0 discriminator 2
 942 0026 0121     		movs	r1, #1
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 943              		.loc 1 635 0 discriminator 2
 944 0028 2123     		movs	r3, #33
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 945              		.loc 1 634 0 discriminator 2
 946 002a E063     		str	r0, [r4, #60]
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 947              		.loc 1 632 0 discriminator 2
 948 002c 84F83810 		strb	r1, [r4, #56]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 949              		.loc 1 635 0 discriminator 2
 950 0030 84F83930 		strb	r3, [r4, #57]
 951 0034 0192     		str	r2, [sp, #4]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 952              		.loc 1 638 0 discriminator 2
 953 0036 FFF7FEFF 		bl	HAL_GetTick
 954              	.LVL77:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 955              		.loc 1 640 0 discriminator 2
 956 003a 019A     		ldr	r2, [sp, #4]
 957 003c A284     		strh	r2, [r4, #36]	@ movhi
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 64


 958              		.loc 1 638 0 discriminator 2
 959 003e 0546     		mov	r5, r0
 960              	.LVL78:
 961 0040 2068     		ldr	r0, [r4]
 962              	.LVL79:
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 963              		.loc 1 641 0 discriminator 2
 964 0042 E284     		strh	r2, [r4, #38]	@ movhi
 965              	.LVL80:
 966              	.L62:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 967              		.loc 1 642 0
 968 0044 E38C     		ldrh	r3, [r4, #38]
 969 0046 9BB2     		uxth	r3, r3
 970 0048 002B     		cmp	r3, #0
 971 004a 35D0     		beq	.L80
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 972              		.loc 1 644 0
 973 004c E28C     		ldrh	r2, [r4, #38]
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 974              		.loc 1 645 0
 975 004e A168     		ldr	r1, [r4, #8]
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 976              		.loc 1 644 0
 977 0050 013A     		subs	r2, r2, #1
 978 0052 92B2     		uxth	r2, r2
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 979              		.loc 1 645 0
 980 0054 B1F5805F 		cmp	r1, #4096
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 981              		.loc 1 644 0
 982 0058 E284     		strh	r2, [r4, #38]	@ movhi
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 983              		.loc 1 645 0
 984 005a 15D0     		beq	.L65
 985              	.L64:
 986 005c 791C     		adds	r1, r7, #1
 987 005e 37D1     		bne	.L75
 988              	.L76:
 989              	.LBB30:
 990              	.LBB31:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 991              		.loc 1 2110 0
 992 0060 0268     		ldr	r2, [r0]
 993 0062 1206     		lsls	r2, r2, #24
 994 0064 FCD5     		bpl	.L76
 995              	.L77:
 996              	.LVL81:
 997              	.LBE31:
 998              	.LBE30:
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 999              		.loc 1 668 0
 1000 0066 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1001 0068 4360     		str	r3, [r0, #4]
 1002              	.LVL82:
 1003              	.L112:
 1004 006a 0136     		adds	r6, r6, #1
ARM GAS  /tmp/ccS1Udqc.s 			page 65


 1005 006c EAE7     		b	.L62
 1006              	.LVL83:
 1007              	.L91:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1008              		.loc 1 628 0
 1009 006e 0120     		movs	r0, #1
 1010              	.LVL84:
 1011 0070 CEE7     		b	.L109
 1012              	.LVL85:
 1013              	.L68:
 1014              	.LBB33:
 1015              	.LBB34:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1016              		.loc 1 2110 0
 1017 0072 0368     		ldr	r3, [r0]
 1018 0074 1B06     		lsls	r3, r3, #24
 1019 0076 0CD4     		bmi	.L70
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1020              		.loc 1 2115 0
 1021 0078 002F     		cmp	r7, #0
 1022 007a 33D0     		beq	.L81
 1023 007c FFF7FEFF 		bl	HAL_GetTick
 1024              	.LVL86:
 1025 0080 401B     		subs	r0, r0, r5
 1026 0082 8742     		cmp	r7, r0
 1027 0084 2068     		ldr	r0, [r4]
 1028 0086 2DD3     		bcc	.L81
 1029              	.L65:
 1030 0088 791C     		adds	r1, r7, #1
 1031 008a F2D1     		bne	.L68
 1032              	.L69:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1033              		.loc 1 2110 0
 1034 008c 0268     		ldr	r2, [r0]
 1035 008e 1206     		lsls	r2, r2, #24
 1036 0090 FCD5     		bpl	.L69
 1037              	.L70:
 1038              	.LVL87:
 1039              	.LBE34:
 1040              	.LBE33:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1041              		.loc 1 652 0
 1042 0092 3388     		ldrh	r3, [r6]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1043              		.loc 1 653 0
 1044 0094 2269     		ldr	r2, [r4, #16]
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1045              		.loc 1 652 0
 1046 0096 C3F30803 		ubfx	r3, r3, #0, #9
 1047 009a 4360     		str	r3, [r0, #4]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1048              		.loc 1 653 0
 1049 009c 002A     		cmp	r2, #0
 1050 009e E4D1     		bne	.L112
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1051              		.loc 1 655 0
 1052 00a0 0236     		adds	r6, r6, #2
ARM GAS  /tmp/ccS1Udqc.s 			page 66


 1053              	.LVL88:
 1054 00a2 CFE7     		b	.L62
 1055              	.LVL89:
 1056              	.L83:
 1057              	.LBB35:
 1058              	.LBB36:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1059              		.loc 1 2110 0
 1060 00a4 0368     		ldr	r3, [r0]
 1061 00a6 5B06     		lsls	r3, r3, #25
 1062 00a8 0BD4     		bmi	.L85
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1063              		.loc 1 2115 0
 1064 00aa DFB1     		cbz	r7, .L81
 1065 00ac FFF7FEFF 		bl	HAL_GetTick
 1066              	.LVL90:
 1067 00b0 401B     		subs	r0, r0, r5
 1068 00b2 8742     		cmp	r7, r0
 1069 00b4 2068     		ldr	r0, [r4]
 1070 00b6 15D3     		bcc	.L81
 1071              	.L80:
 1072 00b8 791C     		adds	r1, r7, #1
 1073 00ba F3D1     		bne	.L83
 1074              	.L84:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1075              		.loc 1 2110 0
 1076 00bc 0368     		ldr	r3, [r0]
 1077 00be 5A06     		lsls	r2, r3, #25
 1078 00c0 FCD5     		bpl	.L84
 1079              	.L85:
 1080              	.LBE36:
 1081              	.LBE35:
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1082              		.loc 1 678 0
 1083 00c2 2023     		movs	r3, #32
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1084              		.loc 1 681 0
 1085 00c4 0020     		movs	r0, #0
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1086              		.loc 1 678 0
 1087 00c6 84F83930 		strb	r3, [r4, #57]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1088              		.loc 1 681 0
 1089 00ca 84F83800 		strb	r0, [r4, #56]
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1090              		.loc 1 683 0
 1091 00ce 9FE7     		b	.L109
 1092              	.L75:
 1093              	.LBB43:
 1094              	.LBB32:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1095              		.loc 1 2110 0
 1096 00d0 0368     		ldr	r3, [r0]
 1097 00d2 1B06     		lsls	r3, r3, #24
 1098 00d4 C7D4     		bmi	.L77
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1099              		.loc 1 2115 0
ARM GAS  /tmp/ccS1Udqc.s 			page 67


 1100 00d6 2FB1     		cbz	r7, .L81
 1101 00d8 FFF7FEFF 		bl	HAL_GetTick
 1102              	.LVL91:
 1103 00dc 401B     		subs	r0, r0, r5
 1104 00de 8742     		cmp	r7, r0
 1105 00e0 2068     		ldr	r0, [r4]
 1106 00e2 BBD2     		bcs	.L64
 1107              	.L81:
 1108              	.LVL92:
 1109              	.LBE32:
 1110              	.LBE43:
 1111              	.LBB44:
 1112              	.LBB41:
 1113              	.LBB37:
 1114              	.LBB38:
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1115              		.loc 1 2118 0
 1116 00e4 C368     		ldr	r3, [r0, #12]
 1117 00e6 23F4D073 		bic	r3, r3, #416
 1118 00ea C360     		str	r3, [r0, #12]
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1119              		.loc 1 2119 0
 1120 00ec 4369     		ldr	r3, [r0, #20]
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1121              		.loc 1 2121 0
 1122 00ee 2022     		movs	r2, #32
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1123              		.loc 1 2119 0
 1124 00f0 23F00103 		bic	r3, r3, #1
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1125              		.loc 1 2125 0
 1126 00f4 0021     		movs	r1, #0
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1127              		.loc 1 2119 0
 1128 00f6 4361     		str	r3, [r0, #20]
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1129              		.loc 1 2121 0
 1130 00f8 84F83920 		strb	r2, [r4, #57]
 1131              	.LBE38:
 1132              	.LBE37:
 1133              	.LBE41:
 1134              	.LBE44:
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1135              		.loc 1 674 0
 1136 00fc 0320     		movs	r0, #3
 1137              	.LBB45:
 1138              	.LBB42:
 1139              	.LBB40:
 1140              	.LBB39:
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1141              		.loc 1 2125 0
 1142 00fe 84F83810 		strb	r1, [r4, #56]
 1143              	.LVL93:
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1144              		.loc 1 2122 0
 1145 0102 84F83A20 		strb	r2, [r4, #58]
 1146 0106 83E7     		b	.L109
ARM GAS  /tmp/ccS1Udqc.s 			page 68


 1147              	.LBE39:
 1148              	.LBE40:
 1149              	.LBE42:
 1150              	.LBE45:
 1151              		.cfi_endproc
 1152              	.LFE133:
 1154              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1155              		.align	1
 1156              		.p2align 2,,3
 1157              		.global	HAL_UART_Receive
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv4-sp-d16
 1163              	HAL_UART_Receive:
 1164              	.LFB134:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1165              		.loc 1 701 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 8
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              	.LVL94:
 1170 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1171              	.LCFI15:
 1172              		.cfi_def_cfa_offset 20
 1173              		.cfi_offset 4, -20
 1174              		.cfi_offset 5, -16
 1175              		.cfi_offset 6, -12
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 0E46     		mov	r6, r1
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1179              		.loc 1 706 0
 1180 0004 90F83A10 		ldrb	r1, [r0, #58]	@ zero_extendqisi2
 1181              	.LVL95:
 1182 0008 2029     		cmp	r1, #32
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1183              		.loc 1 701 0
 1184 000a 83B0     		sub	sp, sp, #12
 1185              	.LCFI16:
 1186              		.cfi_def_cfa_offset 32
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1187              		.loc 1 706 0
 1188 000c 02D0     		beq	.L160
 1189              	.LVL96:
 1190              	.L138:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1191              		.loc 1 776 0
 1192 000e 0220     		movs	r0, #2
 1193              	.LVL97:
 1194              	.L153:
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1195              		.loc 1 778 0
 1196 0010 03B0     		add	sp, sp, #12
 1197              	.LCFI17:
 1198              		.cfi_remember_state
 1199              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccS1Udqc.s 			page 69


 1200              		@ sp needed
 1201 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 1202              	.LVL98:
 1203              	.L160:
 1204              	.LCFI18:
 1205              		.cfi_restore_state
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1206              		.loc 1 708 0
 1207 0014 002E     		cmp	r6, #0
 1208 0016 2FD0     		beq	.L137
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1209              		.loc 1 708 0 is_stmt 0 discriminator 1
 1210 0018 002A     		cmp	r2, #0
 1211 001a 2DD0     		beq	.L137
 1212 001c 1F46     		mov	r7, r3
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1213              		.loc 1 714 0 is_stmt 1
 1214 001e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1215              	.LVL99:
 1216 0022 012B     		cmp	r3, #1
 1217 0024 0446     		mov	r4, r0
 1218 0026 F2D0     		beq	.L138
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1219              		.loc 1 716 0 discriminator 2
 1220 0028 0020     		movs	r0, #0
 1221              	.LVL100:
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1222              		.loc 1 714 0 discriminator 2
 1223 002a 0121     		movs	r1, #1
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1224              		.loc 1 717 0 discriminator 2
 1225 002c 2223     		movs	r3, #34
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1226              		.loc 1 716 0 discriminator 2
 1227 002e E063     		str	r0, [r4, #60]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1228              		.loc 1 714 0 discriminator 2
 1229 0030 84F83810 		strb	r1, [r4, #56]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1230              		.loc 1 717 0 discriminator 2
 1231 0034 84F83A30 		strb	r3, [r4, #58]
 1232 0038 0192     		str	r2, [sp, #4]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1233              		.loc 1 720 0 discriminator 2
 1234 003a FFF7FEFF 		bl	HAL_GetTick
 1235              	.LVL101:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1236              		.loc 1 722 0 discriminator 2
 1237 003e 019A     		ldr	r2, [sp, #4]
 1238 0040 A285     		strh	r2, [r4, #44]	@ movhi
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1239              		.loc 1 720 0 discriminator 2
 1240 0042 0546     		mov	r5, r0
 1241              	.LVL102:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1242              		.loc 1 723 0 discriminator 2
 1243 0044 E285     		strh	r2, [r4, #46]	@ movhi
ARM GAS  /tmp/ccS1Udqc.s 			page 70


 1244              	.LVL103:
 1245              	.L116:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1246              		.loc 1 726 0
 1247 0046 E08D     		ldrh	r0, [r4, #46]
 1248 0048 80B2     		uxth	r0, r0
 1249 004a 0028     		cmp	r0, #0
 1250 004c 54D0     		beq	.L161
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1251              		.loc 1 728 0
 1252 004e E28D     		ldrh	r2, [r4, #46]
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1253              		.loc 1 729 0
 1254 0050 A368     		ldr	r3, [r4, #8]
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1255              		.loc 1 728 0
 1256 0052 013A     		subs	r2, r2, #1
 1257 0054 92B2     		uxth	r2, r2
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1258              		.loc 1 729 0
 1259 0056 B3F5805F 		cmp	r3, #4096
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1260              		.loc 1 728 0
 1261 005a E285     		strh	r2, [r4, #46]	@ movhi
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1262              		.loc 1 729 0
 1263 005c 17D0     		beq	.L117
 1264              	.L118:
 1265 005e 791C     		adds	r1, r7, #1
 1266 0060 2068     		ldr	r0, [r4]
 1267 0062 22D1     		bne	.L126
 1268              	.L127:
 1269              	.LBB54:
 1270              	.LBB55:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1271              		.loc 1 2110 0
 1272 0064 0268     		ldr	r2, [r0]
 1273 0066 9206     		lsls	r2, r2, #26
 1274 0068 FCD5     		bpl	.L127
 1275              	.L128:
 1276              	.LBE55:
 1277              	.LBE54:
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1278              		.loc 1 754 0
 1279 006a 2369     		ldr	r3, [r4, #16]
 1280 006c 002B     		cmp	r3, #0
 1281 006e 38D1     		bne	.L162
 1282              	.LVL104:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1283              		.loc 1 756 0
 1284 0070 4368     		ldr	r3, [r0, #4]
 1285 0072 3370     		strb	r3, [r6]
 1286 0074 0136     		adds	r6, r6, #1
 1287              	.LVL105:
 1288 0076 E6E7     		b	.L116
 1289              	.LVL106:
 1290              	.L137:
ARM GAS  /tmp/ccS1Udqc.s 			page 71


 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1291              		.loc 1 710 0
 1292 0078 0120     		movs	r0, #1
 1293              	.LVL107:
 1294 007a C9E7     		b	.L153
 1295              	.LVL108:
 1296              	.L120:
 1297              	.LBB62:
 1298              	.LBB63:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1299              		.loc 1 2110 0
 1300 007c 0368     		ldr	r3, [r0]
 1301 007e 9B06     		lsls	r3, r3, #26
 1302 0080 0BD4     		bmi	.L122
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1303              		.loc 1 2115 0
 1304 0082 E7B1     		cbz	r7, .L125
 1305 0084 FFF7FEFF 		bl	HAL_GetTick
 1306              	.LVL109:
 1307 0088 401B     		subs	r0, r0, r5
 1308 008a 8742     		cmp	r7, r0
 1309 008c 16D3     		bcc	.L157
 1310              	.L117:
 1311 008e 791C     		adds	r1, r7, #1
 1312 0090 2068     		ldr	r0, [r4]
 1313 0092 F3D1     		bne	.L120
 1314              	.L121:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1315              		.loc 1 2110 0
 1316 0094 0268     		ldr	r2, [r0]
 1317 0096 9206     		lsls	r2, r2, #26
 1318 0098 FCD5     		bpl	.L121
 1319              	.L122:
 1320              	.LVL110:
 1321              	.LBE63:
 1322              	.LBE62:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1323              		.loc 1 736 0
 1324 009a 2369     		ldr	r3, [r4, #16]
 1325 009c 3BBB     		cbnz	r3, .L163
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1326              		.loc 1 738 0
 1327 009e 4368     		ldr	r3, [r0, #4]
 1328 00a0 C3F30803 		ubfx	r3, r3, #0, #9
 1329 00a4 26F8023B 		strh	r3, [r6], #2	@ movhi
 1330              	.LVL111:
 1331 00a8 CDE7     		b	.L116
 1332              	.LVL112:
 1333              	.L126:
 1334              	.LBB64:
 1335              	.LBB60:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1336              		.loc 1 2110 0
 1337 00aa 0368     		ldr	r3, [r0]
 1338 00ac 9B06     		lsls	r3, r3, #26
 1339 00ae DCD4     		bmi	.L128
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccS1Udqc.s 			page 72


 1340              		.loc 1 2115 0
 1341 00b0 2FB1     		cbz	r7, .L125
 1342 00b2 FFF7FEFF 		bl	HAL_GetTick
 1343              	.LVL113:
 1344 00b6 401B     		subs	r0, r0, r5
 1345 00b8 8742     		cmp	r7, r0
 1346 00ba D0D2     		bcs	.L118
 1347              	.L157:
 1348 00bc 2068     		ldr	r0, [r4]
 1349              	.L125:
 1350              	.LVL114:
 1351              	.LBB56:
 1352              	.LBB57:
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1353              		.loc 1 2118 0
 1354 00be C368     		ldr	r3, [r0, #12]
 1355 00c0 23F4D073 		bic	r3, r3, #416
 1356 00c4 C360     		str	r3, [r0, #12]
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1357              		.loc 1 2119 0
 1358 00c6 4369     		ldr	r3, [r0, #20]
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1359              		.loc 1 2121 0
 1360 00c8 2022     		movs	r2, #32
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1361              		.loc 1 2119 0
 1362 00ca 23F00103 		bic	r3, r3, #1
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1363              		.loc 1 2125 0
 1364 00ce 0021     		movs	r1, #0
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1365              		.loc 1 2119 0
 1366 00d0 4361     		str	r3, [r0, #20]
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1367              		.loc 1 2121 0
 1368 00d2 84F83920 		strb	r2, [r4, #57]
 1369              	.LBE57:
 1370              	.LBE56:
 1371              	.LBE60:
 1372              	.LBE64:
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1373              		.loc 1 752 0
 1374 00d6 0320     		movs	r0, #3
 1375              	.LBB65:
 1376              	.LBB61:
 1377              	.LBB59:
 1378              	.LBB58:
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1379              		.loc 1 2125 0
 1380 00d8 84F83810 		strb	r1, [r4, #56]
 1381              	.LVL115:
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1382              		.loc 1 2122 0
 1383 00dc 84F83A20 		strb	r2, [r4, #58]
 1384 00e0 96E7     		b	.L153
 1385              	.L162:
 1386              	.LVL116:
ARM GAS  /tmp/ccS1Udqc.s 			page 73


 1387              	.LBE58:
 1388              	.LBE59:
 1389              	.LBE61:
 1390              	.LBE65:
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1391              		.loc 1 760 0
 1392 00e2 4368     		ldr	r3, [r0, #4]
 1393 00e4 03F07F03 		and	r3, r3, #127
 1394 00e8 3370     		strb	r3, [r6]
 1395 00ea 0136     		adds	r6, r6, #1
 1396              	.LVL117:
 1397 00ec ABE7     		b	.L116
 1398              	.LVL118:
 1399              	.L163:
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1400              		.loc 1 743 0
 1401 00ee 4368     		ldr	r3, [r0, #4]
 1402 00f0 DBB2     		uxtb	r3, r3
 1403 00f2 26F8013B 		strh	r3, [r6], #1	@ movhi
 1404              	.LVL119:
 1405 00f6 A6E7     		b	.L116
 1406              	.LVL120:
 1407              	.L161:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1408              		.loc 1 767 0
 1409 00f8 2023     		movs	r3, #32
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1410              		.loc 1 770 0
 1411 00fa 84F83800 		strb	r0, [r4, #56]
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1412              		.loc 1 767 0
 1413 00fe 84F83A30 		strb	r3, [r4, #58]
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1414              		.loc 1 772 0
 1415 0102 85E7     		b	.L153
 1416              		.cfi_endproc
 1417              	.LFE134:
 1419              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1420              		.align	1
 1421              		.p2align 2,,3
 1422              		.global	HAL_UART_Transmit_IT
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	HAL_UART_Transmit_IT:
 1429              	.LFB135:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1430              		.loc 1 789 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435              	.LVL121:
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1436              		.loc 1 791 0
 1437 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
ARM GAS  /tmp/ccS1Udqc.s 			page 74


 1438 0004 202B     		cmp	r3, #32
 1439 0006 01D0     		beq	.L174
 1440              	.L169:
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1441              		.loc 1 818 0
 1442 0008 0220     		movs	r0, #2
 1443              	.LVL122:
 1444 000a 7047     		bx	lr
 1445              	.LVL123:
 1446              	.L174:
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1447              		.loc 1 793 0
 1448 000c B9B1     		cbz	r1, .L168
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1449              		.loc 1 793 0 is_stmt 0 discriminator 1
 1450 000e B2B1     		cbz	r2, .L168
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1451              		.loc 1 799 0 is_stmt 1
 1452 0010 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1453 0014 012B     		cmp	r3, #1
 1454 0016 F7D0     		beq	.L169
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1455              		.loc 1 789 0 discriminator 2
 1456 0018 30B4     		push	{r4, r5}
 1457              	.LCFI19:
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 4, -8
 1460              		.cfi_offset 5, -4
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1461              		.loc 1 805 0 discriminator 2
 1462 001a 0023     		movs	r3, #0
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1463              		.loc 1 812 0 discriminator 2
 1464 001c 0568     		ldr	r5, [r0]
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1465              		.loc 1 803 0 discriminator 2
 1466 001e C284     		strh	r2, [r0, #38]	@ movhi
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1467              		.loc 1 806 0 discriminator 2
 1468 0020 2124     		movs	r4, #33
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1469              		.loc 1 805 0 discriminator 2
 1470 0022 C363     		str	r3, [r0, #60]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1471              		.loc 1 806 0 discriminator 2
 1472 0024 80F83940 		strb	r4, [r0, #57]
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1473              		.loc 1 812 0 discriminator 2
 1474 0028 EC68     		ldr	r4, [r5, #12]
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1475              		.loc 1 801 0 discriminator 2
 1476 002a 0162     		str	r1, [r0, #32]
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1477              		.loc 1 812 0 discriminator 2
 1478 002c 44F08004 		orr	r4, r4, #128
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1479              		.loc 1 802 0 discriminator 2
ARM GAS  /tmp/ccS1Udqc.s 			page 75


 1480 0030 8284     		strh	r2, [r0, #36]	@ movhi
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1481              		.loc 1 809 0 discriminator 2
 1482 0032 80F83830 		strb	r3, [r0, #56]
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1483              		.loc 1 814 0 discriminator 2
 1484 0036 1846     		mov	r0, r3
 1485              	.LVL124:
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1486              		.loc 1 812 0 discriminator 2
 1487 0038 EC60     		str	r4, [r5, #12]
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1488              		.loc 1 820 0 discriminator 2
 1489 003a 30BC     		pop	{r4, r5}
 1490              	.LCFI20:
 1491              		.cfi_restore 5
 1492              		.cfi_restore 4
 1493              		.cfi_def_cfa_offset 0
 1494 003c 7047     		bx	lr
 1495              	.LVL125:
 1496              	.L168:
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1497              		.loc 1 795 0
 1498 003e 0120     		movs	r0, #1
 1499              	.LVL126:
 1500 0040 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE135:
 1504 0042 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1505              		.align	1
 1506              		.p2align 2,,3
 1507              		.global	HAL_UART_Receive_IT
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	HAL_UART_Receive_IT:
 1514              	.LFB136:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1515              		.loc 1 831 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 1520              	.LVL127:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1521              		.loc 1 833 0
 1522 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1523 0004 202B     		cmp	r3, #32
 1524 0006 01D0     		beq	.L185
 1525              	.L180:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1526              		.loc 1 863 0
 1527 0008 0220     		movs	r0, #2
 1528              	.LVL128:
 1529 000a 7047     		bx	lr
 1530              	.LVL129:
ARM GAS  /tmp/ccS1Udqc.s 			page 76


 1531              	.L185:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1532              		.loc 1 835 0
 1533 000c D9B1     		cbz	r1, .L179
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1534              		.loc 1 835 0 is_stmt 0 discriminator 1
 1535 000e D2B1     		cbz	r2, .L179
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1536              		.loc 1 841 0 is_stmt 1
 1537 0010 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1538 0014 012B     		cmp	r3, #1
 1539 0016 F7D0     		beq	.L180
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1540              		.loc 1 831 0 discriminator 2
 1541 0018 30B4     		push	{r4, r5}
 1542              	.LCFI21:
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 4, -8
 1545              		.cfi_offset 5, -4
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1546              		.loc 1 847 0 discriminator 2
 1547 001a 0023     		movs	r3, #0
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1548              		.loc 1 854 0 discriminator 2
 1549 001c 0468     		ldr	r4, [r0]
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1550              		.loc 1 845 0 discriminator 2
 1551 001e C285     		strh	r2, [r0, #46]	@ movhi
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1552              		.loc 1 848 0 discriminator 2
 1553 0020 2225     		movs	r5, #34
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1554              		.loc 1 847 0 discriminator 2
 1555 0022 C363     		str	r3, [r0, #60]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1556              		.loc 1 848 0 discriminator 2
 1557 0024 80F83A50 		strb	r5, [r0, #58]
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1558              		.loc 1 854 0 discriminator 2
 1559 0028 6569     		ldr	r5, [r4, #20]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1560              		.loc 1 844 0 discriminator 2
 1561 002a 8285     		strh	r2, [r0, #44]	@ movhi
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1562              		.loc 1 854 0 discriminator 2
 1563 002c 45F00105 		orr	r5, r5, #1
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1564              		.loc 1 843 0 discriminator 2
 1565 0030 8162     		str	r1, [r0, #40]
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1566              		.loc 1 851 0 discriminator 2
 1567 0032 80F83830 		strb	r3, [r0, #56]
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1568              		.loc 1 854 0 discriminator 2
 1569 0036 6561     		str	r5, [r4, #20]
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1570              		.loc 1 857 0 discriminator 2
ARM GAS  /tmp/ccS1Udqc.s 			page 77


 1571 0038 E268     		ldr	r2, [r4, #12]
 1572              	.LVL130:
 1573 003a 42F49072 		orr	r2, r2, #288
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1574              		.loc 1 859 0 discriminator 2
 1575 003e 1846     		mov	r0, r3
 1576              	.LVL131:
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1577              		.loc 1 857 0 discriminator 2
 1578 0040 E260     		str	r2, [r4, #12]
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1579              		.loc 1 865 0 discriminator 2
 1580 0042 30BC     		pop	{r4, r5}
 1581              	.LCFI22:
 1582              		.cfi_restore 5
 1583              		.cfi_restore 4
 1584              		.cfi_def_cfa_offset 0
 1585 0044 7047     		bx	lr
 1586              	.LVL132:
 1587              	.L179:
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1588              		.loc 1 837 0
 1589 0046 0120     		movs	r0, #1
 1590              	.LVL133:
 1591 0048 7047     		bx	lr
 1592              		.cfi_endproc
 1593              	.LFE136:
 1595 004a 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1596              		.align	1
 1597              		.p2align 2,,3
 1598              		.global	HAL_UART_Transmit_DMA
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv4-sp-d16
 1604              	HAL_UART_Transmit_DMA:
 1605              	.LFB137:
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1606              		.loc 1 876 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL134:
 1611 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1612              	.LCFI23:
 1613              		.cfi_def_cfa_offset 24
 1614              		.cfi_offset 3, -24
 1615              		.cfi_offset 4, -20
 1616              		.cfi_offset 5, -16
 1617              		.cfi_offset 6, -12
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1620              		.loc 1 880 0
 1621 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1622 0006 202C     		cmp	r4, #32
 1623 0008 01D0     		beq	.L193
ARM GAS  /tmp/ccS1Udqc.s 			page 78


 1624              	.L191:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1625              		.loc 1 927 0
 1626 000a 0220     		movs	r0, #2
 1627              	.LVL135:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1628              		.loc 1 929 0
 1629 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1630              	.LVL136:
 1631              	.L193:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1632              		.loc 1 882 0
 1633 000e 59B3     		cbz	r1, .L190
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1634              		.loc 1 882 0 is_stmt 0 discriminator 1
 1635 0010 52B3     		cbz	r2, .L190
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1636              		.loc 1 888 0 is_stmt 1
 1637 0012 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 1638 0016 012C     		cmp	r4, #1
 1639 0018 F7D0     		beq	.L191
 1640 001a 0446     		mov	r4, r0
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1641              		.loc 1 888 0 is_stmt 0 discriminator 2
 1642 001c 0126     		movs	r6, #1
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1643              		.loc 1 898 0 is_stmt 1 discriminator 2
 1644 001e 006B     		ldr	r0, [r0, #48]
 1645              	.LVL137:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1646              		.loc 1 888 0 discriminator 2
 1647 0020 84F83860 		strb	r6, [r4, #56]
 1648 0024 1346     		mov	r3, r2
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1649              		.loc 1 894 0 discriminator 2
 1650 0026 0025     		movs	r5, #0
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1651              		.loc 1 911 0 discriminator 2
 1652 0028 2268     		ldr	r2, [r4]
 1653              	.LVL138:
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1654              		.loc 1 892 0 discriminator 2
 1655 002a E384     		strh	r3, [r4, #38]	@ movhi
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1656              		.loc 1 895 0 discriminator 2
 1657 002c 2126     		movs	r6, #33
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1658              		.loc 1 894 0 discriminator 2
 1659 002e E563     		str	r5, [r4, #60]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1660              		.loc 1 898 0 discriminator 2
 1661 0030 DFF840E0 		ldr	lr, .L194+8
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1662              		.loc 1 895 0 discriminator 2
 1663 0034 84F83960 		strb	r6, [r4, #57]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1664              		.loc 1 901 0 discriminator 2
ARM GAS  /tmp/ccS1Udqc.s 			page 79


 1665 0038 0C4F     		ldr	r7, .L194
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1666              		.loc 1 904 0 discriminator 2
 1667 003a 0D4E     		ldr	r6, .L194+4
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1668              		.loc 1 891 0 discriminator 2
 1669 003c A384     		strh	r3, [r4, #36]	@ movhi
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1670              		.loc 1 890 0 discriminator 2
 1671 003e 2162     		str	r1, [r4, #32]
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1672              		.loc 1 911 0 discriminator 2
 1673 0040 0432     		adds	r2, r2, #4
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1674              		.loc 1 907 0 discriminator 2
 1675 0042 0565     		str	r5, [r0, #80]
 1676              	.LVL139:
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1677              		.loc 1 898 0 discriminator 2
 1678 0044 C0F83CE0 		str	lr, [r0, #60]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1679              		.loc 1 901 0 discriminator 2
 1680 0048 0764     		str	r7, [r0, #64]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1681              		.loc 1 904 0 discriminator 2
 1682 004a C664     		str	r6, [r0, #76]
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1683              		.loc 1 911 0 discriminator 2
 1684 004c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1685              	.LVL140:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1686              		.loc 1 914 0 discriminator 2
 1687 0050 2368     		ldr	r3, [r4]
 1688 0052 6FF04002 		mvn	r2, #64
 1689 0056 1A60     		str	r2, [r3]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1690              		.loc 1 921 0 discriminator 2
 1691 0058 5A69     		ldr	r2, [r3, #20]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1692              		.loc 1 917 0 discriminator 2
 1693 005a 84F83850 		strb	r5, [r4, #56]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1694              		.loc 1 921 0 discriminator 2
 1695 005e 42F08002 		orr	r2, r2, #128
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1696              		.loc 1 923 0 discriminator 2
 1697 0062 2846     		mov	r0, r5
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1698              		.loc 1 921 0 discriminator 2
 1699 0064 5A61     		str	r2, [r3, #20]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1700              		.loc 1 923 0 discriminator 2
 1701 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1702              	.LVL141:
 1703              	.L190:
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1704              		.loc 1 884 0
ARM GAS  /tmp/ccS1Udqc.s 			page 80


 1705 0068 0120     		movs	r0, #1
 1706              	.LVL142:
 1707 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1708              	.L195:
 1709              		.align	2
 1710              	.L194:
 1711 006c 00000000 		.word	UART_DMATxHalfCplt
 1712 0070 00000000 		.word	UART_DMAError
 1713 0074 00000000 		.word	UART_DMATransmitCplt
 1714              		.cfi_endproc
 1715              	.LFE137:
 1717              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1718              		.align	1
 1719              		.p2align 2,,3
 1720              		.global	HAL_UART_Receive_DMA
 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1724              		.fpu fpv4-sp-d16
 1726              	HAL_UART_Receive_DMA:
 1727              	.LFB138:
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1728              		.loc 1 941 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              	.LVL143:
 1733 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1734              	.LCFI24:
 1735              		.cfi_def_cfa_offset 24
 1736              		.cfi_offset 3, -24
 1737              		.cfi_offset 4, -20
 1738              		.cfi_offset 5, -16
 1739              		.cfi_offset 6, -12
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1742              		.loc 1 945 0
 1743 0002 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1744 0006 202C     		cmp	r4, #32
 1745 0008 01D0     		beq	.L203
 1746              	.L201:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1747              		.loc 1 994 0
 1748 000a 0220     		movs	r0, #2
 1749              	.LVL144:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1750              		.loc 1 996 0
 1751 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1752              	.LVL145:
 1753              	.L203:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1754              		.loc 1 947 0
 1755 000e 0029     		cmp	r1, #0
 1756 0010 2FD0     		beq	.L200
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1757              		.loc 1 947 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccS1Udqc.s 			page 81


 1758 0012 002A     		cmp	r2, #0
 1759 0014 2DD0     		beq	.L200
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1760              		.loc 1 953 0 is_stmt 1
 1761 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1762 001a 012B     		cmp	r3, #1
 1763 001c F5D0     		beq	.L201
 1764 001e 0446     		mov	r4, r0
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1765              		.loc 1 953 0 is_stmt 0 discriminator 2
 1766 0020 0127     		movs	r7, #1
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1767              		.loc 1 962 0 is_stmt 1 discriminator 2
 1768 0022 406B     		ldr	r0, [r0, #52]
 1769              	.LVL146:
 1770 0024 144E     		ldr	r6, .L204
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1771              		.loc 1 953 0 discriminator 2
 1772 0026 84F83870 		strb	r7, [r4, #56]
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1773              		.loc 1 958 0 discriminator 2
 1774 002a 0025     		movs	r5, #0
 1775 002c 1346     		mov	r3, r2
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1776              		.loc 1 959 0 discriminator 2
 1777 002e 2227     		movs	r7, #34
 1778 0030 0A46     		mov	r2, r1
 1779              	.LVL147:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1780              		.loc 1 975 0 discriminator 2
 1781 0032 2168     		ldr	r1, [r4]
 1782              	.LVL148:
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1783              		.loc 1 955 0 discriminator 2
 1784 0034 A262     		str	r2, [r4, #40]
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1785              		.loc 1 956 0 discriminator 2
 1786 0036 A385     		strh	r3, [r4, #44]	@ movhi
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1787              		.loc 1 958 0 discriminator 2
 1788 0038 E563     		str	r5, [r4, #60]
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1789              		.loc 1 959 0 discriminator 2
 1790 003a 84F83A70 		strb	r7, [r4, #58]
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1791              		.loc 1 965 0 discriminator 2
 1792 003e 0F4F     		ldr	r7, .L204+4
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1793              		.loc 1 962 0 discriminator 2
 1794 0040 C663     		str	r6, [r0, #60]
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1795              		.loc 1 968 0 discriminator 2
 1796 0042 0F4E     		ldr	r6, .L204+8
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1797              		.loc 1 971 0 discriminator 2
 1798 0044 0565     		str	r5, [r0, #80]
 1799              	.LVL149:
ARM GAS  /tmp/ccS1Udqc.s 			page 82


 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1800              		.loc 1 965 0 discriminator 2
 1801 0046 0764     		str	r7, [r0, #64]
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1802              		.loc 1 968 0 discriminator 2
 1803 0048 C664     		str	r6, [r0, #76]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1804              		.loc 1 975 0 discriminator 2
 1805 004a 0431     		adds	r1, r1, #4
 1806 004c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1807              	.LVL150:
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1808              		.loc 1 978 0 discriminator 2
 1809 0050 2368     		ldr	r3, [r4]
 1810 0052 DA68     		ldr	r2, [r3, #12]
 1811 0054 42F48072 		orr	r2, r2, #256
 1812 0058 DA60     		str	r2, [r3, #12]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1813              		.loc 1 981 0 discriminator 2
 1814 005a 5A69     		ldr	r2, [r3, #20]
 1815 005c 42F00102 		orr	r2, r2, #1
 1816 0060 5A61     		str	r2, [r3, #20]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1817              		.loc 1 985 0 discriminator 2
 1818 0062 5A69     		ldr	r2, [r3, #20]
 1819 0064 42F04002 		orr	r2, r2, #64
 1820 0068 5A61     		str	r2, [r3, #20]
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1821              		.loc 1 990 0 discriminator 2
 1822 006a 2846     		mov	r0, r5
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1823              		.loc 1 988 0 discriminator 2
 1824 006c 84F83850 		strb	r5, [r4, #56]
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1825              		.loc 1 990 0 discriminator 2
 1826 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1827              	.LVL151:
 1828              	.L200:
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1829              		.loc 1 949 0
 1830 0072 0120     		movs	r0, #1
 1831              	.LVL152:
 1832 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1833              	.L205:
 1834 0076 00BF     		.align	2
 1835              	.L204:
 1836 0078 00000000 		.word	UART_DMAReceiveCplt
 1837 007c 00000000 		.word	UART_DMARxHalfCplt
 1838 0080 00000000 		.word	UART_DMAError
 1839              		.cfi_endproc
 1840              	.LFE138:
 1842              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1843              		.align	1
 1844              		.p2align 2,,3
 1845              		.global	HAL_UART_DMAPause
 1846              		.syntax unified
 1847              		.thumb
ARM GAS  /tmp/ccS1Udqc.s 			page 83


 1848              		.thumb_func
 1849              		.fpu fpv4-sp-d16
 1851              	HAL_UART_DMAPause:
 1852              	.LFB139:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1853              		.loc 1 1005 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 1858              	.LVL153:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1859              		.loc 1 1009 0
 1860 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1861 0004 012B     		cmp	r3, #1
 1862 0006 15D0     		beq	.L210
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1863              		.loc 1 1010 0 discriminator 2
 1864 0008 0368     		ldr	r3, [r0]
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1865              		.loc 1 1005 0 discriminator 2
 1866 000a 10B4     		push	{r4}
 1867              	.LCFI25:
 1868              		.cfi_def_cfa_offset 4
 1869              		.cfi_offset 4, -4
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1870              		.loc 1 1010 0 discriminator 2
 1871 000c 5C69     		ldr	r4, [r3, #20]
 1872              	.LVL154:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1873              		.loc 1 1011 0 discriminator 2
 1874 000e 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1875              		.loc 1 1009 0 discriminator 2
 1876 0012 0121     		movs	r1, #1
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1877              		.loc 1 1011 0 discriminator 2
 1878 0014 212A     		cmp	r2, #33
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1879              		.loc 1 1009 0 discriminator 2
 1880 0016 80F83810 		strb	r1, [r0, #56]
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1881              		.loc 1 1011 0 discriminator 2
 1882 001a 1CD0     		beq	.L221
 1883              	.L208:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1884              		.loc 1 1016 0
 1885 001c 5969     		ldr	r1, [r3, #20]
 1886              	.LVL155:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1887              		.loc 1 1017 0
 1888 001e 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 1889 0022 222A     		cmp	r2, #34
 1890 0024 08D0     		beq	.L222
 1891              	.L209:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1892              		.loc 1 1028 0
ARM GAS  /tmp/ccS1Udqc.s 			page 84


 1893 0026 0023     		movs	r3, #0
 1894 0028 80F83830 		strb	r3, [r0, #56]
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1895              		.loc 1 1031 0
 1896 002c 5DF8044B 		ldr	r4, [sp], #4
 1897              	.LCFI26:
 1898              		.cfi_restore 4
 1899              		.cfi_def_cfa_offset 0
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1900              		.loc 1 1030 0
 1901 0030 1846     		mov	r0, r3
 1902              	.LVL156:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1903              		.loc 1 1031 0
 1904 0032 7047     		bx	lr
 1905              	.LVL157:
 1906              	.L210:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1907              		.loc 1 1009 0
 1908 0034 0220     		movs	r0, #2
 1909              	.LVL158:
 1910 0036 7047     		bx	lr
 1911              	.LVL159:
 1912              	.L222:
 1913              	.LCFI27:
 1914              		.cfi_def_cfa_offset 4
 1915              		.cfi_offset 4, -4
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1916              		.loc 1 1017 0 discriminator 1
 1917 0038 4A06     		lsls	r2, r1, #25
 1918 003a F4D5     		bpl	.L209
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1919              		.loc 1 1020 0
 1920 003c DA68     		ldr	r2, [r3, #12]
 1921 003e 22F48072 		bic	r2, r2, #256
 1922 0042 DA60     		str	r2, [r3, #12]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1923              		.loc 1 1021 0
 1924 0044 5A69     		ldr	r2, [r3, #20]
 1925 0046 22F00102 		bic	r2, r2, #1
 1926 004a 5A61     		str	r2, [r3, #20]
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1927              		.loc 1 1024 0
 1928 004c 5A69     		ldr	r2, [r3, #20]
 1929 004e 22F04002 		bic	r2, r2, #64
 1930 0052 5A61     		str	r2, [r3, #20]
 1931 0054 E7E7     		b	.L209
 1932              	.LVL160:
 1933              	.L221:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1934              		.loc 1 1011 0 discriminator 1
 1935 0056 2106     		lsls	r1, r4, #24
 1936 0058 E0D5     		bpl	.L208
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1937              		.loc 1 1014 0
 1938 005a 5A69     		ldr	r2, [r3, #20]
 1939 005c 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/ccS1Udqc.s 			page 85


 1940 0060 5A61     		str	r2, [r3, #20]
 1941 0062 DBE7     		b	.L208
 1942              		.cfi_endproc
 1943              	.LFE139:
 1945              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1946              		.align	1
 1947              		.p2align 2,,3
 1948              		.global	HAL_UART_DMAResume
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu fpv4-sp-d16
 1954              	HAL_UART_DMAResume:
 1955              	.LFB140:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1956              		.loc 1 1040 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 8
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              		@ link register save eliminated.
 1961              	.LVL161:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1962              		.loc 1 1042 0
 1963 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1964 0004 012B     		cmp	r3, #1
 1965 0006 0FD0     		beq	.L227
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1966              		.loc 1 1044 0 discriminator 2
 1967 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1968              		.loc 1 1042 0 discriminator 2
 1969 000c 0122     		movs	r2, #1
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1970              		.loc 1 1044 0 discriminator 2
 1971 000e 212B     		cmp	r3, #33
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1972              		.loc 1 1042 0 discriminator 2
 1973 0010 80F83820 		strb	r2, [r0, #56]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1974              		.loc 1 1044 0 discriminator 2
 1975 0014 25D0     		beq	.L233
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1976              		.loc 1 1049 0
 1977 0016 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1978 001a 222B     		cmp	r3, #34
 1979 001c 06D0     		beq	.L234
 1980              	.L229:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1981              		.loc 1 1063 0
 1982 001e 0023     		movs	r3, #0
 1983 0020 80F83830 		strb	r3, [r0, #56]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1984              		.loc 1 1065 0
 1985 0024 1846     		mov	r0, r3
 1986              	.LVL162:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1987              		.loc 1 1066 0
ARM GAS  /tmp/ccS1Udqc.s 			page 86


 1988 0026 7047     		bx	lr
 1989              	.LVL163:
 1990              	.L227:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1991              		.loc 1 1042 0
 1992 0028 0220     		movs	r0, #2
 1993              	.LVL164:
 1994 002a 7047     		bx	lr
 1995              	.LVL165:
 1996              	.L234:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1997              		.loc 1 1040 0
 1998 002c 82B0     		sub	sp, sp, #8
 1999              	.LCFI28:
 2000              		.cfi_def_cfa_offset 8
 2001              	.LBB66:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2002              		.loc 1 1052 0
 2003 002e 0368     		ldr	r3, [r0]
 2004 0030 0022     		movs	r2, #0
 2005 0032 0192     		str	r2, [sp, #4]
 2006 0034 1A68     		ldr	r2, [r3]
 2007 0036 0192     		str	r2, [sp, #4]
 2008 0038 5A68     		ldr	r2, [r3, #4]
 2009 003a 0192     		str	r2, [sp, #4]
 2010 003c 019A     		ldr	r2, [sp, #4]
 2011              	.LBE66:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2012              		.loc 1 1055 0
 2013 003e DA68     		ldr	r2, [r3, #12]
 2014 0040 42F48072 		orr	r2, r2, #256
 2015 0044 DA60     		str	r2, [r3, #12]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2016              		.loc 1 1056 0
 2017 0046 5A69     		ldr	r2, [r3, #20]
 2018 0048 42F00102 		orr	r2, r2, #1
 2019 004c 5A61     		str	r2, [r3, #20]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2020              		.loc 1 1059 0
 2021 004e 5A69     		ldr	r2, [r3, #20]
 2022 0050 42F04002 		orr	r2, r2, #64
 2023 0054 5A61     		str	r2, [r3, #20]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2024              		.loc 1 1063 0
 2025 0056 0023     		movs	r3, #0
 2026 0058 80F83830 		strb	r3, [r0, #56]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2027              		.loc 1 1065 0
 2028 005c 1846     		mov	r0, r3
 2029              	.LVL166:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2030              		.loc 1 1066 0
 2031 005e 02B0     		add	sp, sp, #8
 2032              	.LCFI29:
 2033              		.cfi_def_cfa_offset 0
 2034              		@ sp needed
 2035 0060 7047     		bx	lr
ARM GAS  /tmp/ccS1Udqc.s 			page 87


 2036              	.LVL167:
 2037              	.L233:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2038              		.loc 1 1047 0
 2039 0062 0268     		ldr	r2, [r0]
 2040 0064 5369     		ldr	r3, [r2, #20]
 2041 0066 43F08003 		orr	r3, r3, #128
 2042 006a 5361     		str	r3, [r2, #20]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2043              		.loc 1 1049 0
 2044 006c 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2045 0070 222B     		cmp	r3, #34
 2046 0072 D4D1     		bne	.L229
 2047 0074 DAE7     		b	.L234
 2048              		.cfi_endproc
 2049              	.LFE140:
 2051 0076 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2052              		.align	1
 2053              		.p2align 2,,3
 2054              		.global	HAL_UART_DMAStop
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2058              		.fpu fpv4-sp-d16
 2060              	HAL_UART_DMAStop:
 2061              	.LFB141:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2062              		.loc 1 1075 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 0
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 2066              	.LVL168:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2067              		.loc 1 1084 0
 2068 0000 0368     		ldr	r3, [r0]
 2069 0002 5969     		ldr	r1, [r3, #20]
 2070              	.LVL169:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2071              		.loc 1 1085 0
 2072 0004 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 2073 0008 212A     		cmp	r2, #33
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2074              		.loc 1 1075 0
 2075 000a 10B5     		push	{r4, lr}
 2076              	.LCFI30:
 2077              		.cfi_def_cfa_offset 8
 2078              		.cfi_offset 4, -8
 2079              		.cfi_offset 14, -4
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2080              		.loc 1 1075 0
 2081 000c 0446     		mov	r4, r0
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2082              		.loc 1 1085 0
 2083 000e 1ED0     		beq	.L253
 2084              	.LVL170:
 2085              	.L236:
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
ARM GAS  /tmp/ccS1Udqc.s 			page 88


 2086              		.loc 1 1098 0
 2087 0010 5969     		ldr	r1, [r3, #20]
 2088              	.LVL171:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2089              		.loc 1 1099 0
 2090 0012 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 2091 0016 222A     		cmp	r2, #34
 2092 0018 01D0     		beq	.L254
 2093              	.L238:
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2094              		.loc 1 1112 0
 2095 001a 0020     		movs	r0, #0
 2096 001c 10BD     		pop	{r4, pc}
 2097              	.LVL172:
 2098              	.L254:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2099              		.loc 1 1099 0 discriminator 1
 2100 001e 4A06     		lsls	r2, r1, #25
 2101 0020 FBD5     		bpl	.L238
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2102              		.loc 1 1101 0
 2103 0022 5A69     		ldr	r2, [r3, #20]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2104              		.loc 1 1104 0
 2105 0024 606B     		ldr	r0, [r4, #52]
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2106              		.loc 1 1101 0
 2107 0026 22F04002 		bic	r2, r2, #64
 2108 002a 5A61     		str	r2, [r3, #20]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2109              		.loc 1 1104 0
 2110 002c 10B1     		cbz	r0, .L239
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2111              		.loc 1 1106 0
 2112 002e FFF7FEFF 		bl	HAL_DMA_Abort
 2113              	.LVL173:
 2114 0032 2368     		ldr	r3, [r4]
 2115              	.L239:
 2116              	.LVL174:
 2117              	.LBB67:
 2118              	.LBB68:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2119              		.loc 1 2157 0
 2120 0034 DA68     		ldr	r2, [r3, #12]
 2121 0036 22F49072 		bic	r2, r2, #288
 2122 003a DA60     		str	r2, [r3, #12]
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2123              		.loc 1 2158 0
 2124 003c 5A69     		ldr	r2, [r3, #20]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2125              		.loc 1 2161 0
 2126 003e 2021     		movs	r1, #32
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2127              		.loc 1 2158 0
 2128 0040 22F00102 		bic	r2, r2, #1
 2129 0044 5A61     		str	r2, [r3, #20]
 2130              	.LBE68:
ARM GAS  /tmp/ccS1Udqc.s 			page 89


 2131              	.LBE67:
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2132              		.loc 1 1112 0
 2133 0046 0020     		movs	r0, #0
 2134              	.LBB70:
 2135              	.LBB69:
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2136              		.loc 1 2161 0
 2137 0048 84F83A10 		strb	r1, [r4, #58]
 2138              	.LBE69:
 2139              	.LBE70:
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2140              		.loc 1 1112 0
 2141 004c 10BD     		pop	{r4, pc}
 2142              	.LVL175:
 2143              	.L253:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2144              		.loc 1 1085 0 discriminator 1
 2145 004e 0906     		lsls	r1, r1, #24
 2146              	.LVL176:
 2147 0050 DED5     		bpl	.L236
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2148              		.loc 1 1087 0
 2149 0052 5A69     		ldr	r2, [r3, #20]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2150              		.loc 1 1090 0
 2151 0054 006B     		ldr	r0, [r0, #48]
 2152              	.LVL177:
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2153              		.loc 1 1087 0
 2154 0056 22F08002 		bic	r2, r2, #128
 2155 005a 5A61     		str	r2, [r3, #20]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2156              		.loc 1 1090 0
 2157 005c 10B1     		cbz	r0, .L237
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2158              		.loc 1 1092 0
 2159 005e FFF7FEFF 		bl	HAL_DMA_Abort
 2160              	.LVL178:
 2161 0062 2368     		ldr	r3, [r4]
 2162              	.L237:
 2163              	.LVL179:
 2164              	.LBB71:
 2165              	.LBB72:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2166              		.loc 1 2143 0
 2167 0064 DA68     		ldr	r2, [r3, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2168              		.loc 1 2146 0
 2169 0066 2021     		movs	r1, #32
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2170              		.loc 1 2143 0
 2171 0068 22F0C002 		bic	r2, r2, #192
 2172 006c DA60     		str	r2, [r3, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2173              		.loc 1 2146 0
 2174 006e 84F83910 		strb	r1, [r4, #57]
ARM GAS  /tmp/ccS1Udqc.s 			page 90


 2175 0072 CDE7     		b	.L236
 2176              	.LBE72:
 2177              	.LBE71:
 2178              		.cfi_endproc
 2179              	.LFE141:
 2181              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2182              		.align	1
 2183              		.p2align 2,,3
 2184              		.global	HAL_UART_Abort
 2185              		.syntax unified
 2186              		.thumb
 2187              		.thumb_func
 2188              		.fpu fpv4-sp-d16
 2190              	HAL_UART_Abort:
 2191              	.LFB142:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2192              		.loc 1 1127 0
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 0
 2195              		@ frame_needed = 0, uses_anonymous_args = 0
 2196              	.LVL180:
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2197              		.loc 1 1129 0
 2198 0000 0368     		ldr	r3, [r0]
 2199 0002 DA68     		ldr	r2, [r3, #12]
 2200 0004 22F4F072 		bic	r2, r2, #480
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2201              		.loc 1 1127 0
 2202 0008 10B5     		push	{r4, lr}
 2203              	.LCFI31:
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 4, -8
 2206              		.cfi_offset 14, -4
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2207              		.loc 1 1129 0
 2208 000a DA60     		str	r2, [r3, #12]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2209              		.loc 1 1130 0
 2210 000c 5A69     		ldr	r2, [r3, #20]
 2211 000e 22F00102 		bic	r2, r2, #1
 2212 0012 5A61     		str	r2, [r3, #20]
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2213              		.loc 1 1133 0
 2214 0014 5A69     		ldr	r2, [r3, #20]
 2215 0016 1106     		lsls	r1, r2, #24
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2216              		.loc 1 1127 0
 2217 0018 0446     		mov	r4, r0
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2218              		.loc 1 1133 0
 2219 001a 0AD5     		bpl	.L256
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2220              		.loc 1 1135 0
 2221 001c 5A69     		ldr	r2, [r3, #20]
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2222              		.loc 1 1138 0
 2223 001e 006B     		ldr	r0, [r0, #48]
ARM GAS  /tmp/ccS1Udqc.s 			page 91


 2224              	.LVL181:
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2225              		.loc 1 1135 0
 2226 0020 22F08002 		bic	r2, r2, #128
 2227 0024 5A61     		str	r2, [r3, #20]
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2228              		.loc 1 1138 0
 2229 0026 20B1     		cbz	r0, .L256
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2230              		.loc 1 1142 0
 2231 0028 0023     		movs	r3, #0
 2232 002a 0365     		str	r3, [r0, #80]
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2233              		.loc 1 1144 0
 2234 002c FFF7FEFF 		bl	HAL_DMA_Abort
 2235              	.LVL182:
 2236 0030 2368     		ldr	r3, [r4]
 2237              	.L256:
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2238              		.loc 1 1149 0
 2239 0032 5A69     		ldr	r2, [r3, #20]
 2240 0034 5206     		lsls	r2, r2, #25
 2241 0036 09D5     		bpl	.L258
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2242              		.loc 1 1151 0
 2243 0038 5A69     		ldr	r2, [r3, #20]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2244              		.loc 1 1154 0
 2245 003a 606B     		ldr	r0, [r4, #52]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2246              		.loc 1 1151 0
 2247 003c 22F04002 		bic	r2, r2, #64
 2248 0040 5A61     		str	r2, [r3, #20]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2249              		.loc 1 1154 0
 2250 0042 18B1     		cbz	r0, .L258
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2251              		.loc 1 1158 0
 2252 0044 0023     		movs	r3, #0
 2253 0046 0365     		str	r3, [r0, #80]
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2254              		.loc 1 1160 0
 2255 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2256              	.LVL183:
 2257              	.L258:
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2258              		.loc 1 1165 0
 2259 004c 0023     		movs	r3, #0
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2260              		.loc 1 1172 0
 2261 004e 2022     		movs	r2, #32
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2262              		.loc 1 1165 0
 2263 0050 E384     		strh	r3, [r4, #38]	@ movhi
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2264              		.loc 1 1176 0
 2265 0052 1846     		mov	r0, r3
ARM GAS  /tmp/ccS1Udqc.s 			page 92


1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2266              		.loc 1 1166 0
 2267 0054 E385     		strh	r3, [r4, #46]	@ movhi
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2268              		.loc 1 1169 0
 2269 0056 E363     		str	r3, [r4, #60]
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2270              		.loc 1 1172 0
 2271 0058 84F83A20 		strb	r2, [r4, #58]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2272              		.loc 1 1173 0
 2273 005c 84F83920 		strb	r2, [r4, #57]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2274              		.loc 1 1176 0
 2275 0060 10BD     		pop	{r4, pc}
 2276              		.cfi_endproc
 2277              	.LFE142:
 2279 0062 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2280              		.align	1
 2281              		.p2align 2,,3
 2282              		.global	HAL_UART_AbortTransmit
 2283              		.syntax unified
 2284              		.thumb
 2285              		.thumb_func
 2286              		.fpu fpv4-sp-d16
 2288              	HAL_UART_AbortTransmit:
 2289              	.LFB143:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2290              		.loc 1 1191 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              	.LVL184:
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2295              		.loc 1 1193 0
 2296 0000 0368     		ldr	r3, [r0]
 2297 0002 DA68     		ldr	r2, [r3, #12]
 2298 0004 22F0C002 		bic	r2, r2, #192
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2299              		.loc 1 1191 0
 2300 0008 10B5     		push	{r4, lr}
 2301              	.LCFI32:
 2302              		.cfi_def_cfa_offset 8
 2303              		.cfi_offset 4, -8
 2304              		.cfi_offset 14, -4
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2305              		.loc 1 1193 0
 2306 000a DA60     		str	r2, [r3, #12]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2307              		.loc 1 1196 0
 2308 000c 5A69     		ldr	r2, [r3, #20]
 2309 000e 1206     		lsls	r2, r2, #24
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2310              		.loc 1 1191 0
 2311 0010 0446     		mov	r4, r0
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2312              		.loc 1 1196 0
ARM GAS  /tmp/ccS1Udqc.s 			page 93


 2313 0012 09D5     		bpl	.L272
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2314              		.loc 1 1198 0
 2315 0014 5A69     		ldr	r2, [r3, #20]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2316              		.loc 1 1201 0
 2317 0016 006B     		ldr	r0, [r0, #48]
 2318              	.LVL185:
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2319              		.loc 1 1198 0
 2320 0018 22F08002 		bic	r2, r2, #128
 2321 001c 5A61     		str	r2, [r3, #20]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2322              		.loc 1 1201 0
 2323 001e 18B1     		cbz	r0, .L272
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2324              		.loc 1 1205 0
 2325 0020 0023     		movs	r3, #0
 2326 0022 0365     		str	r3, [r0, #80]
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2327              		.loc 1 1207 0
 2328 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 2329              	.LVL186:
 2330              	.L272:
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2331              		.loc 1 1212 0
 2332 0028 0020     		movs	r0, #0
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2333              		.loc 1 1215 0
 2334 002a 2023     		movs	r3, #32
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2335              		.loc 1 1212 0
 2336 002c E084     		strh	r0, [r4, #38]	@ movhi
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2337              		.loc 1 1215 0
 2338 002e 84F83930 		strb	r3, [r4, #57]
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2339              		.loc 1 1218 0
 2340 0032 10BD     		pop	{r4, pc}
 2341              		.cfi_endproc
 2342              	.LFE143:
 2344              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2345              		.align	1
 2346              		.p2align 2,,3
 2347              		.global	HAL_UART_AbortReceive
 2348              		.syntax unified
 2349              		.thumb
 2350              		.thumb_func
 2351              		.fpu fpv4-sp-d16
 2353              	HAL_UART_AbortReceive:
 2354              	.LFB144:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2355              		.loc 1 1233 0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              	.LVL187:
ARM GAS  /tmp/ccS1Udqc.s 			page 94


1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2360              		.loc 1 1235 0
 2361 0000 0368     		ldr	r3, [r0]
 2362 0002 DA68     		ldr	r2, [r3, #12]
 2363 0004 22F49072 		bic	r2, r2, #288
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2364              		.loc 1 1233 0
 2365 0008 10B5     		push	{r4, lr}
 2366              	.LCFI33:
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 4, -8
 2369              		.cfi_offset 14, -4
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2370              		.loc 1 1235 0
 2371 000a DA60     		str	r2, [r3, #12]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2372              		.loc 1 1236 0
 2373 000c 5A69     		ldr	r2, [r3, #20]
 2374 000e 22F00102 		bic	r2, r2, #1
 2375 0012 5A61     		str	r2, [r3, #20]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2376              		.loc 1 1239 0
 2377 0014 5A69     		ldr	r2, [r3, #20]
 2378 0016 5206     		lsls	r2, r2, #25
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2379              		.loc 1 1233 0
 2380 0018 0446     		mov	r4, r0
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2381              		.loc 1 1239 0
 2382 001a 09D5     		bpl	.L280
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2383              		.loc 1 1241 0
 2384 001c 5A69     		ldr	r2, [r3, #20]
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2385              		.loc 1 1244 0
 2386 001e 406B     		ldr	r0, [r0, #52]
 2387              	.LVL188:
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2388              		.loc 1 1241 0
 2389 0020 22F04002 		bic	r2, r2, #64
 2390 0024 5A61     		str	r2, [r3, #20]
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2391              		.loc 1 1244 0
 2392 0026 18B1     		cbz	r0, .L280
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2393              		.loc 1 1248 0
 2394 0028 0023     		movs	r3, #0
 2395 002a 0365     		str	r3, [r0, #80]
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2396              		.loc 1 1250 0
 2397 002c FFF7FEFF 		bl	HAL_DMA_Abort
 2398              	.LVL189:
 2399              	.L280:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2400              		.loc 1 1255 0
 2401 0030 0020     		movs	r0, #0
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 95


 2402              		.loc 1 1258 0
 2403 0032 2023     		movs	r3, #32
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2404              		.loc 1 1255 0
 2405 0034 E085     		strh	r0, [r4, #46]	@ movhi
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2406              		.loc 1 1258 0
 2407 0036 84F83A30 		strb	r3, [r4, #58]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2408              		.loc 1 1261 0
 2409 003a 10BD     		pop	{r4, pc}
 2410              		.cfi_endproc
 2411              	.LFE144:
 2413              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2414              		.align	1
 2415              		.p2align 2,,3
 2416              		.weak	HAL_UART_TxCpltCallback
 2417              		.syntax unified
 2418              		.thumb
 2419              		.thumb_func
 2420              		.fpu fpv4-sp-d16
 2422              	HAL_UART_TxCpltCallback:
 2423              	.LFB196:
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              		@ link register save eliminated.
 2428 0000 7047     		bx	lr
 2429              		.cfi_endproc
 2430              	.LFE196:
 2432 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2433              		.align	1
 2434              		.p2align 2,,3
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2438              		.fpu fpv4-sp-d16
 2440              	UART_DMATransmitCplt:
 2441              	.LFB164:
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2442              		.loc 1 1992 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 2446              	.LVL190:
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2447              		.loc 1 1992 0
 2448 0000 08B5     		push	{r3, lr}
 2449              	.LCFI34:
 2450              		.cfi_def_cfa_offset 8
 2451              		.cfi_offset 3, -8
 2452              		.cfi_offset 14, -4
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2453              		.loc 1 1995 0
 2454 0002 0368     		ldr	r3, [r0]
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2455              		.loc 1 1993 0
ARM GAS  /tmp/ccS1Udqc.s 			page 96


 2456 0004 806B     		ldr	r0, [r0, #56]
 2457              	.LVL191:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2458              		.loc 1 1995 0
 2459 0006 1B68     		ldr	r3, [r3]
 2460 0008 13F48073 		ands	r3, r3, #256
 2461 000c 0AD1     		bne	.L288
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2462              		.loc 1 2001 0
 2463 000e 0268     		ldr	r2, [r0]
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2464              		.loc 1 1997 0
 2465 0010 C384     		strh	r3, [r0, #38]	@ movhi
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2466              		.loc 1 2001 0
 2467 0012 5369     		ldr	r3, [r2, #20]
 2468 0014 23F08003 		bic	r3, r3, #128
 2469 0018 5361     		str	r3, [r2, #20]
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2470              		.loc 1 2004 0
 2471 001a D368     		ldr	r3, [r2, #12]
 2472 001c 43F04003 		orr	r3, r3, #64
 2473 0020 D360     		str	r3, [r2, #12]
 2474 0022 08BD     		pop	{r3, pc}
 2475              	.L288:
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2476              		.loc 1 2010 0
 2477 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2478              	.LVL192:
 2479 0028 08BD     		pop	{r3, pc}
 2480              		.cfi_endproc
 2481              	.LFE164:
 2483 002a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2484              		.align	1
 2485              		.p2align 2,,3
 2486              		.weak	HAL_UART_TxHalfCpltCallback
 2487              		.syntax unified
 2488              		.thumb
 2489              		.thumb_func
 2490              		.fpu fpv4-sp-d16
 2492              	HAL_UART_TxHalfCpltCallback:
 2493              	.LFB194:
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498 0000 7047     		bx	lr
 2499              		.cfi_endproc
 2500              	.LFE194:
 2502 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2503              		.align	1
 2504              		.p2align 2,,3
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu fpv4-sp-d16
 2510              	UART_DMATxHalfCplt:
ARM GAS  /tmp/ccS1Udqc.s 			page 97


 2511              	.LFB165:
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2512              		.loc 1 2021 0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 0
 2515              		@ frame_needed = 0, uses_anonymous_args = 0
 2516              	.LVL193:
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2517              		.loc 1 2021 0
 2518 0000 08B5     		push	{r3, lr}
 2519              	.LCFI35:
 2520              		.cfi_def_cfa_offset 8
 2521              		.cfi_offset 3, -8
 2522              		.cfi_offset 14, -4
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2523              		.loc 1 2024 0
 2524 0002 806B     		ldr	r0, [r0, #56]
 2525              	.LVL194:
 2526 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2527              	.LVL195:
 2528 0008 08BD     		pop	{r3, pc}
 2529              		.cfi_endproc
 2530              	.LFE165:
 2532 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2533              		.align	1
 2534              		.p2align 2,,3
 2535              		.weak	HAL_UART_RxCpltCallback
 2536              		.syntax unified
 2537              		.thumb
 2538              		.thumb_func
 2539              		.fpu fpv4-sp-d16
 2541              	HAL_UART_RxCpltCallback:
 2542              	.LFB192:
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 0
 2545              		@ frame_needed = 0, uses_anonymous_args = 0
 2546              		@ link register save eliminated.
 2547 0000 7047     		bx	lr
 2548              		.cfi_endproc
 2549              	.LFE192:
 2551 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2552              		.align	1
 2553              		.p2align 2,,3
 2554              		.syntax unified
 2555              		.thumb
 2556              		.thumb_func
 2557              		.fpu fpv4-sp-d16
 2559              	UART_DMAReceiveCplt:
 2560              	.LFB166:
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2561              		.loc 1 2033 0
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 0
 2564              		@ frame_needed = 0, uses_anonymous_args = 0
 2565              	.LVL196:
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2566              		.loc 1 2033 0
ARM GAS  /tmp/ccS1Udqc.s 			page 98


 2567 0000 08B5     		push	{r3, lr}
 2568              	.LCFI36:
 2569              		.cfi_def_cfa_offset 8
 2570              		.cfi_offset 3, -8
 2571              		.cfi_offset 14, -4
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2572              		.loc 1 2036 0
 2573 0002 0368     		ldr	r3, [r0]
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2574              		.loc 1 2034 0
 2575 0004 806B     		ldr	r0, [r0, #56]
 2576              	.LVL197:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2577              		.loc 1 2036 0
 2578 0006 1B68     		ldr	r3, [r3]
 2579 0008 13F48073 		ands	r3, r3, #256
 2580 000c 10D1     		bne	.L296
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2581              		.loc 1 2041 0
 2582 000e 0268     		ldr	r2, [r0]
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2583              		.loc 1 2038 0
 2584 0010 C385     		strh	r3, [r0, #46]	@ movhi
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2585              		.loc 1 2041 0
 2586 0012 D368     		ldr	r3, [r2, #12]
 2587 0014 23F48073 		bic	r3, r3, #256
 2588 0018 D360     		str	r3, [r2, #12]
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2589              		.loc 1 2042 0
 2590 001a 5369     		ldr	r3, [r2, #20]
 2591 001c 23F00103 		bic	r3, r3, #1
 2592 0020 5361     		str	r3, [r2, #20]
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 2593              		.loc 1 2046 0
 2594 0022 5369     		ldr	r3, [r2, #20]
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2595              		.loc 1 2049 0
 2596 0024 2021     		movs	r1, #32
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 2597              		.loc 1 2046 0
 2598 0026 23F04003 		bic	r3, r3, #64
 2599 002a 5361     		str	r3, [r2, #20]
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2600              		.loc 1 2049 0
 2601 002c 80F83A10 		strb	r1, [r0, #58]
 2602              	.L296:
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2603              		.loc 1 2051 0
 2604 0030 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2605              	.LVL198:
 2606 0034 08BD     		pop	{r3, pc}
 2607              		.cfi_endproc
 2608              	.LFE166:
 2610 0036 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2611              		.align	1
 2612              		.p2align 2,,3
ARM GAS  /tmp/ccS1Udqc.s 			page 99


 2613              		.weak	HAL_UART_RxHalfCpltCallback
 2614              		.syntax unified
 2615              		.thumb
 2616              		.thumb_func
 2617              		.fpu fpv4-sp-d16
 2619              	HAL_UART_RxHalfCpltCallback:
 2620              	.LFB190:
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              		@ link register save eliminated.
 2625 0000 7047     		bx	lr
 2626              		.cfi_endproc
 2627              	.LFE190:
 2629 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2630              		.align	1
 2631              		.p2align 2,,3
 2632              		.syntax unified
 2633              		.thumb
 2634              		.thumb_func
 2635              		.fpu fpv4-sp-d16
 2637              	UART_DMARxHalfCplt:
 2638              	.LFB167:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2639              		.loc 1 2061 0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 0
 2642              		@ frame_needed = 0, uses_anonymous_args = 0
 2643              	.LVL199:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2644              		.loc 1 2061 0
 2645 0000 08B5     		push	{r3, lr}
 2646              	.LCFI37:
 2647              		.cfi_def_cfa_offset 8
 2648              		.cfi_offset 3, -8
 2649              		.cfi_offset 14, -4
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2650              		.loc 1 2064 0
 2651 0002 806B     		ldr	r0, [r0, #56]
 2652              	.LVL200:
 2653 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2654              	.LVL201:
 2655 0008 08BD     		pop	{r3, pc}
 2656              		.cfi_endproc
 2657              	.LFE167:
 2659 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2660              		.align	1
 2661              		.p2align 2,,3
 2662              		.weak	HAL_UART_ErrorCallback
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	HAL_UART_ErrorCallback:
 2669              	.LFB188:
 2670              		.cfi_startproc
 2671              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccS1Udqc.s 			page 100


 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673              		@ link register save eliminated.
 2674 0000 7047     		bx	lr
 2675              		.cfi_endproc
 2676              	.LFE188:
 2678 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2679              		.align	1
 2680              		.p2align 2,,3
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu fpv4-sp-d16
 2686              	UART_DMAError:
 2687              	.LFB168:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2688              		.loc 1 2073 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 2692              	.LVL202:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2693              		.loc 1 2075 0
 2694 0000 806B     		ldr	r0, [r0, #56]
 2695              	.LVL203:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2696              		.loc 1 2073 0
 2697 0002 08B5     		push	{r3, lr}
 2698              	.LCFI38:
 2699              		.cfi_def_cfa_offset 8
 2700              		.cfi_offset 3, -8
 2701              		.cfi_offset 14, -4
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2702              		.loc 1 2078 0
 2703 0004 0368     		ldr	r3, [r0]
 2704 0006 5969     		ldr	r1, [r3, #20]
 2705              	.LVL204:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2706              		.loc 1 2079 0
 2707 0008 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 2708 000c 212A     		cmp	r2, #33
 2709 000e 1BD0     		beq	.L312
 2710              	.LVL205:
 2711              	.L303:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2712              		.loc 1 2086 0
 2713 0010 5969     		ldr	r1, [r3, #20]
 2714              	.LVL206:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2715              		.loc 1 2087 0
 2716 0012 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 2717 0016 222A     		cmp	r2, #34
 2718 0018 06D0     		beq	.L313
 2719              	.LVL207:
 2720              	.L304:
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2721              		.loc 1 2093 0
 2722 001a C36B     		ldr	r3, [r0, #60]
ARM GAS  /tmp/ccS1Udqc.s 			page 101


 2723 001c 43F01003 		orr	r3, r3, #16
 2724 0020 C363     		str	r3, [r0, #60]
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2725              		.loc 1 2094 0
 2726 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2727              	.LVL208:
 2728 0026 08BD     		pop	{r3, pc}
 2729              	.LVL209:
 2730              	.L313:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2731              		.loc 1 2087 0 discriminator 1
 2732 0028 4A06     		lsls	r2, r1, #25
 2733 002a F6D5     		bpl	.L304
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2734              		.loc 1 2089 0
 2735 002c 0022     		movs	r2, #0
 2736 002e C285     		strh	r2, [r0, #46]	@ movhi
 2737              	.LVL210:
 2738              	.LBB73:
 2739              	.LBB74:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2740              		.loc 1 2157 0
 2741 0030 DA68     		ldr	r2, [r3, #12]
 2742 0032 22F49072 		bic	r2, r2, #288
 2743 0036 DA60     		str	r2, [r3, #12]
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2744              		.loc 1 2158 0
 2745 0038 5A69     		ldr	r2, [r3, #20]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2746              		.loc 1 2161 0
 2747 003a 2021     		movs	r1, #32
 2748              	.LVL211:
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2749              		.loc 1 2158 0
 2750 003c 22F00102 		bic	r2, r2, #1
 2751 0040 5A61     		str	r2, [r3, #20]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2752              		.loc 1 2161 0
 2753 0042 80F83A10 		strb	r1, [r0, #58]
 2754 0046 E8E7     		b	.L304
 2755              	.LVL212:
 2756              	.L312:
 2757              	.LBE74:
 2758              	.LBE73:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2759              		.loc 1 2079 0 discriminator 1
 2760 0048 0906     		lsls	r1, r1, #24
 2761              	.LVL213:
 2762 004a E1D5     		bpl	.L303
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2763              		.loc 1 2081 0
 2764 004c 0022     		movs	r2, #0
 2765 004e C284     		strh	r2, [r0, #38]	@ movhi
 2766              	.LVL214:
 2767              	.LBB75:
 2768              	.LBB76:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 102


 2769              		.loc 1 2143 0
 2770 0050 DA68     		ldr	r2, [r3, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2771              		.loc 1 2146 0
 2772 0052 2021     		movs	r1, #32
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2773              		.loc 1 2143 0
 2774 0054 22F0C002 		bic	r2, r2, #192
 2775 0058 DA60     		str	r2, [r3, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2776              		.loc 1 2146 0
 2777 005a 80F83910 		strb	r1, [r0, #57]
 2778 005e D7E7     		b	.L303
 2779              	.LBE76:
 2780              	.LBE75:
 2781              		.cfi_endproc
 2782              	.LFE168:
 2784              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2785              		.align	1
 2786              		.p2align 2,,3
 2787              		.global	HAL_UART_IRQHandler
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2791              		.fpu fpv4-sp-d16
 2793              	HAL_UART_IRQHandler:
 2794              	.LFB148:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2795              		.loc 1 1523 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 0
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
 2799              	.LVL215:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2800              		.loc 1 1524 0
 2801 0000 0368     		ldr	r3, [r0]
 2802 0002 1A68     		ldr	r2, [r3]
 2803              	.LVL216:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2804              		.loc 1 1523 0
 2805 0004 70B5     		push	{r4, r5, r6, lr}
 2806              	.LCFI39:
 2807              		.cfi_def_cfa_offset 16
 2808              		.cfi_offset 4, -16
 2809              		.cfi_offset 5, -12
 2810              		.cfi_offset 6, -8
 2811              		.cfi_offset 14, -4
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2812              		.loc 1 1532 0
 2813 0006 1507     		lsls	r5, r2, #28
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2814              		.loc 1 1523 0
 2815 0008 0446     		mov	r4, r0
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2816              		.loc 1 1525 0
 2817 000a D868     		ldr	r0, [r3, #12]
 2818              	.LVL217:
ARM GAS  /tmp/ccS1Udqc.s 			page 103


1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2819              		.loc 1 1526 0
 2820 000c 5969     		ldr	r1, [r3, #20]
 2821              	.LVL218:
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2822              		.loc 1 1532 0
 2823 000e 4FD0     		beq	.L397
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2824              		.loc 1 1543 0 discriminator 1
 2825 0010 11F00101 		ands	r1, r1, #1
 2826              	.LVL219:
 2827 0014 78D0     		beq	.L398
 2828              	.L324:
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2829              		.loc 1 1546 0
 2830 0016 D507     		lsls	r5, r2, #31
 2831 0018 05D5     		bpl	.L325
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2832              		.loc 1 1546 0 is_stmt 0 discriminator 1
 2833 001a C605     		lsls	r6, r0, #23
 2834 001c 03D5     		bpl	.L325
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2835              		.loc 1 1548 0 is_stmt 1
 2836 001e E56B     		ldr	r5, [r4, #60]
 2837 0020 45F00105 		orr	r5, r5, #1
 2838 0024 E563     		str	r5, [r4, #60]
 2839              	.L325:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2840              		.loc 1 1552 0
 2841 0026 5507     		lsls	r5, r2, #29
 2842 0028 40F1A080 		bpl	.L326
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2843              		.loc 1 1552 0 is_stmt 0 discriminator 1
 2844 002c 0029     		cmp	r1, #0
 2845 002e 00F0AB80 		beq	.L327
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2846              		.loc 1 1554 0 is_stmt 1
 2847 0032 E16B     		ldr	r1, [r4, #60]
 2848 0034 41F00201 		orr	r1, r1, #2
 2849 0038 E163     		str	r1, [r4, #60]
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2850              		.loc 1 1558 0
 2851 003a 9107     		lsls	r1, r2, #30
 2852 003c 40F19C80 		bpl	.L328
 2853              	.L332:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2854              		.loc 1 1560 0
 2855 0040 E16B     		ldr	r1, [r4, #60]
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2856              		.loc 1 1564 0
 2857 0042 1607     		lsls	r6, r2, #28
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2858              		.loc 1 1560 0
 2859 0044 41F00401 		orr	r1, r1, #4
 2860 0048 E163     		str	r1, [r4, #60]
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2861              		.loc 1 1564 0
ARM GAS  /tmp/ccS1Udqc.s 			page 104


 2862 004a 00F19880 		bmi	.L329
 2863              	.L333:
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2864              		.loc 1 1570 0
 2865 004e E16B     		ldr	r1, [r4, #60]
 2866 0050 0029     		cmp	r1, #0
 2867 0052 2CD0     		beq	.L314
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2868              		.loc 1 1573 0
 2869 0054 9506     		lsls	r5, r2, #26
 2870 0056 06D5     		bpl	.L335
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2871              		.loc 1 1573 0 is_stmt 0 discriminator 1
 2872 0058 8106     		lsls	r1, r0, #26
 2873 005a 04D5     		bpl	.L335
 2874              	.LVL220:
 2875              	.LBB91:
 2876              	.LBB92:
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2877              		.loc 1 2374 0 is_stmt 1
 2878 005c 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 2879              	.LVL221:
 2880 0060 222A     		cmp	r2, #34
 2881 0062 00F0A480 		beq	.L399
 2882              	.LVL222:
 2883              	.L335:
 2884              	.LBE92:
 2885              	.LBE91:
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2886              		.loc 1 1580 0
 2887 0066 5D69     		ldr	r5, [r3, #20]
 2888              	.LVL223:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2889              		.loc 1 1581 0
 2890 0068 E16B     		ldr	r1, [r4, #60]
 2891 006a 0A07     		lsls	r2, r1, #28
 2892 006c 03D4     		bmi	.L341
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2893              		.loc 1 1581 0 is_stmt 0 discriminator 1
 2894 006e 15F04005 		ands	r5, r5, #64
 2895              	.LVL224:
 2896 0072 00F0C080 		beq	.L342
 2897              	.LVL225:
 2898              	.L341:
 2899              	.LBB105:
 2900              	.LBB106:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2901              		.loc 1 2157 0 is_stmt 1
 2902 0076 DA68     		ldr	r2, [r3, #12]
 2903 0078 22F49072 		bic	r2, r2, #288
 2904 007c DA60     		str	r2, [r3, #12]
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2905              		.loc 1 2158 0
 2906 007e 5A69     		ldr	r2, [r3, #20]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2907              		.loc 1 2161 0
 2908 0080 2021     		movs	r1, #32
ARM GAS  /tmp/ccS1Udqc.s 			page 105


2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2909              		.loc 1 2158 0
 2910 0082 22F00102 		bic	r2, r2, #1
 2911 0086 5A61     		str	r2, [r3, #20]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2912              		.loc 1 2161 0
 2913 0088 84F83A10 		strb	r1, [r4, #58]
 2914              	.LVL226:
 2915              	.LBE106:
 2916              	.LBE105:
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2917              		.loc 1 1589 0
 2918 008c 5A69     		ldr	r2, [r3, #20]
 2919 008e 5606     		lsls	r6, r2, #25
 2920 0090 40F18480 		bpl	.L343
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 2921              		.loc 1 1591 0
 2922 0094 5A69     		ldr	r2, [r3, #20]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2923              		.loc 1 1594 0
 2924 0096 606B     		ldr	r0, [r4, #52]
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 2925              		.loc 1 1591 0
 2926 0098 22F04002 		bic	r2, r2, #64
 2927 009c 5A61     		str	r2, [r3, #20]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2928              		.loc 1 1594 0
 2929 009e 0028     		cmp	r0, #0
 2930 00a0 7CD0     		beq	.L343
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2931              		.loc 1 1598 0
 2932 00a2 774B     		ldr	r3, .L405
 2933 00a4 0365     		str	r3, [r0, #80]
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 2934              		.loc 1 1599 0
 2935 00a6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2936              	.LVL227:
 2937 00aa 0028     		cmp	r0, #0
 2938 00ac 7AD1     		bne	.L400
 2939              	.L314:
 2940 00ae 70BD     		pop	{r4, r5, r6, pc}
 2941              	.LVL228:
 2942              	.L397:
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2943              		.loc 1 1535 0
 2944 00b0 9106     		lsls	r1, r2, #26
 2945              	.LVL229:
 2946 00b2 2CD5     		bpl	.L316
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2947              		.loc 1 1535 0 is_stmt 0 discriminator 1
 2948 00b4 8606     		lsls	r6, r0, #26
 2949 00b6 2AD5     		bpl	.L316
 2950              	.LVL230:
 2951              	.LBB107:
 2952              	.LBB108:
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2953              		.loc 1 2374 0 is_stmt 1
ARM GAS  /tmp/ccS1Udqc.s 			page 106


 2954 00b8 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 2955              	.LVL231:
 2956 00bc 222A     		cmp	r2, #34
 2957 00be F6D1     		bne	.L314
 2958              	.LVL232:
 2959              	.LBB109:
 2960              	.LBB110:
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2961              		.loc 1 2376 0
 2962 00c0 A268     		ldr	r2, [r4, #8]
 2963 00c2 B2F5805F 		cmp	r2, #4096
 2964 00c6 00F0A380 		beq	.L401
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2965              		.loc 1 2392 0
 2966 00ca 2269     		ldr	r2, [r4, #16]
 2967 00cc 002A     		cmp	r2, #0
 2968 00ce 40F09780 		bne	.L322
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2969              		.loc 1 2394 0
 2970 00d2 A26A     		ldr	r2, [r4, #40]
 2971 00d4 5B68     		ldr	r3, [r3, #4]
 2972 00d6 511C     		adds	r1, r2, #1
 2973 00d8 A162     		str	r1, [r4, #40]
 2974 00da 1370     		strb	r3, [r2]
 2975              	.L321:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2976              		.loc 1 2402 0
 2977 00dc E38D     		ldrh	r3, [r4, #46]
 2978 00de 013B     		subs	r3, r3, #1
 2979 00e0 9BB2     		uxth	r3, r3
 2980 00e2 E385     		strh	r3, [r4, #46]	@ movhi
 2981 00e4 002B     		cmp	r3, #0
 2982 00e6 E2D1     		bne	.L314
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2983              		.loc 1 2405 0
 2984 00e8 2368     		ldr	r3, [r4]
 2985 00ea DA68     		ldr	r2, [r3, #12]
 2986 00ec 22F49072 		bic	r2, r2, #288
 2987 00f0 DA60     		str	r2, [r3, #12]
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2988              		.loc 1 2408 0
 2989 00f2 5A69     		ldr	r2, [r3, #20]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 2990              		.loc 1 2411 0
 2991 00f4 2021     		movs	r1, #32
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2992              		.loc 1 2408 0
 2993 00f6 22F00102 		bic	r2, r2, #1
 2994 00fa 5A61     		str	r2, [r3, #20]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2995              		.loc 1 2413 0
 2996 00fc 2046     		mov	r0, r4
 2997              	.LVL233:
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 2998              		.loc 1 2411 0
 2999 00fe 84F83A10 		strb	r1, [r4, #58]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 107


 3000              		.loc 1 2413 0
 3001 0102 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3002              	.LVL234:
 3003 0106 70BD     		pop	{r4, r5, r6, pc}
 3004              	.LVL235:
 3005              	.L398:
 3006              	.LBE110:
 3007              	.LBE109:
 3008              	.LBE108:
 3009              	.LBE107:
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3010              		.loc 1 1543 0 discriminator 2
 3011 0108 10F4907F 		tst	r0, #288
 3012 010c 83D1     		bne	.L324
 3013              	.L316:
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3014              		.loc 1 1629 0
 3015 010e 1506     		lsls	r5, r2, #24
 3016 0110 0ED4     		bmi	.L402
 3017              	.L344:
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3018              		.loc 1 1636 0
 3019 0112 5206     		lsls	r2, r2, #25
 3020              	.LVL236:
 3021 0114 CBD5     		bpl	.L314
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3022              		.loc 1 1636 0 is_stmt 0 discriminator 1
 3023 0116 4606     		lsls	r6, r0, #25
 3024 0118 C9D5     		bpl	.L314
 3025              	.LVL237:
 3026              	.LBB117:
 3027              	.LBB118:
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3028              		.loc 1 2353 0 is_stmt 1
 3029 011a DA68     		ldr	r2, [r3, #12]
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 3030              		.loc 1 2356 0
 3031 011c 2021     		movs	r1, #32
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3032              		.loc 1 2353 0
 3033 011e 22F04002 		bic	r2, r2, #64
 3034 0122 DA60     		str	r2, [r3, #12]
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3035              		.loc 1 2358 0
 3036 0124 2046     		mov	r0, r4
 3037              	.LVL238:
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 3038              		.loc 1 2356 0
 3039 0126 84F83910 		strb	r1, [r4, #57]
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3040              		.loc 1 2358 0
 3041 012a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3042              	.LVL239:
 3043 012e 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL240:
 3045              	.L402:
 3046              	.LBE118:
ARM GAS  /tmp/ccS1Udqc.s 			page 108


 3047              	.LBE117:
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3048              		.loc 1 1629 0 discriminator 1
 3049 0130 0106     		lsls	r1, r0, #24
 3050 0132 EED5     		bpl	.L344
 3051              	.LVL241:
 3052              	.LBB119:
 3053              	.LBB120:
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3054              		.loc 1 2308 0
 3055 0134 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 3056              	.LVL242:
 3057 0138 212A     		cmp	r2, #33
 3058 013a B8D1     		bne	.L314
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3059              		.loc 1 2310 0
 3060 013c A268     		ldr	r2, [r4, #8]
 3061 013e B2F5805F 		cmp	r2, #4096
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FFU);
 3062              		.loc 1 2312 0
 3063 0142 226A     		ldr	r2, [r4, #32]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3064              		.loc 1 2310 0
 3065 0144 6FD0     		beq	.L403
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3066              		.loc 1 2325 0
 3067 0146 511C     		adds	r1, r2, #1
 3068 0148 2162     		str	r1, [r4, #32]
 3069 014a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3070 014c 5A60     		str	r2, [r3, #4]
 3071              	.LVL243:
 3072              	.L347:
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3073              		.loc 1 2328 0
 3074 014e E28C     		ldrh	r2, [r4, #38]
 3075 0150 013A     		subs	r2, r2, #1
 3076 0152 92B2     		uxth	r2, r2
 3077 0154 E284     		strh	r2, [r4, #38]	@ movhi
 3078 0156 002A     		cmp	r2, #0
 3079 0158 A9D1     		bne	.L314
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3080              		.loc 1 2331 0
 3081 015a DA68     		ldr	r2, [r3, #12]
 3082 015c 22F08002 		bic	r2, r2, #128
 3083 0160 DA60     		str	r2, [r3, #12]
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3084              		.loc 1 2334 0
 3085 0162 DA68     		ldr	r2, [r3, #12]
 3086 0164 42F04002 		orr	r2, r2, #64
 3087 0168 DA60     		str	r2, [r3, #12]
 3088 016a 70BD     		pop	{r4, r5, r6, pc}
 3089              	.LVL244:
 3090              	.L326:
 3091              	.LBE120:
 3092              	.LBE119:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3093              		.loc 1 1558 0
ARM GAS  /tmp/ccS1Udqc.s 			page 109


 3094 016c 9507     		lsls	r5, r2, #30
 3095 016e 0ED5     		bpl	.L331
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3096              		.loc 1 1558 0 is_stmt 0 discriminator 1
 3097 0170 0029     		cmp	r1, #0
 3098 0172 7FF465AF 		bne	.L332
 3099 0176 6AE7     		b	.L333
 3100              	.L328:
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3101              		.loc 1 1564 0 is_stmt 1
 3102 0178 1107     		lsls	r1, r2, #28
 3103 017a 7FF568AF 		bpl	.L333
 3104              	.L329:
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3105              		.loc 1 1566 0
 3106 017e E16B     		ldr	r1, [r4, #60]
 3107 0180 41F00801 		orr	r1, r1, #8
 3108 0184 E163     		str	r1, [r4, #60]
 3109 0186 62E7     		b	.L333
 3110              	.L327:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3111              		.loc 1 1558 0
 3112 0188 9507     		lsls	r5, r2, #30
 3113 018a 3FF560AF 		bmi	.L333
 3114              	.L331:
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3115              		.loc 1 1564 0
 3116 018e 1607     		lsls	r6, r2, #28
 3117 0190 7FF55DAF 		bpl	.L333
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3118              		.loc 1 1564 0 is_stmt 0 discriminator 1
 3119 0194 0029     		cmp	r1, #0
 3120 0196 3FF45AAF 		beq	.L333
 3121 019a F0E7     		b	.L329
 3122              	.LVL245:
 3123              	.L343:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 3124              		.loc 1 1608 0 is_stmt 1
 3125 019c 2046     		mov	r0, r4
 3126 019e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3127              	.LVL246:
 3128 01a2 70BD     		pop	{r4, r5, r6, pc}
 3129              	.LVL247:
 3130              	.L400:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3131              		.loc 1 1602 0
 3132 01a4 606B     		ldr	r0, [r4, #52]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3133              		.loc 1 1641 0
 3134 01a6 BDE87040 		pop	{r4, r5, r6, lr}
 3135              	.LCFI40:
 3136              		.cfi_remember_state
 3137              		.cfi_restore 14
 3138              		.cfi_restore 6
 3139              		.cfi_restore 5
 3140              		.cfi_restore 4
 3141              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccS1Udqc.s 			page 110


 3142              	.LVL248:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3143              		.loc 1 1602 0
 3144 01aa 036D     		ldr	r3, [r0, #80]
 3145 01ac 1847     		bx	r3	@ indirect register sibling call
 3146              	.LVL249:
 3147              	.L399:
 3148              	.LCFI41:
 3149              		.cfi_restore_state
 3150              	.LBB123:
 3151              	.LBB101:
 3152              	.LBB93:
 3153              	.LBB94:
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3154              		.loc 1 2376 0
 3155 01ae A268     		ldr	r2, [r4, #8]
 3156 01b0 B2F5805F 		cmp	r2, #4096
 3157 01b4 50D0     		beq	.L404
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3158              		.loc 1 2392 0
 3159 01b6 2269     		ldr	r2, [r4, #16]
 3160 01b8 002A     		cmp	r2, #0
 3161 01ba 3DD1     		bne	.L340
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3162              		.loc 1 2394 0
 3163 01bc A26A     		ldr	r2, [r4, #40]
 3164 01be 5B68     		ldr	r3, [r3, #4]
 3165 01c0 511C     		adds	r1, r2, #1
 3166 01c2 A162     		str	r1, [r4, #40]
 3167 01c4 1370     		strb	r3, [r2]
 3168 01c6 2368     		ldr	r3, [r4]
 3169              	.L339:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3170              		.loc 1 2402 0
 3171 01c8 E28D     		ldrh	r2, [r4, #46]
 3172 01ca 013A     		subs	r2, r2, #1
 3173 01cc 92B2     		uxth	r2, r2
 3174 01ce E285     		strh	r2, [r4, #46]	@ movhi
 3175 01d0 002A     		cmp	r2, #0
 3176 01d2 7FF448AF 		bne	.L335
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3177              		.loc 1 2405 0
 3178 01d6 DA68     		ldr	r2, [r3, #12]
 3179 01d8 22F49072 		bic	r2, r2, #288
 3180 01dc DA60     		str	r2, [r3, #12]
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3181              		.loc 1 2408 0
 3182 01de 5A69     		ldr	r2, [r3, #20]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 3183              		.loc 1 2411 0
 3184 01e0 2021     		movs	r1, #32
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3185              		.loc 1 2408 0
 3186 01e2 22F00102 		bic	r2, r2, #1
 3187 01e6 5A61     		str	r2, [r3, #20]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3188              		.loc 1 2413 0
ARM GAS  /tmp/ccS1Udqc.s 			page 111


 3189 01e8 2046     		mov	r0, r4
 3190              	.LVL250:
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 3191              		.loc 1 2411 0
 3192 01ea 84F83A10 		strb	r1, [r4, #58]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3193              		.loc 1 2413 0
 3194 01ee FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3195              	.LVL251:
 3196 01f2 2368     		ldr	r3, [r4]
 3197 01f4 37E7     		b	.L335
 3198              	.LVL252:
 3199              	.L342:
 3200              	.LBE94:
 3201              	.LBE93:
 3202              	.LBE101:
 3203              	.LBE123:
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3204              		.loc 1 1621 0
 3205 01f6 2046     		mov	r0, r4
 3206 01f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3207              	.LVL253:
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3208              		.loc 1 1622 0
 3209 01fc E563     		str	r5, [r4, #60]
 3210 01fe 70BD     		pop	{r4, r5, r6, pc}
 3211              	.LVL254:
 3212              	.L322:
 3213              	.LBB124:
 3214              	.LBB115:
 3215              	.LBB113:
 3216              	.LBB111:
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3217              		.loc 1 2398 0
 3218 0200 5B68     		ldr	r3, [r3, #4]
 3219 0202 A26A     		ldr	r2, [r4, #40]
 3220 0204 03F07F03 		and	r3, r3, #127
 3221 0208 511C     		adds	r1, r2, #1
 3222 020a A162     		str	r1, [r4, #40]
 3223 020c 1370     		strb	r3, [r2]
 3224 020e 65E7     		b	.L321
 3225              	.L401:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3226              		.loc 1 2379 0
 3227 0210 2169     		ldr	r1, [r4, #16]
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3228              		.loc 1 2378 0
 3229 0212 A26A     		ldr	r2, [r4, #40]
 3230              	.LVL255:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3231              		.loc 1 2379 0
 3232 0214 C9B9     		cbnz	r1, .L320
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3233              		.loc 1 2381 0
 3234 0216 5968     		ldr	r1, [r3, #4]
 3235 0218 1346     		mov	r3, r2
 3236 021a C1F30802 		ubfx	r2, r1, #0, #9
ARM GAS  /tmp/ccS1Udqc.s 			page 112


 3237              	.LVL256:
 3238 021e 23F8022B 		strh	r2, [r3], #2	@ movhi
 3239              	.LVL257:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3240              		.loc 1 2382 0
 3241 0222 A362     		str	r3, [r4, #40]
 3242              	.LVL258:
 3243 0224 5AE7     		b	.L321
 3244              	.LVL259:
 3245              	.L403:
 3246              	.LBE111:
 3247              	.LBE113:
 3248              	.LBE115:
 3249              	.LBE124:
 3250              	.LBB125:
 3251              	.LBB121:
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3252              		.loc 1 2313 0
 3253 0226 1188     		ldrh	r1, [r2]
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3254              		.loc 1 2314 0
 3255 0228 2069     		ldr	r0, [r4, #16]
 3256              	.LVL260:
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3257              		.loc 1 2313 0
 3258 022a C1F30801 		ubfx	r1, r1, #0, #9
 3259 022e 5960     		str	r1, [r3, #4]
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3260              		.loc 1 2314 0
 3261 0230 E0B9     		cbnz	r0, .L346
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3262              		.loc 1 2316 0
 3263 0232 0232     		adds	r2, r2, #2
 3264              	.LVL261:
 3265 0234 2262     		str	r2, [r4, #32]
 3266              	.LVL262:
 3267 0236 8AE7     		b	.L347
 3268              	.LVL263:
 3269              	.L340:
 3270              	.LBE121:
 3271              	.LBE125:
 3272              	.LBB126:
 3273              	.LBB102:
 3274              	.LBB98:
 3275              	.LBB95:
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3276              		.loc 1 2398 0
 3277 0238 5B68     		ldr	r3, [r3, #4]
 3278 023a A26A     		ldr	r2, [r4, #40]
 3279 023c 03F07F03 		and	r3, r3, #127
 3280 0240 511C     		adds	r1, r2, #1
 3281 0242 A162     		str	r1, [r4, #40]
 3282 0244 1370     		strb	r3, [r2]
 3283 0246 2368     		ldr	r3, [r4]
 3284 0248 BEE7     		b	.L339
 3285              	.LVL264:
 3286              	.L320:
ARM GAS  /tmp/ccS1Udqc.s 			page 113


 3287              	.LBE95:
 3288              	.LBE98:
 3289              	.LBE102:
 3290              	.LBE126:
 3291              	.LBB127:
 3292              	.LBB116:
 3293              	.LBB114:
 3294              	.LBB112:
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 3295              		.loc 1 2386 0
 3296 024a 5968     		ldr	r1, [r3, #4]
 3297 024c 1346     		mov	r3, r2
 3298 024e CAB2     		uxtb	r2, r1
 3299              	.LVL265:
 3300 0250 23F8012B 		strh	r2, [r3], #1	@ movhi
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3301              		.loc 1 2387 0
 3302 0254 A362     		str	r3, [r4, #40]
 3303              	.LVL266:
 3304 0256 41E7     		b	.L321
 3305              	.LVL267:
 3306              	.L404:
 3307              	.LBE112:
 3308              	.LBE114:
 3309              	.LBE116:
 3310              	.LBE127:
 3311              	.LBB128:
 3312              	.LBB103:
 3313              	.LBB99:
 3314              	.LBB96:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3315              		.loc 1 2379 0
 3316 0258 2169     		ldr	r1, [r4, #16]
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3317              		.loc 1 2378 0
 3318 025a A26A     		ldr	r2, [r4, #40]
 3319              	.LVL268:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3320              		.loc 1 2379 0
 3321 025c 49B9     		cbnz	r1, .L338
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3322              		.loc 1 2381 0
 3323 025e 5968     		ldr	r1, [r3, #4]
 3324 0260 C1F30801 		ubfx	r1, r1, #0, #9
 3325 0264 22F8021B 		strh	r1, [r2], #2	@ movhi
 3326              	.LVL269:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3327              		.loc 1 2382 0
 3328 0268 A262     		str	r2, [r4, #40]
 3329              	.LVL270:
 3330 026a ADE7     		b	.L339
 3331              	.LVL271:
 3332              	.L346:
 3333              	.LBE96:
 3334              	.LBE99:
 3335              	.LBE103:
 3336              	.LBE128:
ARM GAS  /tmp/ccS1Udqc.s 			page 114


 3337              	.LBB129:
 3338              	.LBB122:
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3339              		.loc 1 2320 0
 3340 026c 0132     		adds	r2, r2, #1
 3341              	.LVL272:
 3342 026e 2262     		str	r2, [r4, #32]
 3343              	.LVL273:
 3344 0270 6DE7     		b	.L347
 3345              	.LVL274:
 3346              	.L338:
 3347              	.LBE122:
 3348              	.LBE129:
 3349              	.LBB130:
 3350              	.LBB104:
 3351              	.LBB100:
 3352              	.LBB97:
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 3353              		.loc 1 2386 0
 3354 0272 5968     		ldr	r1, [r3, #4]
 3355 0274 C9B2     		uxtb	r1, r1
 3356 0276 22F8011B 		strh	r1, [r2], #1	@ movhi
 3357              	.LVL275:
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3358              		.loc 1 2387 0
 3359 027a A262     		str	r2, [r4, #40]
 3360              	.LVL276:
 3361 027c A4E7     		b	.L339
 3362              	.L406:
 3363 027e 00BF     		.align	2
 3364              	.L405:
 3365 0280 00000000 		.word	UART_DMAAbortOnError
 3366              	.LBE97:
 3367              	.LBE100:
 3368              	.LBE104:
 3369              	.LBE130:
 3370              		.cfi_endproc
 3371              	.LFE148:
 3373              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3374              		.align	1
 3375              		.p2align 2,,3
 3376              		.syntax unified
 3377              		.thumb
 3378              		.thumb_func
 3379              		.fpu fpv4-sp-d16
 3381              	UART_DMAAbortOnError:
 3382              	.LFB172:
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3383              		.loc 1 2171 0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 0
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
 3387              	.LVL277:
 3388 0000 08B5     		push	{r3, lr}
 3389              	.LCFI42:
 3390              		.cfi_def_cfa_offset 8
 3391              		.cfi_offset 3, -8
ARM GAS  /tmp/ccS1Udqc.s 			page 115


 3392              		.cfi_offset 14, -4
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
 3393              		.loc 1 2172 0
 3394 0002 836B     		ldr	r3, [r0, #56]
 3395              	.LVL278:
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
 3396              		.loc 1 2173 0
 3397 0004 0022     		movs	r2, #0
 3398 0006 DA85     		strh	r2, [r3, #46]	@ movhi
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3399              		.loc 1 2176 0
 3400 0008 1846     		mov	r0, r3
 3401              	.LVL279:
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3402              		.loc 1 2174 0
 3403 000a DA84     		strh	r2, [r3, #38]	@ movhi
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3404              		.loc 1 2176 0
 3405 000c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3406              	.LVL280:
 3407 0010 08BD     		pop	{r3, pc}
 3408              		.cfi_endproc
 3409              	.LFE172:
 3411 0012 00BF     		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3412              		.align	1
 3413              		.p2align 2,,3
 3414              		.weak	HAL_UART_AbortCpltCallback
 3415              		.syntax unified
 3416              		.thumb
 3417              		.thumb_func
 3418              		.fpu fpv4-sp-d16
 3420              	HAL_UART_AbortCpltCallback:
 3421              	.LFB186:
 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 0
 3424              		@ frame_needed = 0, uses_anonymous_args = 0
 3425              		@ link register save eliminated.
 3426 0000 7047     		bx	lr
 3427              		.cfi_endproc
 3428              	.LFE186:
 3430 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3431              		.align	1
 3432              		.p2align 2,,3
 3433              		.global	HAL_UART_Abort_IT
 3434              		.syntax unified
 3435              		.thumb
 3436              		.thumb_func
 3437              		.fpu fpv4-sp-d16
 3439              	HAL_UART_Abort_IT:
 3440              	.LFB145:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3441              		.loc 1 1278 0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
 3445              	.LVL281:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccS1Udqc.s 			page 116


 3446              		.loc 1 1282 0
 3447 0000 0368     		ldr	r3, [r0]
 3448 0002 DA68     		ldr	r2, [r3, #12]
 3449 0004 22F4F072 		bic	r2, r2, #480
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3450              		.loc 1 1278 0
 3451 0008 10B5     		push	{r4, lr}
 3452              	.LCFI43:
 3453              		.cfi_def_cfa_offset 8
 3454              		.cfi_offset 4, -8
 3455              		.cfi_offset 14, -4
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3456              		.loc 1 1278 0
 3457 000a 0446     		mov	r4, r0
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3458              		.loc 1 1288 0
 3459 000c 006B     		ldr	r0, [r0, #48]
 3460              	.LVL282:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3461              		.loc 1 1282 0
 3462 000e DA60     		str	r2, [r3, #12]
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3463              		.loc 1 1283 0
 3464 0010 5A69     		ldr	r2, [r3, #20]
 3465 0012 22F00102 		bic	r2, r2, #1
 3466 0016 5A61     		str	r2, [r3, #20]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3467              		.loc 1 1288 0
 3468 0018 28B1     		cbz	r0, .L411
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3469              		.loc 1 1292 0
 3470 001a 5A69     		ldr	r2, [r3, #20]
 3471 001c 12F08002 		ands	r2, r2, #128
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3472              		.loc 1 1294 0
 3473 0020 18BF     		it	ne
 3474 0022 214A     		ldrne	r2, .L440
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3475              		.loc 1 1298 0
 3476 0024 0265     		str	r2, [r0, #80]
 3477              	.L411:
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3478              		.loc 1 1302 0
 3479 0026 616B     		ldr	r1, [r4, #52]
 3480 0028 29B1     		cbz	r1, .L413
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3481              		.loc 1 1306 0
 3482 002a 5A69     		ldr	r2, [r3, #20]
 3483 002c 12F04002 		ands	r2, r2, #64
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3484              		.loc 1 1308 0
 3485 0030 18BF     		it	ne
 3486 0032 1E4A     		ldrne	r2, .L440+4
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3487              		.loc 1 1312 0
 3488 0034 0A65     		str	r2, [r1, #80]
 3489              	.L413:
ARM GAS  /tmp/ccS1Udqc.s 			page 117


1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3490              		.loc 1 1317 0
 3491 0036 5A69     		ldr	r2, [r3, #20]
 3492 0038 1206     		lsls	r2, r2, #24
 3493 003a 0BD5     		bpl	.L415
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3494              		.loc 1 1320 0
 3495 003c 5A69     		ldr	r2, [r3, #20]
 3496 003e 22F08002 		bic	r2, r2, #128
 3497 0042 5A61     		str	r2, [r3, #20]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3498              		.loc 1 1323 0
 3499 0044 30B1     		cbz	r0, .L415
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3500              		.loc 1 1329 0
 3501 0046 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3502              	.LVL283:
 3503 004a 00B3     		cbz	r0, .L416
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3504              		.loc 1 1331 0
 3505 004c 226B     		ldr	r2, [r4, #48]
 3506 004e 2368     		ldr	r3, [r4]
 3507 0050 0021     		movs	r1, #0
 3508 0052 1165     		str	r1, [r2, #80]
 3509              	.L415:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3510              		.loc 1 1341 0
 3511 0054 5A69     		ldr	r2, [r3, #20]
 3512 0056 5106     		lsls	r1, r2, #25
 3513 0058 0BD5     		bpl	.L420
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3514              		.loc 1 1343 0
 3515 005a 5A69     		ldr	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3516              		.loc 1 1346 0
 3517 005c 606B     		ldr	r0, [r4, #52]
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3518              		.loc 1 1343 0
 3519 005e 22F04002 		bic	r2, r2, #64
 3520 0062 5A61     		str	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3521              		.loc 1 1346 0
 3522 0064 28B1     		cbz	r0, .L420
 3523              	.LVL284:
 3524              	.L423:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3525              		.loc 1 1352 0
 3526 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3527              	.LVL285:
 3528 006a 70B1     		cbz	r0, .L437
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3529              		.loc 1 1354 0
 3530 006c 636B     		ldr	r3, [r4, #52]
 3531 006e 0022     		movs	r2, #0
 3532 0070 1A65     		str	r2, [r3, #80]
 3533              	.LVL286:
 3534              	.L420:
ARM GAS  /tmp/ccS1Udqc.s 			page 118


1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3535              		.loc 1 1368 0
 3536 0072 0023     		movs	r3, #0
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3537              		.loc 1 1375 0
 3538 0074 2022     		movs	r2, #32
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3539              		.loc 1 1368 0
 3540 0076 E384     		strh	r3, [r4, #38]	@ movhi
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3541              		.loc 1 1379 0
 3542 0078 2046     		mov	r0, r4
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3543              		.loc 1 1369 0
 3544 007a E385     		strh	r3, [r4, #46]	@ movhi
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3545              		.loc 1 1372 0
 3546 007c E363     		str	r3, [r4, #60]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3547              		.loc 1 1375 0
 3548 007e 84F83920 		strb	r2, [r4, #57]
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3549              		.loc 1 1376 0
 3550 0082 84F83A20 		strb	r2, [r4, #58]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3551              		.loc 1 1379 0
 3552 0086 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3553              	.LVL287:
 3554              	.L437:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3555              		.loc 1 1383 0
 3556 008a 0020     		movs	r0, #0
 3557 008c 10BD     		pop	{r4, pc}
 3558              	.LVL288:
 3559              	.L416:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3560              		.loc 1 1341 0
 3561 008e 2368     		ldr	r3, [r4]
 3562 0090 5A69     		ldr	r2, [r3, #20]
 3563 0092 5206     		lsls	r2, r2, #25
 3564 0094 F9D5     		bpl	.L437
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3565              		.loc 1 1343 0
 3566 0096 5A69     		ldr	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3567              		.loc 1 1346 0
 3568 0098 606B     		ldr	r0, [r4, #52]
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3569              		.loc 1 1343 0
 3570 009a 22F04002 		bic	r2, r2, #64
 3571 009e 5A61     		str	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3572              		.loc 1 1346 0
 3573 00a0 0028     		cmp	r0, #0
 3574 00a2 E0D1     		bne	.L423
 3575 00a4 F1E7     		b	.L437
 3576              	.L441:
ARM GAS  /tmp/ccS1Udqc.s 			page 119


 3577 00a6 00BF     		.align	2
 3578              	.L440:
 3579 00a8 00000000 		.word	UART_DMATxAbortCallback
 3580 00ac 00000000 		.word	UART_DMARxAbortCallback
 3581              		.cfi_endproc
 3582              	.LFE145:
 3584              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3585              		.align	1
 3586              		.p2align 2,,3
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3590              		.fpu fpv4-sp-d16
 3592              	UART_DMARxAbortCallback:
 3593              	.LFB174:
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3594              		.loc 1 2226 0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 3598              	.LVL289:
 3599 0000 08B5     		push	{r3, lr}
 3600              	.LCFI44:
 3601              		.cfi_def_cfa_offset 8
 3602              		.cfi_offset 3, -8
 3603              		.cfi_offset 14, -4
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3604              		.loc 1 2227 0
 3605 0002 836B     		ldr	r3, [r0, #56]
 3606              	.LVL290:
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3607              		.loc 1 2229 0
 3608 0004 596B     		ldr	r1, [r3, #52]
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3609              		.loc 1 2232 0
 3610 0006 1A6B     		ldr	r2, [r3, #48]
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3611              		.loc 1 2229 0
 3612 0008 0020     		movs	r0, #0
 3613              	.LVL291:
 3614 000a 0865     		str	r0, [r1, #80]
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3615              		.loc 1 2232 0
 3616 000c 12B1     		cbz	r2, .L443
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3617              		.loc 1 2234 0
 3618 000e 126D     		ldr	r2, [r2, #80]
 3619 0010 02B1     		cbz	r2, .L443
 3620 0012 08BD     		pop	{r3, pc}
 3621              	.LVL292:
 3622              	.L443:
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3623              		.loc 1 2241 0
 3624 0014 0022     		movs	r2, #0
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3625              		.loc 1 2248 0
 3626 0016 2021     		movs	r1, #32
ARM GAS  /tmp/ccS1Udqc.s 			page 120


2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3627              		.loc 1 2241 0
 3628 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3629              		.loc 1 2252 0
 3630 001a 1846     		mov	r0, r3
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3631              		.loc 1 2242 0
 3632 001c DA85     		strh	r2, [r3, #46]	@ movhi
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3633              		.loc 1 2245 0
 3634 001e DA63     		str	r2, [r3, #60]
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3635              		.loc 1 2248 0
 3636 0020 83F83910 		strb	r1, [r3, #57]
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3637              		.loc 1 2249 0
 3638 0024 83F83A10 		strb	r1, [r3, #58]
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3639              		.loc 1 2252 0
 3640 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3641              	.LVL293:
 3642 002c 08BD     		pop	{r3, pc}
 3643              		.cfi_endproc
 3644              	.LFE174:
 3646 002e 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3647              		.align	1
 3648              		.p2align 2,,3
 3649              		.syntax unified
 3650              		.thumb
 3651              		.thumb_func
 3652              		.fpu fpv4-sp-d16
 3654              	UART_DMATxAbortCallback:
 3655              	.LFB173:
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3656              		.loc 1 2188 0
 3657              		.cfi_startproc
 3658              		@ args = 0, pretend = 0, frame = 0
 3659              		@ frame_needed = 0, uses_anonymous_args = 0
 3660              	.LVL294:
 3661 0000 08B5     		push	{r3, lr}
 3662              	.LCFI45:
 3663              		.cfi_def_cfa_offset 8
 3664              		.cfi_offset 3, -8
 3665              		.cfi_offset 14, -4
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3666              		.loc 1 2189 0
 3667 0002 836B     		ldr	r3, [r0, #56]
 3668              	.LVL295:
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3669              		.loc 1 2191 0
 3670 0004 196B     		ldr	r1, [r3, #48]
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3671              		.loc 1 2194 0
 3672 0006 5A6B     		ldr	r2, [r3, #52]
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3673              		.loc 1 2191 0
ARM GAS  /tmp/ccS1Udqc.s 			page 121


 3674 0008 0020     		movs	r0, #0
 3675              	.LVL296:
 3676 000a 0865     		str	r0, [r1, #80]
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3677              		.loc 1 2194 0
 3678 000c 12B1     		cbz	r2, .L450
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3679              		.loc 1 2196 0
 3680 000e 126D     		ldr	r2, [r2, #80]
 3681 0010 02B1     		cbz	r2, .L450
 3682 0012 08BD     		pop	{r3, pc}
 3683              	.LVL297:
 3684              	.L450:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3685              		.loc 1 2203 0
 3686 0014 0022     		movs	r2, #0
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3687              		.loc 1 2210 0
 3688 0016 2021     		movs	r1, #32
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3689              		.loc 1 2203 0
 3690 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3691              		.loc 1 2214 0
 3692 001a 1846     		mov	r0, r3
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3693              		.loc 1 2204 0
 3694 001c DA85     		strh	r2, [r3, #46]	@ movhi
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3695              		.loc 1 2207 0
 3696 001e DA63     		str	r2, [r3, #60]
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3697              		.loc 1 2210 0
 3698 0020 83F83910 		strb	r1, [r3, #57]
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3699              		.loc 1 2211 0
 3700 0024 83F83A10 		strb	r1, [r3, #58]
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3701              		.loc 1 2214 0
 3702 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3703              	.LVL298:
 3704 002c 08BD     		pop	{r3, pc}
 3705              		.cfi_endproc
 3706              	.LFE173:
 3708 002e 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3709              		.align	1
 3710              		.p2align 2,,3
 3711              		.weak	HAL_UART_AbortTransmitCpltCallback
 3712              		.syntax unified
 3713              		.thumb
 3714              		.thumb_func
 3715              		.fpu fpv4-sp-d16
 3717              	HAL_UART_AbortTransmitCpltCallback:
 3718              	.LFB184:
 3719              		.cfi_startproc
 3720              		@ args = 0, pretend = 0, frame = 0
 3721              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccS1Udqc.s 			page 122


 3722              		@ link register save eliminated.
 3723 0000 7047     		bx	lr
 3724              		.cfi_endproc
 3725              	.LFE184:
 3727 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3728              		.align	1
 3729              		.p2align 2,,3
 3730              		.global	HAL_UART_AbortTransmit_IT
 3731              		.syntax unified
 3732              		.thumb
 3733              		.thumb_func
 3734              		.fpu fpv4-sp-d16
 3736              	HAL_UART_AbortTransmit_IT:
 3737              	.LFB146:
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3738              		.loc 1 1400 0
 3739              		.cfi_startproc
 3740              		@ args = 0, pretend = 0, frame = 0
 3741              		@ frame_needed = 0, uses_anonymous_args = 0
 3742              	.LVL299:
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3743              		.loc 1 1402 0
 3744 0000 0368     		ldr	r3, [r0]
 3745 0002 DA68     		ldr	r2, [r3, #12]
 3746 0004 22F0C002 		bic	r2, r2, #192
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3747              		.loc 1 1400 0
 3748 0008 10B5     		push	{r4, lr}
 3749              	.LCFI46:
 3750              		.cfi_def_cfa_offset 8
 3751              		.cfi_offset 4, -8
 3752              		.cfi_offset 14, -4
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3753              		.loc 1 1402 0
 3754 000a DA60     		str	r2, [r3, #12]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3755              		.loc 1 1405 0
 3756 000c 5A69     		ldr	r2, [r3, #20]
 3757 000e 12F08002 		ands	r2, r2, #128
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3758              		.loc 1 1400 0
 3759 0012 0446     		mov	r4, r0
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3760              		.loc 1 1405 0
 3761 0014 0DD0     		beq	.L458
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3762              		.loc 1 1407 0
 3763 0016 5A69     		ldr	r2, [r3, #20]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3764              		.loc 1 1410 0
 3765 0018 016B     		ldr	r1, [r0, #48]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3766              		.loc 1 1407 0
 3767 001a 22F08002 		bic	r2, r2, #128
 3768 001e 5A61     		str	r2, [r3, #20]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3769              		.loc 1 1410 0
ARM GAS  /tmp/ccS1Udqc.s 			page 123


 3770 0020 A1B1     		cbz	r1, .L459
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3771              		.loc 1 1414 0
 3772 0022 0E4B     		ldr	r3, .L466
 3773 0024 0B65     		str	r3, [r1, #80]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3774              		.loc 1 1417 0
 3775 0026 0846     		mov	r0, r1
 3776              	.LVL300:
 3777 0028 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3778              	.LVL301:
 3779 002c 48B9     		cbnz	r0, .L465
 3780              	.L460:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3781              		.loc 1 1448 0
 3782 002e 0020     		movs	r0, #0
 3783 0030 10BD     		pop	{r4, pc}
 3784              	.LVL302:
 3785              	.L458:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3786              		.loc 1 1441 0
 3787 0032 2023     		movs	r3, #32
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3788              		.loc 1 1438 0
 3789 0034 C284     		strh	r2, [r0, #38]	@ movhi
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3790              		.loc 1 1441 0
 3791 0036 80F83930 		strb	r3, [r0, #57]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3792              		.loc 1 1444 0
 3793 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3794              	.LVL303:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3795              		.loc 1 1448 0
 3796 003e 0020     		movs	r0, #0
 3797 0040 10BD     		pop	{r4, pc}
 3798              	.LVL304:
 3799              	.L465:
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3800              		.loc 1 1420 0
 3801 0042 206B     		ldr	r0, [r4, #48]
 3802 0044 036D     		ldr	r3, [r0, #80]
 3803 0046 9847     		blx	r3
 3804              	.LVL305:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3805              		.loc 1 1448 0
 3806 0048 0020     		movs	r0, #0
 3807 004a 10BD     		pop	{r4, pc}
 3808              	.LVL306:
 3809              	.L459:
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3810              		.loc 1 1429 0
 3811 004c 2023     		movs	r3, #32
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3812              		.loc 1 1426 0
 3813 004e C184     		strh	r1, [r0, #38]	@ movhi
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 124


 3814              		.loc 1 1429 0
 3815 0050 80F83930 		strb	r3, [r0, #57]
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3816              		.loc 1 1432 0
 3817 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3818              	.LVL307:
 3819 0058 E9E7     		b	.L460
 3820              	.L467:
 3821 005a 00BF     		.align	2
 3822              	.L466:
 3823 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3824              		.cfi_endproc
 3825              	.LFE146:
 3827              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3828              		.align	1
 3829              		.p2align 2,,3
 3830              		.syntax unified
 3831              		.thumb
 3832              		.thumb_func
 3833              		.fpu fpv4-sp-d16
 3835              	UART_DMATxOnlyAbortCallback:
 3836              	.LFB175:
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3837              		.loc 1 2264 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 0
 3840              		@ frame_needed = 0, uses_anonymous_args = 0
 3841              	.LVL308:
 3842 0000 08B5     		push	{r3, lr}
 3843              	.LCFI47:
 3844              		.cfi_def_cfa_offset 8
 3845              		.cfi_offset 3, -8
 3846              		.cfi_offset 14, -4
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3847              		.loc 1 2265 0
 3848 0002 836B     		ldr	r3, [r0, #56]
 3849              	.LVL309:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3850              		.loc 1 2267 0
 3851 0004 0021     		movs	r1, #0
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3852              		.loc 1 2270 0
 3853 0006 2022     		movs	r2, #32
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3854              		.loc 1 2267 0
 3855 0008 D984     		strh	r1, [r3, #38]	@ movhi
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3856              		.loc 1 2273 0
 3857 000a 1846     		mov	r0, r3
 3858              	.LVL310:
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3859              		.loc 1 2270 0
 3860 000c 83F83920 		strb	r2, [r3, #57]
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3861              		.loc 1 2273 0
 3862 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3863              	.LVL311:
ARM GAS  /tmp/ccS1Udqc.s 			page 125


 3864 0014 08BD     		pop	{r3, pc}
 3865              		.cfi_endproc
 3866              	.LFE175:
 3868 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3869              		.align	1
 3870              		.p2align 2,,3
 3871              		.weak	HAL_UART_AbortReceiveCpltCallback
 3872              		.syntax unified
 3873              		.thumb
 3874              		.thumb_func
 3875              		.fpu fpv4-sp-d16
 3877              	HAL_UART_AbortReceiveCpltCallback:
 3878              	.LFB156:
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3879              		.loc 1 1753 0
 3880              		.cfi_startproc
 3881              		@ args = 0, pretend = 0, frame = 0
 3882              		@ frame_needed = 0, uses_anonymous_args = 0
 3883              		@ link register save eliminated.
 3884              	.LVL312:
 3885 0000 7047     		bx	lr
 3886              		.cfi_endproc
 3887              	.LFE156:
 3889 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3890              		.align	1
 3891              		.p2align 2,,3
 3892              		.global	HAL_UART_AbortReceive_IT
 3893              		.syntax unified
 3894              		.thumb
 3895              		.thumb_func
 3896              		.fpu fpv4-sp-d16
 3898              	HAL_UART_AbortReceive_IT:
 3899              	.LFB147:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3900              		.loc 1 1465 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 0
 3903              		@ frame_needed = 0, uses_anonymous_args = 0
 3904              	.LVL313:
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3905              		.loc 1 1467 0
 3906 0000 0368     		ldr	r3, [r0]
 3907 0002 DA68     		ldr	r2, [r3, #12]
 3908 0004 22F49072 		bic	r2, r2, #288
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3909              		.loc 1 1465 0
 3910 0008 10B5     		push	{r4, lr}
 3911              	.LCFI48:
 3912              		.cfi_def_cfa_offset 8
 3913              		.cfi_offset 4, -8
 3914              		.cfi_offset 14, -4
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3915              		.loc 1 1467 0
 3916 000a DA60     		str	r2, [r3, #12]
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3917              		.loc 1 1468 0
 3918 000c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccS1Udqc.s 			page 126


 3919 000e 22F00102 		bic	r2, r2, #1
 3920 0012 5A61     		str	r2, [r3, #20]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3921              		.loc 1 1471 0
 3922 0014 5A69     		ldr	r2, [r3, #20]
 3923 0016 12F04002 		ands	r2, r2, #64
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3924              		.loc 1 1465 0
 3925 001a 0446     		mov	r4, r0
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3926              		.loc 1 1471 0
 3927 001c 0DD0     		beq	.L472
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3928              		.loc 1 1473 0
 3929 001e 5A69     		ldr	r2, [r3, #20]
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3930              		.loc 1 1476 0
 3931 0020 416B     		ldr	r1, [r0, #52]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3932              		.loc 1 1473 0
 3933 0022 22F04002 		bic	r2, r2, #64
 3934 0026 5A61     		str	r2, [r3, #20]
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3935              		.loc 1 1476 0
 3936 0028 A1B1     		cbz	r1, .L473
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3937              		.loc 1 1480 0
 3938 002a 0E4B     		ldr	r3, .L480
 3939 002c 0B65     		str	r3, [r1, #80]
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3940              		.loc 1 1483 0
 3941 002e 0846     		mov	r0, r1
 3942              	.LVL314:
 3943 0030 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3944              	.LVL315:
 3945 0034 48B9     		cbnz	r0, .L479
 3946              	.L474:
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3947              		.loc 1 1514 0
 3948 0036 0020     		movs	r0, #0
 3949 0038 10BD     		pop	{r4, pc}
 3950              	.LVL316:
 3951              	.L472:
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3952              		.loc 1 1507 0
 3953 003a 2023     		movs	r3, #32
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3954              		.loc 1 1504 0
 3955 003c C285     		strh	r2, [r0, #46]	@ movhi
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3956              		.loc 1 1507 0
 3957 003e 80F83A30 		strb	r3, [r0, #58]
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3958              		.loc 1 1510 0
 3959 0042 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3960              	.LVL317:
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccS1Udqc.s 			page 127


 3961              		.loc 1 1514 0
 3962 0046 0020     		movs	r0, #0
 3963 0048 10BD     		pop	{r4, pc}
 3964              	.LVL318:
 3965              	.L479:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3966              		.loc 1 1486 0
 3967 004a 606B     		ldr	r0, [r4, #52]
 3968 004c 036D     		ldr	r3, [r0, #80]
 3969 004e 9847     		blx	r3
 3970              	.LVL319:
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3971              		.loc 1 1514 0
 3972 0050 0020     		movs	r0, #0
 3973 0052 10BD     		pop	{r4, pc}
 3974              	.LVL320:
 3975              	.L473:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3976              		.loc 1 1495 0
 3977 0054 2023     		movs	r3, #32
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3978              		.loc 1 1492 0
 3979 0056 C185     		strh	r1, [r0, #46]	@ movhi
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3980              		.loc 1 1495 0
 3981 0058 80F83A30 		strb	r3, [r0, #58]
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3982              		.loc 1 1498 0
 3983 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3984              	.LVL321:
 3985 0060 E9E7     		b	.L474
 3986              	.L481:
 3987 0062 00BF     		.align	2
 3988              	.L480:
 3989 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3990              		.cfi_endproc
 3991              	.LFE147:
 3993              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3994              		.align	1
 3995              		.p2align 2,,3
 3996              		.syntax unified
 3997              		.thumb
 3998              		.thumb_func
 3999              		.fpu fpv4-sp-d16
 4001              	UART_DMARxOnlyAbortCallback:
 4002              	.LFB176:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4003              		.loc 1 2285 0
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 0
 4006              		@ frame_needed = 0, uses_anonymous_args = 0
 4007              	.LVL322:
 4008 0000 08B5     		push	{r3, lr}
 4009              	.LCFI49:
 4010              		.cfi_def_cfa_offset 8
 4011              		.cfi_offset 3, -8
 4012              		.cfi_offset 14, -4
ARM GAS  /tmp/ccS1Udqc.s 			page 128


2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4013              		.loc 1 2286 0
 4014 0002 836B     		ldr	r3, [r0, #56]
 4015              	.LVL323:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4016              		.loc 1 2288 0
 4017 0004 0021     		movs	r1, #0
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4018              		.loc 1 2291 0
 4019 0006 2022     		movs	r2, #32
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4020              		.loc 1 2288 0
 4021 0008 D985     		strh	r1, [r3, #46]	@ movhi
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4022              		.loc 1 2294 0
 4023 000a 1846     		mov	r0, r3
 4024              	.LVL324:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4025              		.loc 1 2291 0
 4026 000c 83F83A20 		strb	r2, [r3, #58]
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4027              		.loc 1 2294 0
 4028 0010 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4029              	.LVL325:
 4030 0014 08BD     		pop	{r3, pc}
 4031              		.cfi_endproc
 4032              	.LFE176:
 4034 0016 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4035              		.align	1
 4036              		.p2align 2,,3
 4037              		.global	HAL_LIN_SendBreak
 4038              		.syntax unified
 4039              		.thumb
 4040              		.thumb_func
 4041              		.fpu fpv4-sp-d16
 4043              	HAL_LIN_SendBreak:
 4044              	.LFB157:
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4045              		.loc 1 1790 0
 4046              		.cfi_startproc
 4047              		@ args = 0, pretend = 0, frame = 0
 4048              		@ frame_needed = 0, uses_anonymous_args = 0
 4049              		@ link register save eliminated.
 4050              	.LVL326:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4051              		.loc 1 1795 0
 4052 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4053 0004 012A     		cmp	r2, #1
 4054 0006 13D0     		beq	.L486
 4055 0008 0346     		mov	r3, r0
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4056              		.loc 1 1797 0 discriminator 2
 4057 000a 2422     		movs	r2, #36
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4058              		.loc 1 1800 0 discriminator 2
 4059 000c 0068     		ldr	r0, [r0]
 4060              	.LVL327:
ARM GAS  /tmp/ccS1Udqc.s 			page 129


1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4061              		.loc 1 1790 0 discriminator 2
 4062 000e 10B4     		push	{r4}
 4063              	.LCFI50:
 4064              		.cfi_def_cfa_offset 4
 4065              		.cfi_offset 4, -4
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4066              		.loc 1 1797 0 discriminator 2
 4067 0010 83F83920 		strb	r2, [r3, #57]
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4068              		.loc 1 1800 0 discriminator 2
 4069 0014 C268     		ldr	r2, [r0, #12]
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4070              		.loc 1 1802 0 discriminator 2
 4071 0016 2024     		movs	r4, #32
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4072              		.loc 1 1805 0 discriminator 2
 4073 0018 0021     		movs	r1, #0
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4074              		.loc 1 1800 0 discriminator 2
 4075 001a 42F00102 		orr	r2, r2, #1
 4076 001e C260     		str	r2, [r0, #12]
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4077              		.loc 1 1807 0 discriminator 2
 4078 0020 0846     		mov	r0, r1
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4079              		.loc 1 1802 0 discriminator 2
 4080 0022 83F83940 		strb	r4, [r3, #57]
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4081              		.loc 1 1805 0 discriminator 2
 4082 0026 83F83810 		strb	r1, [r3, #56]
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4083              		.loc 1 1808 0 discriminator 2
 4084 002a 5DF8044B 		ldr	r4, [sp], #4
 4085              	.LCFI51:
 4086              		.cfi_restore 4
 4087              		.cfi_def_cfa_offset 0
 4088 002e 7047     		bx	lr
 4089              	.LVL328:
 4090              	.L486:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4091              		.loc 1 1795 0
 4092 0030 0220     		movs	r0, #2
 4093              	.LVL329:
 4094 0032 7047     		bx	lr
 4095              		.cfi_endproc
 4096              	.LFE157:
 4098              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4099              		.align	1
 4100              		.p2align 2,,3
 4101              		.global	HAL_MultiProcessor_EnterMuteMode
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4105              		.fpu fpv4-sp-d16
 4107              	HAL_MultiProcessor_EnterMuteMode:
 4108              	.LFB158:
ARM GAS  /tmp/ccS1Udqc.s 			page 130


1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4109              		.loc 1 1817 0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 0
 4112              		@ frame_needed = 0, uses_anonymous_args = 0
 4113              		@ link register save eliminated.
 4114              	.LVL330:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4115              		.loc 1 1822 0
 4116 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4117 0004 012A     		cmp	r2, #1
 4118 0006 13D0     		beq	.L493
 4119 0008 0346     		mov	r3, r0
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4120              		.loc 1 1824 0 discriminator 2
 4121 000a 2422     		movs	r2, #36
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4122              		.loc 1 1827 0 discriminator 2
 4123 000c 0068     		ldr	r0, [r0]
 4124              	.LVL331:
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4125              		.loc 1 1817 0 discriminator 2
 4126 000e 10B4     		push	{r4}
 4127              	.LCFI52:
 4128              		.cfi_def_cfa_offset 4
 4129              		.cfi_offset 4, -4
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4130              		.loc 1 1824 0 discriminator 2
 4131 0010 83F83920 		strb	r2, [r3, #57]
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4132              		.loc 1 1827 0 discriminator 2
 4133 0014 C268     		ldr	r2, [r0, #12]
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4134              		.loc 1 1829 0 discriminator 2
 4135 0016 2024     		movs	r4, #32
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4136              		.loc 1 1832 0 discriminator 2
 4137 0018 0021     		movs	r1, #0
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4138              		.loc 1 1827 0 discriminator 2
 4139 001a 42F00202 		orr	r2, r2, #2
 4140 001e C260     		str	r2, [r0, #12]
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4141              		.loc 1 1834 0 discriminator 2
 4142 0020 0846     		mov	r0, r1
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4143              		.loc 1 1829 0 discriminator 2
 4144 0022 83F83940 		strb	r4, [r3, #57]
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4145              		.loc 1 1832 0 discriminator 2
 4146 0026 83F83810 		strb	r1, [r3, #56]
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4147              		.loc 1 1835 0 discriminator 2
 4148 002a 5DF8044B 		ldr	r4, [sp], #4
 4149              	.LCFI53:
 4150              		.cfi_restore 4
 4151              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccS1Udqc.s 			page 131


 4152 002e 7047     		bx	lr
 4153              	.LVL332:
 4154              	.L493:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4155              		.loc 1 1822 0
 4156 0030 0220     		movs	r0, #2
 4157              	.LVL333:
 4158 0032 7047     		bx	lr
 4159              		.cfi_endproc
 4160              	.LFE158:
 4162              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4163              		.align	1
 4164              		.p2align 2,,3
 4165              		.global	HAL_MultiProcessor_ExitMuteMode
 4166              		.syntax unified
 4167              		.thumb
 4168              		.thumb_func
 4169              		.fpu fpv4-sp-d16
 4171              	HAL_MultiProcessor_ExitMuteMode:
 4172              	.LFB159:
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4173              		.loc 1 1844 0
 4174              		.cfi_startproc
 4175              		@ args = 0, pretend = 0, frame = 0
 4176              		@ frame_needed = 0, uses_anonymous_args = 0
 4177              		@ link register save eliminated.
 4178              	.LVL334:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4179              		.loc 1 1849 0
 4180 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4181 0004 012A     		cmp	r2, #1
 4182 0006 13D0     		beq	.L500
 4183 0008 0346     		mov	r3, r0
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4184              		.loc 1 1851 0 discriminator 2
 4185 000a 2422     		movs	r2, #36
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4186              		.loc 1 1854 0 discriminator 2
 4187 000c 0068     		ldr	r0, [r0]
 4188              	.LVL335:
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4189              		.loc 1 1844 0 discriminator 2
 4190 000e 10B4     		push	{r4}
 4191              	.LCFI54:
 4192              		.cfi_def_cfa_offset 4
 4193              		.cfi_offset 4, -4
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4194              		.loc 1 1851 0 discriminator 2
 4195 0010 83F83920 		strb	r2, [r3, #57]
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4196              		.loc 1 1854 0 discriminator 2
 4197 0014 C268     		ldr	r2, [r0, #12]
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4198              		.loc 1 1856 0 discriminator 2
 4199 0016 2024     		movs	r4, #32
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4200              		.loc 1 1859 0 discriminator 2
ARM GAS  /tmp/ccS1Udqc.s 			page 132


 4201 0018 0021     		movs	r1, #0
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4202              		.loc 1 1854 0 discriminator 2
 4203 001a 22F00202 		bic	r2, r2, #2
 4204 001e C260     		str	r2, [r0, #12]
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4205              		.loc 1 1861 0 discriminator 2
 4206 0020 0846     		mov	r0, r1
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4207              		.loc 1 1856 0 discriminator 2
 4208 0022 83F83940 		strb	r4, [r3, #57]
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4209              		.loc 1 1859 0 discriminator 2
 4210 0026 83F83810 		strb	r1, [r3, #56]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4211              		.loc 1 1862 0 discriminator 2
 4212 002a 5DF8044B 		ldr	r4, [sp], #4
 4213              	.LCFI55:
 4214              		.cfi_restore 4
 4215              		.cfi_def_cfa_offset 0
 4216 002e 7047     		bx	lr
 4217              	.LVL336:
 4218              	.L500:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4219              		.loc 1 1849 0
 4220 0030 0220     		movs	r0, #2
 4221              	.LVL337:
 4222 0032 7047     		bx	lr
 4223              		.cfi_endproc
 4224              	.LFE159:
 4226              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4227              		.align	1
 4228              		.p2align 2,,3
 4229              		.global	HAL_HalfDuplex_EnableTransmitter
 4230              		.syntax unified
 4231              		.thumb
 4232              		.thumb_func
 4233              		.fpu fpv4-sp-d16
 4235              	HAL_HalfDuplex_EnableTransmitter:
 4236              	.LFB160:
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4237              		.loc 1 1871 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              		@ link register save eliminated.
 4242              	.LVL338:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4243              		.loc 1 1875 0
 4244 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4245 0004 012A     		cmp	r2, #1
 4246 0006 15D0     		beq	.L507
 4247 0008 0346     		mov	r3, r0
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4248              		.loc 1 1877 0 discriminator 2
 4249 000a 2422     		movs	r2, #36
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccS1Udqc.s 			page 133


 4250              		.loc 1 1880 0 discriminator 2
 4251 000c 0068     		ldr	r0, [r0]
 4252              	.LVL339:
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4253              		.loc 1 1871 0 discriminator 2
 4254 000e 10B4     		push	{r4}
 4255              	.LCFI56:
 4256              		.cfi_def_cfa_offset 4
 4257              		.cfi_offset 4, -4
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4258              		.loc 1 1877 0 discriminator 2
 4259 0010 83F83920 		strb	r2, [r3, #57]
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4260              		.loc 1 1880 0 discriminator 2
 4261 0014 C268     		ldr	r2, [r0, #12]
 4262              	.LVL340:
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4263              		.loc 1 1883 0 discriminator 2
 4264 0016 22F00C02 		bic	r2, r2, #12
 4265              	.LVL341:
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4266              		.loc 1 1891 0 discriminator 2
 4267 001a 2024     		movs	r4, #32
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4268              		.loc 1 1894 0 discriminator 2
 4269 001c 0021     		movs	r1, #0
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4270              		.loc 1 1886 0 discriminator 2
 4271 001e 42F00802 		orr	r2, r2, #8
 4272              	.LVL342:
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4273              		.loc 1 1889 0 discriminator 2
 4274 0022 C260     		str	r2, [r0, #12]
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4275              		.loc 1 1896 0 discriminator 2
 4276 0024 0846     		mov	r0, r1
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4277              		.loc 1 1891 0 discriminator 2
 4278 0026 83F83940 		strb	r4, [r3, #57]
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4279              		.loc 1 1894 0 discriminator 2
 4280 002a 83F83810 		strb	r1, [r3, #56]
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4281              		.loc 1 1897 0 discriminator 2
 4282 002e 5DF8044B 		ldr	r4, [sp], #4
 4283              	.LCFI57:
 4284              		.cfi_restore 4
 4285              		.cfi_def_cfa_offset 0
 4286 0032 7047     		bx	lr
 4287              	.LVL343:
 4288              	.L507:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4289              		.loc 1 1875 0
 4290 0034 0220     		movs	r0, #2
 4291              	.LVL344:
 4292 0036 7047     		bx	lr
 4293              		.cfi_endproc
ARM GAS  /tmp/ccS1Udqc.s 			page 134


 4294              	.LFE160:
 4296              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4297              		.align	1
 4298              		.p2align 2,,3
 4299              		.global	HAL_HalfDuplex_EnableReceiver
 4300              		.syntax unified
 4301              		.thumb
 4302              		.thumb_func
 4303              		.fpu fpv4-sp-d16
 4305              	HAL_HalfDuplex_EnableReceiver:
 4306              	.LFB161:
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4307              		.loc 1 1906 0
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 0
 4310              		@ frame_needed = 0, uses_anonymous_args = 0
 4311              		@ link register save eliminated.
 4312              	.LVL345:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4313              		.loc 1 1910 0
 4314 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4315 0004 012A     		cmp	r2, #1
 4316 0006 15D0     		beq	.L514
 4317 0008 0346     		mov	r3, r0
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4318              		.loc 1 1912 0 discriminator 2
 4319 000a 2422     		movs	r2, #36
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4320              		.loc 1 1915 0 discriminator 2
 4321 000c 0068     		ldr	r0, [r0]
 4322              	.LVL346:
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4323              		.loc 1 1906 0 discriminator 2
 4324 000e 10B4     		push	{r4}
 4325              	.LCFI58:
 4326              		.cfi_def_cfa_offset 4
 4327              		.cfi_offset 4, -4
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4328              		.loc 1 1912 0 discriminator 2
 4329 0010 83F83920 		strb	r2, [r3, #57]
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4330              		.loc 1 1915 0 discriminator 2
 4331 0014 C268     		ldr	r2, [r0, #12]
 4332              	.LVL347:
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4333              		.loc 1 1918 0 discriminator 2
 4334 0016 22F00C02 		bic	r2, r2, #12
 4335              	.LVL348:
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4336              		.loc 1 1926 0 discriminator 2
 4337 001a 2024     		movs	r4, #32
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4338              		.loc 1 1929 0 discriminator 2
 4339 001c 0021     		movs	r1, #0
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4340              		.loc 1 1921 0 discriminator 2
 4341 001e 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccS1Udqc.s 			page 135


 4342              	.LVL349:
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4343              		.loc 1 1924 0 discriminator 2
 4344 0022 C260     		str	r2, [r0, #12]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4345              		.loc 1 1931 0 discriminator 2
 4346 0024 0846     		mov	r0, r1
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4347              		.loc 1 1926 0 discriminator 2
 4348 0026 83F83940 		strb	r4, [r3, #57]
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4349              		.loc 1 1929 0 discriminator 2
 4350 002a 83F83810 		strb	r1, [r3, #56]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4351              		.loc 1 1932 0 discriminator 2
 4352 002e 5DF8044B 		ldr	r4, [sp], #4
 4353              	.LCFI59:
 4354              		.cfi_restore 4
 4355              		.cfi_def_cfa_offset 0
 4356 0032 7047     		bx	lr
 4357              	.LVL350:
 4358              	.L514:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4359              		.loc 1 1910 0
 4360 0034 0220     		movs	r0, #2
 4361              	.LVL351:
 4362 0036 7047     		bx	lr
 4363              		.cfi_endproc
 4364              	.LFE161:
 4366              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4367              		.align	1
 4368              		.p2align 2,,3
 4369              		.global	HAL_UART_GetState
 4370              		.syntax unified
 4371              		.thumb
 4372              		.thumb_func
 4373              		.fpu fpv4-sp-d16
 4375              	HAL_UART_GetState:
 4376              	.LFB162:
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4377              		.loc 1 1963 0
 4378              		.cfi_startproc
 4379              		@ args = 0, pretend = 0, frame = 0
 4380              		@ frame_needed = 0, uses_anonymous_args = 0
 4381              		@ link register save eliminated.
 4382              	.LVL352:
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4383              		.loc 1 1965 0
 4384 0000 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 4385              	.LVL353:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4386              		.loc 1 1966 0
 4387 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4388              	.LVL354:
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4389              		.loc 1 1969 0
 4390 0008 1043     		orrs	r0, r0, r2
ARM GAS  /tmp/ccS1Udqc.s 			page 136


 4391              	.LVL355:
 4392 000a 7047     		bx	lr
 4393              		.cfi_endproc
 4394              	.LFE162:
 4396              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4397              		.align	1
 4398              		.p2align 2,,3
 4399              		.global	HAL_UART_GetError
 4400              		.syntax unified
 4401              		.thumb
 4402              		.thumb_func
 4403              		.fpu fpv4-sp-d16
 4405              	HAL_UART_GetError:
 4406              	.LFB163:
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4407              		.loc 1 1978 0
 4408              		.cfi_startproc
 4409              		@ args = 0, pretend = 0, frame = 0
 4410              		@ frame_needed = 0, uses_anonymous_args = 0
 4411              		@ link register save eliminated.
 4412              	.LVL356:
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4413              		.loc 1 1979 0
 4414 0000 C06B     		ldr	r0, [r0, #60]
 4415              	.LVL357:
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4416              		.loc 1 1980 0
 4417 0002 7047     		bx	lr
 4418              		.cfi_endproc
 4419              	.LFE163:
 4421              		.text
 4422              	.Letext0:
 4423              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4424              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4425              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4426              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4427              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 4428              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4429              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 4430              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 4431              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 4432              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 4433              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4434              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4435              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4436              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4437              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccS1Udqc.s 			page 137


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccS1Udqc.s:16     .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccS1Udqc.s:23     .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccS1Udqc.s:346    .text.UART_SetConfig:00000000000002f8 $d
     /tmp/ccS1Udqc.s:352    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccS1Udqc.s:360    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccS1Udqc.s:371    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccS1Udqc.s:379    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccS1Udqc.s:468    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccS1Udqc.s:476    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccS1Udqc.s:569    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccS1Udqc.s:577    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccS1Udqc.s:681    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccS1Udqc.s:689    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccS1Udqc.s:800    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccS1Udqc.s:808    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccS1Udqc.s:819    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccS1Udqc.s:827    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccS1Udqc.s:876    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccS1Udqc.s:884    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccS1Udqc.s:1155   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccS1Udqc.s:1163   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccS1Udqc.s:1420   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccS1Udqc.s:1428   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccS1Udqc.s:1505   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccS1Udqc.s:1513   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccS1Udqc.s:1596   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccS1Udqc.s:1604   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccS1Udqc.s:1711   .text.HAL_UART_Transmit_DMA:000000000000006c $d
     /tmp/ccS1Udqc.s:2510   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccS1Udqc.s:2686   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccS1Udqc.s:2440   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccS1Udqc.s:1718   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccS1Udqc.s:1726   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccS1Udqc.s:1836   .text.HAL_UART_Receive_DMA:0000000000000078 $d
     /tmp/ccS1Udqc.s:2559   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccS1Udqc.s:2637   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccS1Udqc.s:1843   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccS1Udqc.s:1851   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccS1Udqc.s:1946   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccS1Udqc.s:1954   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccS1Udqc.s:2052   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccS1Udqc.s:2060   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccS1Udqc.s:2182   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccS1Udqc.s:2190   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccS1Udqc.s:2280   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccS1Udqc.s:2288   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccS1Udqc.s:2345   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccS1Udqc.s:2353   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccS1Udqc.s:2414   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:2422   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccS1Udqc.s:2433   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccS1Udqc.s:2484   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:2492   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccS1Udqc.s:2503   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccS1Udqc.s:2533   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccS1Udqc.s 			page 138


     /tmp/ccS1Udqc.s:2541   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccS1Udqc.s:2552   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccS1Udqc.s:2611   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:2619   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccS1Udqc.s:2630   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccS1Udqc.s:2660   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:2668   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccS1Udqc.s:2679   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccS1Udqc.s:2785   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccS1Udqc.s:2793   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccS1Udqc.s:3365   .text.HAL_UART_IRQHandler:0000000000000280 $d
     /tmp/ccS1Udqc.s:3381   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccS1Udqc.s:3374   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccS1Udqc.s:3412   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3420   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccS1Udqc.s:3431   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccS1Udqc.s:3439   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccS1Udqc.s:3579   .text.HAL_UART_Abort_IT:00000000000000a8 $d
     /tmp/ccS1Udqc.s:3654   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccS1Udqc.s:3592   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccS1Udqc.s:3585   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3647   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3709   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3717   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccS1Udqc.s:3728   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccS1Udqc.s:3736   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccS1Udqc.s:3823   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
     /tmp/ccS1Udqc.s:3835   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccS1Udqc.s:3828   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3869   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:3877   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccS1Udqc.s:3890   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccS1Udqc.s:3898   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccS1Udqc.s:3989   .text.HAL_UART_AbortReceive_IT:0000000000000064 $d
     /tmp/ccS1Udqc.s:4001   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccS1Udqc.s:3994   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccS1Udqc.s:4035   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccS1Udqc.s:4043   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccS1Udqc.s:4099   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccS1Udqc.s:4107   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccS1Udqc.s:4163   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccS1Udqc.s:4171   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccS1Udqc.s:4227   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccS1Udqc.s:4235   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccS1Udqc.s:4297   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccS1Udqc.s:4305   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccS1Udqc.s:4367   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccS1Udqc.s:4375   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccS1Udqc.s:4397   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccS1Udqc.s:4405   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
ARM GAS  /tmp/ccS1Udqc.s 			page 139


HAL_DMA_Abort
HAL_DMA_Abort_IT
