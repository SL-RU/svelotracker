ARM GAS  /tmp/ccEXHUTi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"dma.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_DMA_Init,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	MX_DMA_Init
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_DMA_Init:
  25              	.LFB126:
  26              		.file 1 "Src/dma.c"
   1:Src/dma.c     **** /**
   2:Src/dma.c     ****   ******************************************************************************
   3:Src/dma.c     ****   * File Name          : dma.c
   4:Src/dma.c     ****   * Description        : This file provides code for the configuration
   5:Src/dma.c     ****   *                      of all the requested memory to memory DMA transfers.
   6:Src/dma.c     ****   ******************************************************************************
   7:Src/dma.c     ****   *
   8:Src/dma.c     ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
   9:Src/dma.c     ****   * All rights reserved.
  10:Src/dma.c     ****   *
  11:Src/dma.c     ****   * Redistribution and use in source and binary forms, with or without 
  12:Src/dma.c     ****   * modification, are permitted, provided that the following conditions are met:
  13:Src/dma.c     ****   *
  14:Src/dma.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  15:Src/dma.c     ****   *    this list of conditions and the following disclaimer.
  16:Src/dma.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:Src/dma.c     ****   *    this list of conditions and the following disclaimer in the documentation
  18:Src/dma.c     ****   *    and/or other materials provided with the distribution.
  19:Src/dma.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  20:Src/dma.c     ****   *    contributors to this software may be used to endorse or promote products 
  21:Src/dma.c     ****   *    derived from this software without specific written permission.
  22:Src/dma.c     ****   * 4. This software, including modifications and/or derivative works of this 
  23:Src/dma.c     ****   *    software, must execute solely and exclusively on microcontroller or
  24:Src/dma.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  25:Src/dma.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  26:Src/dma.c     ****   *    this license is void and will automatically terminate your rights under 
  27:Src/dma.c     ****   *    this license. 
  28:Src/dma.c     ****   *
  29:Src/dma.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  30:Src/dma.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  31:Src/dma.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  32:Src/dma.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
ARM GAS  /tmp/ccEXHUTi.s 			page 2


  33:Src/dma.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  34:Src/dma.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  35:Src/dma.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  36:Src/dma.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  37:Src/dma.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  38:Src/dma.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  39:Src/dma.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  40:Src/dma.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  41:Src/dma.c     ****   *
  42:Src/dma.c     ****   ******************************************************************************
  43:Src/dma.c     ****   */
  44:Src/dma.c     **** /* Includes ------------------------------------------------------------------*/
  45:Src/dma.c     **** #include "dma.h"
  46:Src/dma.c     **** 
  47:Src/dma.c     **** /* USER CODE BEGIN 0 */
  48:Src/dma.c     **** 
  49:Src/dma.c     **** /* USER CODE END 0 */
  50:Src/dma.c     **** 
  51:Src/dma.c     **** /*----------------------------------------------------------------------------*/
  52:Src/dma.c     **** /* Configure DMA                                                              */
  53:Src/dma.c     **** /*----------------------------------------------------------------------------*/
  54:Src/dma.c     **** 
  55:Src/dma.c     **** /* USER CODE BEGIN 1 */
  56:Src/dma.c     **** 
  57:Src/dma.c     **** /* USER CODE END 1 */
  58:Src/dma.c     **** DMA_HandleTypeDef hdma_memtomem_dma2_stream0;
  59:Src/dma.c     **** 
  60:Src/dma.c     **** /** 
  61:Src/dma.c     ****   * Enable DMA controller clock
  62:Src/dma.c     ****   * Configure DMA for memory to memory transfers
  63:Src/dma.c     ****   *   hdma_memtomem_dma2_stream0
  64:Src/dma.c     ****   */
  65:Src/dma.c     **** void MX_DMA_Init(void) 
  66:Src/dma.c     **** {
  27              		.loc 1 66 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42              	.LBB2:
  67:Src/dma.c     ****   /* DMA controller clock enable */
  68:Src/dma.c     ****   __HAL_RCC_DMA2_CLK_ENABLE();
  43              		.loc 1 68 0
  44 0004 0022     		movs	r2, #0
  45 0006 1C49     		ldr	r1, .L8
  46 0008 0192     		str	r2, [sp, #4]
  47 000a 086B     		ldr	r0, [r1, #48]
ARM GAS  /tmp/ccEXHUTi.s 			page 3


  48              	.LBE2:
  69:Src/dma.c     **** 
  70:Src/dma.c     ****   /* Configure DMA request hdma_memtomem_dma2_stream0 on DMA2_Stream0 */
  71:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Instance = DMA2_Stream0;
  49              		.loc 1 71 0
  50 000c 1B4B     		ldr	r3, .L8+4
  51 000e 1C4F     		ldr	r7, .L8+8
  72:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Channel = DMA_CHANNEL_0;
  52              		.loc 1 72 0
  53 0010 5A60     		str	r2, [r3, #4]
  54              	.LBB3:
  68:Src/dma.c     **** 
  55              		.loc 1 68 0
  56 0012 40F48000 		orr	r0, r0, #4194304
  57 0016 0863     		str	r0, [r1, #48]
  58 0018 096B     		ldr	r1, [r1, #48]
  59              	.LBE3:
  73:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Direction = DMA_MEMORY_TO_MEMORY;
  74:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphInc = DMA_PINC_DISABLE;
  60              		.loc 1 74 0
  61 001a DA60     		str	r2, [r3, #12]
  62              	.LBB4:
  68:Src/dma.c     **** 
  63              		.loc 1 68 0
  64 001c 01F48001 		and	r1, r1, #4194304
  65 0020 0191     		str	r1, [sp, #4]
  66              	.LBE4:
  73:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Direction = DMA_MEMORY_TO_MEMORY;
  67              		.loc 1 73 0
  68 0022 8026     		movs	r6, #128
  75:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.MemInc = DMA_MINC_ENABLE;
  69              		.loc 1 75 0
  70 0024 4FF48065 		mov	r5, #1024
  76:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  77:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  78:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Mode = DMA_NORMAL;
  79:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Priority = DMA_PRIORITY_LOW;
  80:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
  71              		.loc 1 80 0
  72 0028 0424     		movs	r4, #4
  81:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
  73              		.loc 1 81 0
  74 002a 0321     		movs	r1, #3
  82:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.MemBurst = DMA_MBURST_SINGLE;
  83:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphBurst = DMA_PBURST_SINGLE;
  84:Src/dma.c     ****   if (HAL_DMA_Init(&hdma_memtomem_dma2_stream0) != HAL_OK)
  75              		.loc 1 84 0
  76 002c 1846     		mov	r0, r3
  77              	.LBB5:
  68:Src/dma.c     **** 
  78              		.loc 1 68 0
  79 002e DDF804E0 		ldr	lr, [sp, #4]
  80              	.LBE5:
  76:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  81              		.loc 1 76 0
  82 0032 5A61     		str	r2, [r3, #20]
  77:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Mode = DMA_NORMAL;
ARM GAS  /tmp/ccEXHUTi.s 			page 4


  83              		.loc 1 77 0
  84 0034 9A61     		str	r2, [r3, #24]
  78:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Priority = DMA_PRIORITY_LOW;
  85              		.loc 1 78 0
  86 0036 DA61     		str	r2, [r3, #28]
  79:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
  87              		.loc 1 79 0
  88 0038 1A62     		str	r2, [r3, #32]
  82:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphBurst = DMA_PBURST_SINGLE;
  89              		.loc 1 82 0
  90 003a DA62     		str	r2, [r3, #44]
  83:Src/dma.c     ****   if (HAL_DMA_Init(&hdma_memtomem_dma2_stream0) != HAL_OK)
  91              		.loc 1 83 0
  92 003c 1A63     		str	r2, [r3, #48]
  71:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.Channel = DMA_CHANNEL_0;
  93              		.loc 1 71 0
  94 003e 1F60     		str	r7, [r3]
  73:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphInc = DMA_PINC_DISABLE;
  95              		.loc 1 73 0
  96 0040 9E60     		str	r6, [r3, #8]
  75:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  97              		.loc 1 75 0
  98 0042 1D61     		str	r5, [r3, #16]
  80:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
  99              		.loc 1 80 0
 100 0044 5C62     		str	r4, [r3, #36]
  81:Src/dma.c     ****   hdma_memtomem_dma2_stream0.Init.MemBurst = DMA_MBURST_SINGLE;
 101              		.loc 1 81 0
 102 0046 9962     		str	r1, [r3, #40]
 103              		.loc 1 84 0
 104 0048 FFF7FEFF 		bl	HAL_DMA_Init
 105              	.LVL0:
 106 004c 08B1     		cbz	r0, .L2
  85:Src/dma.c     ****   {
  86:Src/dma.c     ****     Error_Handler();
 107              		.loc 1 86 0
 108 004e FFF7FEFF 		bl	Error_Handler
 109              	.LVL1:
 110              	.L2:
  87:Src/dma.c     ****   }
  88:Src/dma.c     ****         
  89:Src/dma.c     ****   
  90:Src/dma.c     **** 
  91:Src/dma.c     ****   /* DMA interrupt init */
  92:Src/dma.c     ****   /* DMA2_Stream2_IRQn interrupt configuration */
  93:Src/dma.c     ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 111              		.loc 1 93 0
 112 0052 0022     		movs	r2, #0
 113 0054 1146     		mov	r1, r2
 114 0056 3A20     		movs	r0, #58
 115 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 116              	.LVL2:
  94:Src/dma.c     ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 117              		.loc 1 94 0
 118 005c 3A20     		movs	r0, #58
 119 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 120              	.LVL3:
ARM GAS  /tmp/ccEXHUTi.s 			page 5


  95:Src/dma.c     ****   /* DMA2_Stream3_IRQn interrupt configuration */
  96:Src/dma.c     ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 121              		.loc 1 96 0
 122 0062 0022     		movs	r2, #0
 123 0064 1146     		mov	r1, r2
 124 0066 3B20     		movs	r0, #59
 125 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 126              	.LVL4:
  97:Src/dma.c     ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 127              		.loc 1 97 0
 128 006c 3B20     		movs	r0, #59
 129 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 130              	.LVL5:
  98:Src/dma.c     **** 
  99:Src/dma.c     **** }
 131              		.loc 1 99 0
 132 0072 03B0     		add	sp, sp, #12
 133              	.LCFI2:
 134              		.cfi_def_cfa_offset 20
 135              		@ sp needed
 136 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 137              	.L9:
 138 0076 00BF     		.align	2
 139              	.L8:
 140 0078 00380240 		.word	1073887232
 141 007c 00000000 		.word	hdma_memtomem_dma2_stream0
 142 0080 10640240 		.word	1073898512
 143              		.cfi_endproc
 144              	.LFE126:
 146              		.comm	hdma_memtomem_dma2_stream0,96,4
 147              		.text
 148              	.Letext0:
 149              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 150              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 151              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 152              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 153              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 154              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 155              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 156              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 157              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 158              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 159              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 160              		.file 13 "Inc/dma.h"
 161              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccEXHUTi.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dma.c
     /tmp/ccEXHUTi.s:16     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccEXHUTi.s:24     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccEXHUTi.s:140    .text.MX_DMA_Init:0000000000000078 $d
                            *COM*:0000000000000060 hdma_memtomem_dma2_stream0
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
